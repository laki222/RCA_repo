<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Azure.ResourceManager.Storage</name>
    </assembly>
    <members>
        <member name="T:Azure.ResourceManager.Storage.EncryptionScopeCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" />.
            To get an <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeCollection" /> instance call the GetEncryptionScopes method from an instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Lists all the encryption scopes available under the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_List</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Lists all the encryption scopes available under the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_List</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.EncryptionScopeData,System.Threading.CancellationToken)">
            <summary>
            Synchronously creates or updates an encryption scope under the specified storage account. If an encryption scope is already created and a subsequent request is issued with different properties, the encryption scope properties will be updated per the specified request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_Put</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Encryption scope properties to be used for the create or update. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="encryptionScopeName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.EncryptionScopeData,System.Threading.CancellationToken)">
            <summary>
            Synchronously creates or updates an encryption scope under the specified storage account. If an encryption scope is already created and a subsequent request is issued with different properties, the encryption scope properties will be updated per the specified request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_Put</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Encryption scope properties to be used for the create or update. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="encryptionScopeName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified encryption scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="encryptionScopeName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified encryption scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="encryptionScopeName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.GetAllAsync(System.Nullable{System.Int32},System.String,System.Nullable{Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType},System.Threading.CancellationToken)">
            <summary>
            Lists all the encryption scopes available under the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="maxpagesize"> Optional, specifies the maximum number of encryption scopes that will be included in the list response. </param>
            <param name="filter"> Optional. When specified, only encryption scope names starting with the filter will be listed. </param>
            <param name="include"> Optional, when specified, will list encryption scopes with the specific state. Defaults to All. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.GetAll(System.Nullable{System.Int32},System.String,System.Nullable{Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType},System.Threading.CancellationToken)">
            <summary>
            Lists all the encryption scopes available under the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="maxpagesize"> Optional, specifies the maximum number of encryption scopes that will be included in the list response. </param>
            <param name="filter"> Optional. When specified, only encryption scope names starting with the filter will be listed. </param>
            <param name="include"> Optional, when specified, will list encryption scopes with the specific state. Defaults to All. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="encryptionScopeName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="encryptionScopeName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="encryptionScopeName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="encryptionScopeName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StorageAccountRestoreBlobRangesOperation">
            <summary> A class representing the specific long-running operation StorageAccountRestoreBlobRangesOperation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountRestoreBlobRangesOperation.#ctor">
            <summary> Initializes a new instance of StorageAccountRestoreBlobRangesOperation for mocking. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountRestoreBlobRangesOperation.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            There are cases that operation id is not available, we return "NOT_SET" for unavailable operation id.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountRestoreBlobRangesOperation.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountRestoreBlobRangesOperation.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountRestoreBlobRangesOperation.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountRestoreBlobRangesOperation.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountRestoreBlobRangesOperation.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountRestoreBlobRangesOperation.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountRestoreBlobRangesOperation.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountRestoreBlobRangesOperation.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountRestoreBlobRangesOperation.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountRestoreBlobRangesOperation.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountRestoreBlobRangesOperation.GetCurrentStatusAsync(System.Threading.CancellationToken)">
            <summary> Gets interim status of the long-running operation. </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> The interim status of the long-running operation. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountRestoreBlobRangesOperation.GetCurrentStatus(System.Threading.CancellationToken)">
            <summary> Gets interim status of the long-running operation. </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> The interim status of the long-running operation. </returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion">
            <summary> Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion.Tls1_0">
            <summary> TLS1_0. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion.Tls1_1">
            <summary> TLS1_1. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion.Tls1_2">
            <summary> TLS1_2. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion.op_Equality(Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion,Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion.op_Inequality(Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion,Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion.Equals(Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy">
            <summary> Table Access Policy Properties Object. </summary>
            <summary> Table Access Policy Properties Object. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy.ExpiresOn">
            <summary> The deleted date. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy" />. </summary>
            <param name="permission"> Required. List of abbreviated permissions. Supported permission values include 'r','a','u','d'. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="permission" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy.#ctor(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy" />. </summary>
            <param name="startOn"> Start time of the access policy. </param>
            <param name="expireOn"> Expiry time of the access policy. </param>
            <param name="permission"> Required. List of abbreviated permissions. Supported permission values include 'r','a','u','d'. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy.StartOn">
            <summary> Start time of the access policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy.ExpireOn">
            <summary> Expiry time of the access policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy.Permission">
            <summary> Required. List of abbreviated permissions. Supported permission values include 'r','a','u','d'. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory">
            <summary> Model factory for models. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageSkuInformation(Azure.ResourceManager.Storage.Models.StorageSkuName,System.Nullable{Azure.ResourceManager.Storage.Models.StorageSkuTier},System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageKind},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageSkuCapability},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageSkuRestriction})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuInformation" />. </summary>
            <param name="name"> The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType. </param>
            <param name="tier"> The SKU tier. This is based on the SKU name. </param>
            <param name="resourceType"> The type of the resource, usually it is 'storageAccounts'. </param>
            <param name="kind"> Indicates the type of storage account. </param>
            <param name="locations"> The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). </param>
            <param name="capabilities"> The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc. </param>
            <param name="restrictions"> The restrictions because of which SKU cannot be used. This is empty if there are no restrictions. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuInformation" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageSkuCapability(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuCapability" />. </summary>
            <param name="name"> The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc. </param>
            <param name="value"> A string value to indicate states of given capability. Possibly 'true' or 'false'. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuCapability" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageSkuRestriction(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuRestriction" />. </summary>
            <param name="restrictionType"> The type of restrictions. As of now only possible value for this is location. </param>
            <param name="values"> The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted. </param>
            <param name="reasonCode"> The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuRestriction" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountNameAvailabilityContent(System.String,Azure.Core.ResourceType)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent" />. </summary>
            <param name="name"> The storage account name. </param>
            <param name="resourceType"> The type of resource, Microsoft.Storage/storageAccounts. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountNameAvailabilityResult(System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountNameUnavailableReason},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult" />. </summary>
            <param name="isNameAvailable"> Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used. </param>
            <param name="reason"> Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false. </param>
            <param name="message"> Gets an error message explaining the Reason value in more detail. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountCreateOrUpdateContent(Azure.ResourceManager.Storage.Models.StorageSku,Azure.ResourceManager.Storage.Models.StorageKind,Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Models.ManagedServiceIdentity,System.Nullable{Azure.ResourceManager.Storage.Models.AllowedCopyScope},System.Nullable{Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess},Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy,System.Nullable{System.Int32},Azure.ResourceManager.Storage.Models.StorageCustomDomain,Azure.ResourceManager.Storage.Models.StorageAccountEncryption,Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountAccessTier},Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.LargeFileSharesState},Azure.ResourceManager.Storage.Models.StorageRoutingPreference,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.ImmutableStorageAccount,System.Nullable{Azure.ResourceManager.Storage.Models.StorageDnsEndpointType})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent" />. </summary>
            <param name="sku"> Required. Gets or sets the SKU name. </param>
            <param name="kind"> Required. Indicates the type of storage account. </param>
            <param name="location"> Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed. </param>
            <param name="extendedLocation"> Optional. Set the extended location of the resource. If not set, the storage account will be created in Azure main region. Otherwise it will be created in the specified extended location. </param>
            <param name="tags"> Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters. </param>
            <param name="identity"> The identity of the resource. </param>
            <param name="allowedCopyScope"> Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. </param>
            <param name="publicNetworkAccess"> Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </param>
            <param name="sasPolicy"> SasPolicy assigned to the storage account. </param>
            <param name="keyExpirationPeriodInDays"> KeyPolicy assigned to the storage account. </param>
            <param name="customDomain"> User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property. </param>
            <param name="encryption"> Encryption settings to be used for server-side encryption for the storage account. </param>
            <param name="networkRuleSet"> Network rule set. </param>
            <param name="accessTier"> Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. </param>
            <param name="azureFilesIdentityBasedAuthentication"> Provides the identity based authentication settings for Azure Files. </param>
            <param name="enableHttpsTrafficOnly"> Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01. </param>
            <param name="isSftpEnabled"> Enables Secure File Transfer Protocol, if set to true. </param>
            <param name="isLocalUserEnabled"> Enables local users feature, if set to true. </param>
            <param name="isHnsEnabled"> Account HierarchicalNamespace enabled if sets to true. </param>
            <param name="largeFileSharesState"> Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. </param>
            <param name="routingPreference"> Maintains information about the network routing choice opted by the user for data transfer. </param>
            <param name="allowBlobPublicAccess"> Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property. </param>
            <param name="minimumTlsVersion"> Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. </param>
            <param name="allowSharedKeyAccess"> Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. </param>
            <param name="isNfsV3Enabled"> NFS 3.0 protocol support enabled if set to true. </param>
            <param name="allowCrossTenantReplication"> Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property. </param>
            <param name="isDefaultToOAuthAuthentication"> A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. </param>
            <param name="immutableStorageWithVersioning"> The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the new containers in the account by default. </param>
            <param name="dnsEndpointType"> Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageSku(Azure.ResourceManager.Storage.Models.StorageSkuName,System.Nullable{Azure.ResourceManager.Storage.Models.StorageSkuTier})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSku" />. </summary>
            <param name="name"> The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType. </param>
            <param name="tier"> The SKU tier. This is based on the SKU name. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageSku" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageEncryptionService(System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageEncryptionService" />. </summary>
            <param name="isEnabled"> A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is enabled by default today and cannot be disabled. </param>
            <param name="lastEnabledOn"> Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is encrypted at rest by default today and cannot be disabled. </param>
            <param name="keyType"> Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageEncryptionService" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountKeyVaultProperties(System.String,System.String,System.Uri,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties" />. </summary>
            <param name="keyName"> The name of KeyVault key. </param>
            <param name="keyVersion"> The version of KeyVault key. </param>
            <param name="keyVaultUri"> The Uri of KeyVault. </param>
            <param name="currentVersionedKeyIdentifier"> The object identifier of the current versioned Key Vault Key in use. </param>
            <param name="lastKeyRotationTimestamp"> Timestamp of last rotation of the Key Vault Key. </param>
            <param name="currentVersionedKeyExpirationTimestamp"> This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Storage.Models.StorageSku,System.Nullable{Azure.ResourceManager.Storage.Models.StorageKind},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ResourceManager.Storage.Models.StorageProvisioningState},Azure.ResourceManager.Storage.Models.StorageAccountEndpoints,System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountStatus},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountStatus},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Storage.Models.StorageCustomDomain,Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy,System.Nullable{System.Int32},Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime,Azure.ResourceManager.Storage.Models.StorageAccountEndpoints,Azure.ResourceManager.Storage.Models.StorageAccountEncryption,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountAccessTier},Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication,System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.GeoReplicationStatistics,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.LargeFileSharesState},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData},Azure.ResourceManager.Storage.Models.StorageRoutingPreference,Azure.ResourceManager.Storage.Models.BlobRestoreStatus,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess},Azure.ResourceManager.Storage.Models.ImmutableStorageAccount,System.Nullable{Azure.ResourceManager.Storage.Models.AllowedCopyScope},Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus,System.Nullable{Azure.ResourceManager.Storage.Models.StorageDnsEndpointType})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="sku"> Gets the SKU. </param>
            <param name="kind"> Gets the Kind. </param>
            <param name="identity"> The identity of the resource. </param>
            <param name="extendedLocation"> The extendedLocation of the resource. </param>
            <param name="provisioningState"> Gets the status of the storage account at the time the operation was called. </param>
            <param name="primaryEndpoints"> Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint. </param>
            <param name="primaryLocation"> Gets the location of the primary data center for the storage account. </param>
            <param name="statusOfPrimary"> Gets the status indicating whether the primary location of the storage account is available or unavailable. </param>
            <param name="lastGeoFailoverOn"> Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS. </param>
            <param name="secondaryLocation"> Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS. </param>
            <param name="statusOfSecondary"> Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS. </param>
            <param name="createdOn"> Gets the creation date and time of the storage account in UTC. </param>
            <param name="customDomain"> Gets the custom domain the user assigned to this storage account. </param>
            <param name="sasPolicy"> SasPolicy assigned to the storage account. </param>
            <param name="keyExpirationPeriodInDays"> KeyPolicy assigned to the storage account. </param>
            <param name="keyCreationTime"> Storage account keys creation time. </param>
            <param name="secondaryEndpoints"> Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS. </param>
            <param name="encryption"> Encryption settings to be used for server-side encryption for the storage account. </param>
            <param name="accessTier"> Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. </param>
            <param name="azureFilesIdentityBasedAuthentication"> Provides the identity based authentication settings for Azure Files. </param>
            <param name="enableHttpsTrafficOnly"> Allows https traffic only to storage service if sets to true. </param>
            <param name="networkRuleSet"> Network rule set. </param>
            <param name="isSftpEnabled"> Enables Secure File Transfer Protocol, if set to true. </param>
            <param name="isLocalUserEnabled"> Enables local users feature, if set to true. </param>
            <param name="isHnsEnabled"> Account HierarchicalNamespace enabled if sets to true. </param>
            <param name="geoReplicationStats"> Geo Replication Stats. </param>
            <param name="isFailoverInProgress"> If the failover is in progress, the value will be true, otherwise, it will be null. </param>
            <param name="largeFileSharesState"> Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. </param>
            <param name="privateEndpointConnections"> List of private endpoint connection associated with the specified storage account. </param>
            <param name="routingPreference"> Maintains information about the network routing choice opted by the user for data transfer. </param>
            <param name="blobRestoreStatus"> Blob restore status. </param>
            <param name="allowBlobPublicAccess"> Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property. </param>
            <param name="minimumTlsVersion"> Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. </param>
            <param name="allowSharedKeyAccess"> Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. </param>
            <param name="isNfsV3Enabled"> NFS 3.0 protocol support enabled if set to true. </param>
            <param name="allowCrossTenantReplication"> Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property. </param>
            <param name="isDefaultToOAuthAuthentication"> A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. </param>
            <param name="publicNetworkAccess"> Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </param>
            <param name="immutableStorageWithVersioning"> The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default. </param>
            <param name="allowedCopyScope"> Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. </param>
            <param name="storageAccountSkuConversionStatus"> This property is readOnly and is set by server during asynchronous storage account sku conversion operations. </param>
            <param name="dnsEndpointType"> Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.StorageAccountData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountEndpoints(System.Uri,System.Uri,System.Uri,System.Uri,System.Uri,System.Uri,Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints,Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints" />. </summary>
            <param name="blobUri"> Gets the blob endpoint. </param>
            <param name="queueUri"> Gets the queue endpoint. </param>
            <param name="tableUri"> Gets the table endpoint. </param>
            <param name="fileUri"> Gets the file endpoint. </param>
            <param name="webUri"> Gets the web endpoint. </param>
            <param name="dfsUri"> Gets the dfs endpoint. </param>
            <param name="microsoftEndpoints"> Gets the microsoft routing storage endpoints. </param>
            <param name="internetEndpoints"> Gets the internet routing storage endpoints. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountMicrosoftEndpoints(System.Uri,System.Uri,System.Uri,System.Uri,System.Uri,System.Uri)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints" />. </summary>
            <param name="blobUri"> Gets the blob endpoint. </param>
            <param name="queueUri"> Gets the queue endpoint. </param>
            <param name="tableUri"> Gets the table endpoint. </param>
            <param name="fileUri"> Gets the file endpoint. </param>
            <param name="webUri"> Gets the web endpoint. </param>
            <param name="dfsUri"> Gets the dfs endpoint. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountInternetEndpoints(System.Uri,System.Uri,System.Uri,System.Uri)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints" />. </summary>
            <param name="blobUri"> Gets the blob endpoint. </param>
            <param name="fileUri"> Gets the file endpoint. </param>
            <param name="webUri"> Gets the web endpoint. </param>
            <param name="dfsUri"> Gets the dfs endpoint. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountKeyCreationTime(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime" />. </summary>
            <param name="key1"></param>
            <param name="key2"></param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.GeoReplicationStatistics(System.Nullable{Azure.ResourceManager.Storage.Models.GeoReplicationStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics" />. </summary>
            <param name="status"> The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable. </param>
            <param name="lastSyncOn"> All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap. </param>
            <param name="canFailover"> A boolean flag which indicates whether or not account failover is supported for the account. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StoragePrivateEndpointConnectionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState,System.Nullable{Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="privateEndpointId"> The resource of private end point. </param>
            <param name="connectionState"> A collection of information about the state of the connection between service consumer and provider. </param>
            <param name="provisioningState"> The provisioning state of the private endpoint connection resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobRestoreStatus(System.Nullable{Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus},System.String,System.String,Azure.ResourceManager.Storage.Models.BlobRestoreContent)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreStatus" />. </summary>
            <param name="status"> The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed. </param>
            <param name="failureReason"> Failure reason when blob restore is failed. </param>
            <param name="restoreId"> Id for tracking blob restore request. </param>
            <param name="parameters"> Blob restore request parameters. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreStatus" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountSkuConversionStatus(System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState},System.Nullable{Azure.ResourceManager.Storage.Models.StorageSkuName},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus" />. </summary>
            <param name="skuConversionStatus"> This property indicates the current sku conversion status. </param>
            <param name="targetSkuName"> This property represents the target sku name to which the account sku is being converted asynchronously. </param>
            <param name="startOn"> This property represents the sku conversion start time. </param>
            <param name="endOn"> This property represents the sku conversion end time. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.DeletedAccountData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,System.Nullable{Azure.Core.AzureLocation},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.DeletedAccountData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="storageAccountResourceId"> Full resource id of the original storage account. </param>
            <param name="location"> Location of the deleted account. </param>
            <param name="restoreReference"> Can be used to attempt recovering this deleted account via PutStorageAccount API. </param>
            <param name="createdOn"> Creation time of the deleted account. </param>
            <param name="deletedOn"> Deletion time of the deleted account. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.DeletedAccountData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountKey(System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountKeyPermission},System.Nullable{System.DateTimeOffset})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKey" />. </summary>
            <param name="keyName"> Name of the key. </param>
            <param name="value"> Base 64-encoded value of the key. </param>
            <param name="permissions"> Permissions for the key -- read-only or full permissions. </param>
            <param name="createdOn"> Creation time of the key, in round trip date format. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKey" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageUsage(System.Nullable{Azure.ResourceManager.Storage.Models.StorageUsageUnit},System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.ResourceManager.Storage.Models.StorageUsageName)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsage" />. </summary>
            <param name="unit"> Gets the unit of measurement. </param>
            <param name="currentValue"> Gets the current count of the allocated resources in the subscription. </param>
            <param name="limit"> Gets the maximum count of the resources that can be allocated in the subscription. </param>
            <param name="name"> Gets the name of the type of usage. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsage" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageUsageName(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsageName" />. </summary>
            <param name="value"> Gets a string describing the resource name. </param>
            <param name="localizedValue"> Gets a localized string describing the resource name. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsageName" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.AccountSasContent(Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService,Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType,Azure.ResourceManager.Storage.Models.StorageAccountSasPermission,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol},System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.AccountSasContent" />. </summary>
            <param name="services"> The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f). </param>
            <param name="resourceTypes"> The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files. </param>
            <param name="permissions"> The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p). </param>
            <param name="ipAddressOrRange"> An IP address or a range of IP addresses from which to accept requests. </param>
            <param name="protocols"> The protocol permitted for a request made with the account SAS. </param>
            <param name="sharedAccessStartOn"> The time at which the SAS becomes valid. </param>
            <param name="sharedAccessExpireOn"> The time at which the shared access signature becomes invalid. </param>
            <param name="keyToSign"> The key to sign the account SAS token with. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.AccountSasContent" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.GetAccountSasResult(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.GetAccountSasResult" />. </summary>
            <param name="accountSasToken"> List SAS credentials of storage account. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.GetAccountSasResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.ServiceSasContent(System.String,System.Nullable{Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType},System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountSasPermission},System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ServiceSasContent" />. </summary>
            <param name="canonicalizedResource"> The canonical path to the signed resource. </param>
            <param name="resource"> The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s). </param>
            <param name="permissions"> The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p). </param>
            <param name="ipAddressOrRange"> An IP address or a range of IP addresses from which to accept requests. </param>
            <param name="protocols"> The protocol permitted for a request made with the account SAS. </param>
            <param name="sharedAccessStartOn"> The time at which the SAS becomes valid. </param>
            <param name="sharedAccessExpiryOn"> The time at which the shared access signature becomes invalid. </param>
            <param name="identifier"> A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table. </param>
            <param name="partitionKeyStart"> The start of partition key. </param>
            <param name="partitionKeyEnd"> The end of partition key. </param>
            <param name="rowKeyStart"> The start of row key. </param>
            <param name="rowKeyEnd"> The end of row key. </param>
            <param name="keyToSign"> The key to sign the account SAS token with. </param>
            <param name="cacheControl"> The response header override for cache control. </param>
            <param name="contentDisposition"> The response header override for content disposition. </param>
            <param name="contentEncoding"> The response header override for content encoding. </param>
            <param name="contentLanguage"> The response header override for content language. </param>
            <param name="contentType"> The response header override for content type. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.ServiceSasContent" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.GetServiceSasResult(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.GetServiceSasResult" />. </summary>
            <param name="serviceSasToken"> List service SAS credentials of specific resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.GetServiceSasResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountManagementPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.ManagementPolicyRule})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="lastModifiedOn"> Returns the date and time the ManagementPolicies was last modified. </param>
            <param name="rules"> The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobInventoryPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="lastModifiedOn"> Returns the last modified date and time of the blob inventory policy. </param>
            <param name="policySchema"> The storage account blob inventory policy object. It is composed of policy rules. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobInventoryPolicySchema(System.Boolean,System.String,Azure.ResourceManager.Storage.Models.BlobInventoryRuleType,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema" />. </summary>
            <param name="isEnabled"> Policy is enabled if set to true. </param>
            <param name="destination"> Deprecated Property from API version 2021-04-01 onwards, the required destination container name must be specified at the rule level 'policy.rule.destination'. </param>
            <param name="ruleType"> The valid value is Inventory. </param>
            <param name="rules"> The storage account blob inventory policy rules. The rule is applied when it is enabled. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StoragePrivateLinkResourceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="groupId"> The private link resource group id. </param>
            <param name="requiredMembers"> The private link resource required member names. </param>
            <param name="requiredZoneNames"> The private link resource Private link DNS zone name. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.ObjectReplicationPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{System.DateTimeOffset},System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="policyId"> A unique id for object replication policy. </param>
            <param name="enabledOn"> Indicates when the policy is enabled on the source account. </param>
            <param name="sourceAccount"> Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false. </param>
            <param name="destinationAccount"> Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false. </param>
            <param name="rules"> The storage account object replication rules. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageAccountLocalUserData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StoragePermissionScope},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageSshPublicKey},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="permissionScopes"> The permission scopes of the local user. </param>
            <param name="homeDirectory"> Optional, local user home directory. </param>
            <param name="sshAuthorizedKeys"> Optional, local user ssh authorized keys for SFTP. </param>
            <param name="sid"> A unique Security Identifier that is generated by the server. </param>
            <param name="hasSharedKey"> Indicates whether shared key exists. Set it to false to remove existing shared key. </param>
            <param name="hasSshKey"> Indicates whether ssh key exists. Set it to false to remove existing SSH key. </param>
            <param name="hasSshPassword"> Indicates whether ssh password exists. Set it to false to remove existing SSH password. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LocalUserKeys(System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageSshPublicKey},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LocalUserKeys" />. </summary>
            <param name="sshAuthorizedKeys"> Optional, local user ssh authorized keys for SFTP. </param>
            <param name="sharedKey"> Auto generated by the server for SMB authentication. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LocalUserKeys" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LocalUserRegeneratePasswordResult(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult" />. </summary>
            <param name="sshPassword"> Auto generated password by the server for SSH authentication if hasSshPassword is set to true on the creation of local user. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.EncryptionScopeData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.Storage.Models.EncryptionScopeSource},System.Nullable{Azure.ResourceManager.Storage.Models.EncryptionScopeState},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties,System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="source"> The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault. </param>
            <param name="state"> The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled. </param>
            <param name="createdOn"> Gets the creation date and time of the encryption scope in UTC. </param>
            <param name="lastModifiedOn"> Gets the last modification date and time of the encryption scope in UTC. </param>
            <param name="keyVaultProperties"> The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'. </param>
            <param name="requireInfrastructureEncryption"> A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.EncryptionScopeKeyVaultProperties(System.Uri,System.String,System.Nullable{System.DateTimeOffset})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties" />. </summary>
            <param name="keyUri"> The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope. </param>
            <param name="currentVersionedKeyIdentifier"> The object identifier of the current versioned Key Vault Key in use. </param>
            <param name="lastKeyRotationTimestamp"> Timestamp of last rotation of the Key Vault Key. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobServiceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Storage.Models.StorageSku,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageCorsRule},System.String,Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed,Azure.ResourceManager.Storage.Models.RestorePolicy,Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy,Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.BlobServiceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="sku"> Sku name and tier. </param>
            <param name="corsRules"> Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service. </param>
            <param name="defaultServiceVersion"> DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions. </param>
            <param name="deleteRetentionPolicy"> The blob service properties for blob soft delete. </param>
            <param name="isVersioningEnabled"> Versioning is enabled if set to true. </param>
            <param name="isAutomaticSnapshotPolicyEnabled"> Deprecated in favor of isVersioningEnabled property. </param>
            <param name="changeFeed"> The blob service properties for change feed events. </param>
            <param name="restorePolicy"> The blob service properties for blob restore policy. </param>
            <param name="containerDeleteRetentionPolicy"> The blob service properties for container soft delete. </param>
            <param name="lastAccessTimeTrackingPolicy"> The blob service property to configure last access time based tracking policy. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.BlobServiceData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.RestorePolicy(System.Boolean,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.RestorePolicy" />. </summary>
            <param name="isEnabled"> Blob restore is enabled if set to true. </param>
            <param name="days"> how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days. </param>
            <param name="lastEnabledOn"> Deprecated in favor of minRestoreTime property. </param>
            <param name="minRestoreOn"> Returns the minimum date and time that the restore can be started. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.RestorePolicy" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobContainerData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StoragePublicAccessType},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseStatus},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseState},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseDurationType},System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy,Azure.ResourceManager.Storage.Models.LegalHoldProperties,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.BlobContainerData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="version"> The version of the deleted blob container. </param>
            <param name="isDeleted"> Indicates whether the blob container was deleted. </param>
            <param name="deletedOn"> Blob container deletion time. </param>
            <param name="remainingRetentionDays"> Remaining retention days for soft deleted blob container. </param>
            <param name="defaultEncryptionScope"> Default the container to use specified encryption scope for all writes. </param>
            <param name="preventEncryptionScopeOverride"> Block override of encryption scope from the container default. </param>
            <param name="publicAccess"> Specifies whether data in the container may be accessed publicly and the level of access. </param>
            <param name="lastModifiedOn"> Returns the date and time the container was last modified. </param>
            <param name="leaseStatus"> The lease status of the container. </param>
            <param name="leaseState"> Lease state of the container. </param>
            <param name="leaseDuration"> Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased. </param>
            <param name="metadata"> A name-value pair to associate with the container as metadata. </param>
            <param name="immutabilityPolicy"> The ImmutabilityPolicy property of the container. </param>
            <param name="legalHold"> The LegalHold property of the container. </param>
            <param name="hasLegalHold"> The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account. </param>
            <param name="hasImmutabilityPolicy"> The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container. </param>
            <param name="immutableStorageWithVersioning"> The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process. </param>
            <param name="enableNfsV3RootSquash"> Enable NFSv3 root squash on blob container. </param>
            <param name="enableNfsV3AllSquash"> Enable NFSv3 all squash on blob container. </param>
            <param name="etag"> Resource Etag. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.BlobContainerData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.BlobContainerImmutabilityPolicy(System.Nullable{Azure.ETag},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.UpdateHistoryEntry},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy" />. </summary>
            <param name="etag"> ImmutabilityPolicy Etag. </param>
            <param name="updateHistory"> The ImmutabilityPolicy update history of the blob container. </param>
            <param name="immutabilityPeriodSinceCreationInDays"> The immutability period for the blobs in the container since the policy creation, in days. </param>
            <param name="state"> The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked. </param>
            <param name="allowProtectedAppendWrites"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. </param>
            <param name="allowProtectedAppendWritesAll"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.UpdateHistoryEntry(System.Nullable{Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Guid},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry" />. </summary>
            <param name="updateType"> The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend. </param>
            <param name="immutabilityPeriodSinceCreationInDays"> The immutability period for the blobs in the container since the policy creation, in days. </param>
            <param name="timestamp"> Returns the date and time the ImmutabilityPolicy was updated. </param>
            <param name="objectIdentifier"> Returns the Object ID of the user who updated the ImmutabilityPolicy. </param>
            <param name="tenantId"> Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy. </param>
            <param name="upn"> Returns the User Principal Name of the user who updated the ImmutabilityPolicy. </param>
            <param name="allowProtectedAppendWrites"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. </param>
            <param name="allowProtectedAppendWritesAll"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LegalHoldProperties(System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.LegalHoldTag},Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LegalHoldProperties" />. </summary>
            <param name="hasLegalHold"> The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account. </param>
            <param name="tags"> The list of LegalHold tags of a blob container. </param>
            <param name="protectedAppendWritesHistory"> Protected append blob writes history. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LegalHoldProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LegalHoldTag(System.String,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Guid},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LegalHoldTag" />. </summary>
            <param name="tag"> The tag value. </param>
            <param name="timestamp"> Returns the date and time the tag was added. </param>
            <param name="objectIdentifier"> Returns the Object ID of the user who added the tag. </param>
            <param name="tenantId"> Returns the Tenant ID that issued the token for the user who added the tag. </param>
            <param name="upn"> Returns the User Principal Name of the user who added the tag. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LegalHoldTag" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.ProtectedAppendWritesHistory(System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory" />. </summary>
            <param name="allowProtectedAppendWritesAll"> When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. </param>
            <param name="timestamp"> Returns the date and time the tag was added. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.ImmutableStorageWithVersioning(System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning" />. </summary>
            <param name="isEnabled"> This is an immutable property, when set to true it enables object level immutability at the container level. </param>
            <param name="timeStamp"> Returns the date and time the object level immutability was enabled. </param>
            <param name="migrationState"> This property denotes the container level immutability to object level immutability migration state. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LegalHold(System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LegalHold" />. </summary>
            <param name="hasLegalHold"> The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account. </param>
            <param name="tags"> Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP. </param>
            <param name="allowProtectedAppendWritesAll"> When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LegalHold" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.ImmutabilityPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="immutabilityPeriodSinceCreationInDays"> The immutability period for the blobs in the container since the policy creation, in days. </param>
            <param name="state"> The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked. </param>
            <param name="allowProtectedAppendWrites"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. </param>
            <param name="allowProtectedAppendWritesAll"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. </param>
            <param name="etag"> Resource Etag. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LeaseContainerContent(Azure.ResourceManager.Storage.Models.LeaseContainerAction,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerContent" />. </summary>
            <param name="action"> Specifies the lease action. Can be one of the available actions. </param>
            <param name="leaseId"> Identifies the lease. Can be specified in any valid GUID string format. </param>
            <param name="breakPeriod"> Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. </param>
            <param name="leaseDuration"> Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. </param>
            <param name="proposedLeaseId"> Optional for acquire, required for change. Proposed lease ID, in a GUID string format. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerContent" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LeaseContainerResponse(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerResponse" />. </summary>
            <param name="leaseId"> Returned unique lease ID that must be included with any request to delete the container, or to renew, change, or release the lease. </param>
            <param name="leaseTimeSeconds"> Approximate time remaining in the lease period, in seconds. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerResponse" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.FileServiceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Storage.Models.StorageSku,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageCorsRule},Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy,Azure.ResourceManager.Storage.Models.SmbSetting)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.FileServiceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="sku"> Sku name and tier. </param>
            <param name="corsRules"> Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service. </param>
            <param name="shareDeleteRetentionPolicy"> The file service properties for share soft delete. </param>
            <param name="protocolSmbSetting"> Protocol settings for file service. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.FileServiceData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.FileShareData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.DateTimeOffset},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol},System.Nullable{Azure.ResourceManager.Storage.Models.RootSquashType},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Storage.Models.FileShareAccessTier},System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int64},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseStatus},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseState},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseDurationType},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageSignedIdentifier},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.FileShareData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="lastModifiedOn"> Returns the date and time the share was last modified. </param>
            <param name="metadata"> A name-value pair to associate with the share as metadata. </param>
            <param name="shareQuota"> The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400. </param>
            <param name="enabledProtocol"> The authentication protocol that is used for the file share. Can only be specified when creating a share. </param>
            <param name="rootSquash"> The property is for NFS share only. The default is NoRootSquash. </param>
            <param name="version"> The version of the share. </param>
            <param name="isDeleted"> Indicates whether the share was deleted. </param>
            <param name="deletedOn"> The deleted time if the share was deleted. </param>
            <param name="remainingRetentionDays"> Remaining retention days for share that was soft deleted. </param>
            <param name="accessTier"> Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium. </param>
            <param name="accessTierChangeOn"> Indicates the last modification time for share access tier. </param>
            <param name="accessTierStatus"> Indicates if there is a pending transition for access tier. </param>
            <param name="shareUsageBytes"> The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files. </param>
            <param name="leaseStatus"> The lease status of the share. </param>
            <param name="leaseState"> Lease state of the share. </param>
            <param name="leaseDuration"> Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased. </param>
            <param name="signedIdentifiers"> List of stored access policies specified on the share. </param>
            <param name="snapshotOn"> Creation time of share snapshot returned in the response of list shares with expand param "snapshots". </param>
            <param name="etag"> Resource Etag. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.FileShareData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LeaseShareContent(Azure.ResourceManager.Storage.Models.LeaseShareAction,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareContent" />. </summary>
            <param name="action"> Specifies the lease action. Can be one of the available actions. </param>
            <param name="leaseId"> Identifies the lease. Can be specified in any valid GUID string format. </param>
            <param name="breakPeriod"> Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. </param>
            <param name="leaseDuration"> Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. </param>
            <param name="proposedLeaseId"> Optional for acquire, required for change. Proposed lease ID, in a GUID string format. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareContent" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.LeaseShareResponse(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareResponse" />. </summary>
            <param name="leaseId"> Returned unique lease ID that must be included with any request to delete the share, or to renew, change, or release the lease. </param>
            <param name="leaseTimeSeconds"> Approximate time remaining in the lease period, in seconds. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareResponse" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.QueueServiceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageCorsRule})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.QueueServiceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="corsRules"> Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.QueueServiceData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.StorageQueueData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageQueueData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="metadata"> A name-value pair that represents queue metadata. </param>
            <param name="approximateMessageCount"> Integer indicating an approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.StorageQueueData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.TableServiceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageCorsRule})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.TableServiceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="corsRules"> Specifies CORS rules for the Table service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Table service. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.TableServiceData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ArmStorageModelFactory.TableData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.TableData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tableName"> Table name under the specified account. </param>
            <param name="signedIdentifiers"> List of stored access policies specified on the table. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Storage.TableData" /> instance for mocking. </returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicy">
            <summary> This defines account-level immutability policy properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicy.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicy" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicy.#ctor(System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicy" />. </summary>
            <param name="immutabilityPeriodSinceCreationInDays"> The immutability period for the blobs in the container since the policy creation, in days. </param>
            <param name="state"> The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted. </param>
            <param name="allowProtectedAppendWrites"> This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicy.ImmutabilityPeriodSinceCreationInDays">
            <summary> The immutability period for the blobs in the container since the policy creation, in days. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicy.State">
            <summary> The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicy.AllowProtectedAppendWrites">
            <summary> This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState">
            <summary> The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState.Unlocked">
            <summary> Unlocked. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState.Locked">
            <summary> Locked. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState.Disabled">
            <summary> Disabled. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState.op_Equality(Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState,Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState.op_Inequality(Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState,Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState.Equals(Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicyState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.AccountSasContent">
            <summary> The parameters to list SAS credentials of a storage account. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountSasContent.#ctor(Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService,Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType,Azure.ResourceManager.Storage.Models.StorageAccountSasPermission,System.DateTimeOffset)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.AccountSasContent" />. </summary>
            <param name="services"> The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f). </param>
            <param name="resourceTypes"> The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files. </param>
            <param name="permissions"> The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p). </param>
            <param name="sharedAccessExpireOn"> The time at which the shared access signature becomes invalid. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountSasContent.#ctor(Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService,Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType,Azure.ResourceManager.Storage.Models.StorageAccountSasPermission,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol},System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.AccountSasContent" />. </summary>
            <param name="services"> The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f). </param>
            <param name="resourceTypes"> The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files. </param>
            <param name="permissions"> The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p). </param>
            <param name="ipAddressOrRange"> An IP address or a range of IP addresses from which to accept requests. </param>
            <param name="protocols"> The protocol permitted for a request made with the account SAS. </param>
            <param name="sharedAccessStartOn"> The time at which the SAS becomes valid. </param>
            <param name="sharedAccessExpireOn"> The time at which the shared access signature becomes invalid. </param>
            <param name="keyToSign"> The key to sign the account SAS token with. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountSasContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.AccountSasContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AccountSasContent.Services">
            <summary> The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f). </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AccountSasContent.ResourceTypes">
            <summary> The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AccountSasContent.Permissions">
            <summary> The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p). </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AccountSasContent.IPAddressOrRange">
            <summary> An IP address or a range of IP addresses from which to accept requests. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AccountSasContent.Protocols">
            <summary> The protocol permitted for a request made with the account SAS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AccountSasContent.SharedAccessStartOn">
            <summary> The time at which the SAS becomes valid. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AccountSasContent.SharedAccessExpireOn">
            <summary> The time at which the shared access signature becomes invalid. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AccountSasContent.KeyToSign">
            <summary> The key to sign the account SAS token with. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType">
            <summary> Specifies the Active Directory account type for Azure Storage. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType.User">
            <summary> User. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType.Computer">
            <summary> Computer. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType.op_Equality(Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType,Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType.op_Inequality(Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType,Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType.Equals(Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.AllowedCopyScope">
            <summary> Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AllowedCopyScope.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.AllowedCopyScope" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AllowedCopyScope.PrivateLink">
            <summary> PrivateLink. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.AllowedCopyScope.Aad">
            <summary> AAD. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AllowedCopyScope.op_Equality(Azure.ResourceManager.Storage.Models.AllowedCopyScope,Azure.ResourceManager.Storage.Models.AllowedCopyScope)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.AllowedCopyScope" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AllowedCopyScope.op_Inequality(Azure.ResourceManager.Storage.Models.AllowedCopyScope,Azure.ResourceManager.Storage.Models.AllowedCopyScope)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.AllowedCopyScope" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AllowedCopyScope.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.AllowedCopyScope">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.AllowedCopyScope" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AllowedCopyScope.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AllowedCopyScope.Equals(Azure.ResourceManager.Storage.Models.AllowedCopyScope)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AllowedCopyScope.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AllowedCopyScope.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy">
            <summary> The properties of an ImmutabilityPolicy of a blob container. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy.#ctor(System.Nullable{Azure.ETag},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.Models.UpdateHistoryEntry},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy" />. </summary>
            <param name="etag"> ImmutabilityPolicy Etag. </param>
            <param name="updateHistory"> The ImmutabilityPolicy update history of the blob container. </param>
            <param name="immutabilityPeriodSinceCreationInDays"> The immutability period for the blobs in the container since the policy creation, in days. </param>
            <param name="state"> The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked. </param>
            <param name="allowProtectedAppendWrites"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. </param>
            <param name="allowProtectedAppendWritesAll"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy.ETag">
            <summary> ImmutabilityPolicy Etag. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy.UpdateHistory">
            <summary> The ImmutabilityPolicy update history of the blob container. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy.ImmutabilityPeriodSinceCreationInDays">
            <summary> The immutability period for the blobs in the container since the policy creation, in days. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy.State">
            <summary> The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy.AllowProtectedAppendWrites">
            <summary> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy.AllowProtectedAppendWritesAll">
            <summary> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobContainerState">
            <summary> The BlobContainerState. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobContainerState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobContainerState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobContainerState.Deleted">
            <summary> deleted. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobContainerState.op_Equality(Azure.ResourceManager.Storage.Models.BlobContainerState,Azure.ResourceManager.Storage.Models.BlobContainerState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.BlobContainerState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobContainerState.op_Inequality(Azure.ResourceManager.Storage.Models.BlobContainerState,Azure.ResourceManager.Storage.Models.BlobContainerState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.BlobContainerState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobContainerState.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.BlobContainerState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.BlobContainerState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobContainerState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobContainerState.Equals(Azure.ResourceManager.Storage.Models.BlobContainerState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobContainerState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobContainerState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition">
            <summary> An object that defines the blob inventory rule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition.#ctor(Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat,Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType,System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition" />. </summary>
            <param name="format"> This is a required field, it specifies the format for the inventory files. </param>
            <param name="schedule"> This is a required field. This field is used to schedule an inventory formation. </param>
            <param name="objectType"> This is a required field. This field specifies the scope of the inventory created either at the blob or container level. </param>
            <param name="schemaFields"> This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition, LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription, CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy, TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid for Non-Hns accounts. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="schemaFields" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition.#ctor(Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat,Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType,System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition" />. </summary>
            <param name="filters"> An object that defines the filter set. </param>
            <param name="format"> This is a required field, it specifies the format for the inventory files. </param>
            <param name="schedule"> This is a required field. This field is used to schedule an inventory formation. </param>
            <param name="objectType"> This is a required field. This field specifies the scope of the inventory created either at the blob or container level. </param>
            <param name="schemaFields"> This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition, LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription, CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy, TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid for Non-Hns accounts. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition.Filters">
            <summary> An object that defines the filter set. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition.Format">
            <summary> This is a required field, it specifies the format for the inventory files. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition.Schedule">
            <summary> This is a required field. This field is used to schedule an inventory formation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition.ObjectType">
            <summary> This is a required field. This field specifies the scope of the inventory created either at the blob or container level. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition.SchemaFields">
            <summary> This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition, LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription, CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy, TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid for Non-Hns accounts. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter">
            <summary> An object that defines the blob inventory rule filter conditions. For 'Blob' definition.objectType all filter properties are applicable, 'blobTypes' is required and others are optional. For 'Container' definition.objectType only prefixMatch is applicable and is optional. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter" />. </summary>
            <param name="includePrefix"> An array of strings with maximum 10 blob prefixes to be included in the inventory. </param>
            <param name="excludePrefix"> An array of strings with maximum 10 blob prefixes to be excluded from the inventory. </param>
            <param name="blobTypes"> An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required when definition.objectType property is set to 'Blob'. </param>
            <param name="includeBlobVersions"> Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and IsCurrentVersion' are required if this property is set to true, else they must be excluded. </param>
            <param name="includeSnapshots"> Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required if this property is set to true, else it must be excluded. </param>
            <param name="includeDeleted"> For 'Container' definition.objectType the definition.schemaFields must include 'Deleted, Version, DeletedTime and RemainingRetentionDays'. For 'Blob' definition.objectType and HNS enabled storage accounts the definition.schemaFields must include 'DeletionId, Deleted, DeletedTime and RemainingRetentionDays' and for Hns disabled accounts the definition.schemaFields must include 'Deleted and RemainingRetentionDays', else it must be excluded. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter.IncludePrefix">
            <summary> An array of strings with maximum 10 blob prefixes to be included in the inventory. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter.ExcludePrefix">
            <summary> An array of strings with maximum 10 blob prefixes to be excluded from the inventory. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter.BlobTypes">
            <summary> An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required when definition.objectType property is set to 'Blob'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter.IncludeBlobVersions">
            <summary> Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and IsCurrentVersion' are required if this property is set to true, else they must be excluded. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter.IncludeSnapshots">
            <summary> Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required if this property is set to true, else it must be excluded. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter.IncludeDeleted">
            <summary> For 'Container' definition.objectType the definition.schemaFields must include 'Deleted, Version, DeletedTime and RemainingRetentionDays'. For 'Blob' definition.objectType and HNS enabled storage accounts the definition.schemaFields must include 'DeletionId, Deleted, DeletedTime and RemainingRetentionDays' and for Hns disabled accounts the definition.schemaFields must include 'Deleted and RemainingRetentionDays', else it must be excluded. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat">
            <summary> This is a required field, it specifies the format for the inventory files. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat.Csv">
            <summary> Csv. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat.Parquet">
            <summary> Parquet. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat.op_Equality(Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat.op_Inequality(Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat.Equals(Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFormat.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName">
            <summary> The BlobInventoryPolicyName. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName.Default">
            <summary> default. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName.op_Equality(Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName.op_Inequality(Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName.Equals(Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType">
            <summary> This is a required field. This field specifies the scope of the inventory created either at the blob or container level. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType.Blob">
            <summary> Blob. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType.Container">
            <summary> Container. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType.op_Equality(Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType.op_Inequality(Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType.Equals(Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyObjectType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule">
            <summary> An object that wraps the blob inventory rule. Each rule is uniquely defined by name. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule.#ctor(System.Boolean,System.String,System.String,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule" />. </summary>
            <param name="isEnabled"> Rule is enabled when set to true. </param>
            <param name="name"> A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy. </param>
            <param name="destination"> Container name where blob inventory files are stored. Must be pre-created. </param>
            <param name="definition"> An object that defines the blob inventory policy rule. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" />, <paramref name="destination" /> or <paramref name="definition" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule.#ctor(System.Boolean,System.String,System.String,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule" />. </summary>
            <param name="isEnabled"> Rule is enabled when set to true. </param>
            <param name="name"> A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy. </param>
            <param name="destination"> Container name where blob inventory files are stored. Must be pre-created. </param>
            <param name="definition"> An object that defines the blob inventory policy rule. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule.IsEnabled">
            <summary> Rule is enabled when set to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule.Name">
            <summary> A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule.Destination">
            <summary> Container name where blob inventory files are stored. Must be pre-created. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule.Definition">
            <summary> An object that defines the blob inventory policy rule. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule">
            <summary> This is a required field. This field is used to schedule an inventory formation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule.Daily">
            <summary> Daily. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule.Weekly">
            <summary> Weekly. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule.op_Equality(Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule,Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule.op_Inequality(Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule,Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule.Equals(Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchedule.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema">
            <summary> The storage account blob inventory policy rules. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema.#ctor(System.Boolean,Azure.ResourceManager.Storage.Models.BlobInventoryRuleType,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema" />. </summary>
            <param name="isEnabled"> Policy is enabled if set to true. </param>
            <param name="ruleType"> The valid value is Inventory. </param>
            <param name="rules"> The storage account blob inventory policy rules. The rule is applied when it is enabled. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="rules" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema.#ctor(System.Boolean,System.String,Azure.ResourceManager.Storage.Models.BlobInventoryRuleType,System.Collections.Generic.IList{Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema" />. </summary>
            <param name="isEnabled"> Policy is enabled if set to true. </param>
            <param name="destination"> Deprecated Property from API version 2021-04-01 onwards, the required destination container name must be specified at the rule level 'policy.rule.destination'. </param>
            <param name="ruleType"> The valid value is Inventory. </param>
            <param name="rules"> The storage account blob inventory policy rules. The rule is applied when it is enabled. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema.IsEnabled">
            <summary> Policy is enabled if set to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema.Destination">
            <summary> Deprecated Property from API version 2021-04-01 onwards, the required destination container name must be specified at the rule level 'policy.rule.destination'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema.RuleType">
            <summary> The valid value is Inventory. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema.Rules">
            <summary> The storage account blob inventory policy rules. The rule is applied when it is enabled. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobInventoryRuleType">
            <summary> The valid value is Inventory. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryRuleType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryRuleType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobInventoryRuleType.Inventory">
            <summary> Inventory. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryRuleType.op_Equality(Azure.ResourceManager.Storage.Models.BlobInventoryRuleType,Azure.ResourceManager.Storage.Models.BlobInventoryRuleType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryRuleType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryRuleType.op_Inequality(Azure.ResourceManager.Storage.Models.BlobInventoryRuleType,Azure.ResourceManager.Storage.Models.BlobInventoryRuleType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryRuleType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryRuleType.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.BlobInventoryRuleType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.BlobInventoryRuleType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryRuleType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryRuleType.Equals(Azure.ResourceManager.Storage.Models.BlobInventoryRuleType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryRuleType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryRuleType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobRestoreContent">
            <summary> Blob restore parameters. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreContent.#ctor(System.DateTimeOffset,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.BlobRestoreRange})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreContent" />. </summary>
            <param name="timeToRestore"> Restore blob to the specified time. </param>
            <param name="blobRanges"> Blob ranges to restore. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="blobRanges" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreContent.#ctor(System.DateTimeOffset,System.Collections.Generic.IList{Azure.ResourceManager.Storage.Models.BlobRestoreRange},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreContent" />. </summary>
            <param name="timeToRestore"> Restore blob to the specified time. </param>
            <param name="blobRanges"> Blob ranges to restore. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobRestoreContent.TimeToRestore">
            <summary> Restore blob to the specified time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobRestoreContent.BlobRanges">
            <summary> Blob ranges to restore. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus">
            <summary> The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus.InProgress">
            <summary> InProgress. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus.Complete">
            <summary> Complete. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus.Failed">
            <summary> Failed. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus.op_Equality(Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus,Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus.op_Inequality(Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus,Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus.Equals(Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobRestoreRange">
            <summary> Blob range. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreRange.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreRange" />. </summary>
            <param name="startRange"> Blob start range. This is inclusive. Empty means account start. </param>
            <param name="endRange"> Blob end range. This is exclusive. Empty means account end. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="startRange" /> or <paramref name="endRange" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreRange.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreRange" />. </summary>
            <param name="startRange"> Blob start range. This is inclusive. Empty means account start. </param>
            <param name="endRange"> Blob end range. This is exclusive. Empty means account end. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreRange.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreRange" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobRestoreRange.StartRange">
            <summary> Blob start range. This is inclusive. Empty means account start. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobRestoreRange.EndRange">
            <summary> Blob end range. This is exclusive. Empty means account end. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobRestoreStatus">
            <summary> Blob restore status. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreStatus.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreStatus" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreStatus.#ctor(System.Nullable{Azure.ResourceManager.Storage.Models.BlobRestoreProgressStatus},System.String,System.String,Azure.ResourceManager.Storage.Models.BlobRestoreContent,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobRestoreStatus" />. </summary>
            <param name="status"> The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed. </param>
            <param name="failureReason"> Failure reason when blob restore is failed. </param>
            <param name="restoreId"> Id for tracking blob restore request. </param>
            <param name="parameters"> Blob restore request parameters. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobRestoreStatus.Status">
            <summary> The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobRestoreStatus.FailureReason">
            <summary> Failure reason when blob restore is failed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobRestoreStatus.RestoreId">
            <summary> Id for tracking blob restore request. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobRestoreStatus.Parameters">
            <summary> Blob restore request parameters. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed">
            <summary> The blob service properties for change feed events. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed" />. </summary>
            <param name="isEnabled"> Indicates whether change feed event logging is enabled for the Blob service. </param>
            <param name="retentionInDays"> Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed.IsEnabled">
            <summary> Indicates whether change feed event logging is enabled for the Blob service. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed.RetentionInDays">
            <summary> Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.BlobServiceItems">
            <summary> The BlobServiceItems. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobServiceItems.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobServiceItems" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobServiceItems.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.BlobServiceData},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.BlobServiceItems" />. </summary>
            <param name="value"> List of blob services returned. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.BlobServiceItems.Value">
            <summary> List of blob services returned. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod">
            <summary> The CorsRuleAllowedMethod. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.Delete">
            <summary> DELETE. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.Get">
            <summary> GET. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.Head">
            <summary> HEAD. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.Merge">
            <summary> MERGE. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.Post">
            <summary> POST. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.Options">
            <summary> OPTIONS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.Put">
            <summary> PUT. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.Patch">
            <summary> PATCH. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.op_Equality(Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod,Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.op_Inequality(Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod,Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.Equals(Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.DateAfterCreation">
            <summary> Object to define snapshot and version action conditions. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DateAfterCreation.#ctor(System.Single)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.DateAfterCreation" />. </summary>
            <param name="daysAfterCreationGreaterThan"> Value indicating the age in days after creation. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DateAfterCreation.#ctor(System.Single,System.Nullable{System.Single},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.DateAfterCreation" />. </summary>
            <param name="daysAfterCreationGreaterThan"> Value indicating the age in days after creation. </param>
            <param name="daysAfterLastTierChangeGreaterThan"> Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DateAfterCreation.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.DateAfterCreation" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DateAfterCreation.DaysAfterCreationGreaterThan">
            <summary> Value indicating the age in days after creation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DateAfterCreation.DaysAfterLastTierChangeGreaterThan">
            <summary> Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.DateAfterModification">
            <summary> Object to define the base blob action conditions. Properties daysAfterModificationGreaterThan, daysAfterLastAccessTimeGreaterThan and daysAfterCreationGreaterThan are mutually exclusive. The daysAfterLastTierChangeGreaterThan property is only applicable for tierToArchive actions which requires daysAfterModificationGreaterThan to be set, also it cannot be used in conjunction with daysAfterLastAccessTimeGreaterThan or daysAfterCreationGreaterThan. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DateAfterModification.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.DateAfterModification" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DateAfterModification.#ctor(System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.DateAfterModification" />. </summary>
            <param name="daysAfterModificationGreaterThan"> Value indicating the age in days after last modification. </param>
            <param name="daysAfterLastAccessTimeGreaterThan"> Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy. </param>
            <param name="daysAfterLastTierChangeGreaterThan"> Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied. </param>
            <param name="daysAfterCreationGreaterThan"> Value indicating the age in days after blob creation. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DateAfterModification.DaysAfterModificationGreaterThan">
            <summary> Value indicating the age in days after last modification. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DateAfterModification.DaysAfterLastAccessTimeGreaterThan">
            <summary> Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DateAfterModification.DaysAfterLastTierChangeGreaterThan">
            <summary> Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DateAfterModification.DaysAfterCreationGreaterThan">
            <summary> Value indicating the age in days after blob creation. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.DefaultSharePermission">
            <summary> Default share permission for users using Kerberos authentication if RBAC role is not assigned. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DefaultSharePermission.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.DefaultSharePermission" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DefaultSharePermission.None">
            <summary> None. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DefaultSharePermission.Reader">
            <summary> StorageFileDataSmbShareReader. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DefaultSharePermission.Contributor">
            <summary> StorageFileDataSmbShareContributor. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DefaultSharePermission.ElevatedContributor">
            <summary> StorageFileDataSmbShareElevatedContributor. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DefaultSharePermission.op_Equality(Azure.ResourceManager.Storage.Models.DefaultSharePermission,Azure.ResourceManager.Storage.Models.DefaultSharePermission)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.DefaultSharePermission" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DefaultSharePermission.op_Inequality(Azure.ResourceManager.Storage.Models.DefaultSharePermission,Azure.ResourceManager.Storage.Models.DefaultSharePermission)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.DefaultSharePermission" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DefaultSharePermission.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.DefaultSharePermission">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.DefaultSharePermission" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DefaultSharePermission.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DefaultSharePermission.Equals(Azure.ResourceManager.Storage.Models.DefaultSharePermission)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DefaultSharePermission.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DefaultSharePermission.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.DeletedAccountListResult">
            <summary> The response from the List Deleted Accounts operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeletedAccountListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.DeletedAccountListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeletedAccountListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.DeletedAccountData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.DeletedAccountListResult" />. </summary>
            <param name="value"> Gets the list of deleted accounts and their properties. </param>
            <param name="nextLink"> Request URL that can be used to query next page of deleted accounts. Returned when total number of requested deleted accounts exceed maximum page size. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DeletedAccountListResult.Value">
            <summary> Gets the list of deleted accounts and their properties. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DeletedAccountListResult.NextLink">
            <summary> Request URL that can be used to query next page of deleted accounts. Returned when total number of requested deleted accounts exceed maximum page size. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.DeletedShare">
            <summary> The deleted share to be restored. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeletedShare.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.DeletedShare" />. </summary>
            <param name="deletedShareName"> Required. Identify the name of the deleted share that will be restored. </param>
            <param name="deletedShareVersion"> Required. Identify the version of the deleted share that will be restored. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deletedShareName" /> or <paramref name="deletedShareVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeletedShare.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.DeletedShare" />. </summary>
            <param name="deletedShareName"> Required. Identify the name of the deleted share that will be restored. </param>
            <param name="deletedShareVersion"> Required. Identify the version of the deleted share that will be restored. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeletedShare.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.DeletedShare" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DeletedShare.DeletedShareName">
            <summary> Required. Identify the name of the deleted share that will be restored. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DeletedShare.DeletedShareVersion">
            <summary> Required. Identify the version of the deleted share that will be restored. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy">
            <summary> The service properties for soft delete. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy" />. </summary>
            <param name="isEnabled"> Indicates whether DeleteRetentionPolicy is enabled. </param>
            <param name="days"> Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365. </param>
            <param name="allowPermanentDelete"> This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be used blob restore policy. This property only applies to blob service and does not apply to containers or file share. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy.IsEnabled">
            <summary> Indicates whether DeleteRetentionPolicy is enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy.Days">
            <summary> Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy.AllowPermanentDelete">
            <summary> This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be used blob restore policy. This property only applies to blob service and does not apply to containers or file share. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.DirectoryServiceOption">
            <summary> Indicates the directory service used. Note that this enum may be extended in the future. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DirectoryServiceOption.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.DirectoryServiceOption" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DirectoryServiceOption.None">
            <summary> None. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DirectoryServiceOption.Aadds">
            <summary> AADDS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DirectoryServiceOption.AD">
            <summary> AD. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.DirectoryServiceOption.Aadkerb">
            <summary> AADKERB. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DirectoryServiceOption.op_Equality(Azure.ResourceManager.Storage.Models.DirectoryServiceOption,Azure.ResourceManager.Storage.Models.DirectoryServiceOption)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.DirectoryServiceOption" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DirectoryServiceOption.op_Inequality(Azure.ResourceManager.Storage.Models.DirectoryServiceOption,Azure.ResourceManager.Storage.Models.DirectoryServiceOption)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.DirectoryServiceOption" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DirectoryServiceOption.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.DirectoryServiceOption">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.DirectoryServiceOption" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DirectoryServiceOption.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DirectoryServiceOption.Equals(Azure.ResourceManager.Storage.Models.DirectoryServiceOption)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DirectoryServiceOption.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DirectoryServiceOption.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties">
            <summary> The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties.#ctor(System.Uri,System.String,System.Nullable{System.DateTimeOffset},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties" />. </summary>
            <param name="keyUri"> The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope. </param>
            <param name="currentVersionedKeyIdentifier"> The object identifier of the current versioned Key Vault Key in use. </param>
            <param name="lastKeyRotationTimestamp"> Timestamp of last rotation of the Key Vault Key. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties.KeyUri">
            <summary> The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties.CurrentVersionedKeyIdentifier">
            <summary> The object identifier of the current versioned Key Vault Key in use. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties.LastKeyRotationTimestamp">
            <summary> Timestamp of last rotation of the Key Vault Key. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.EncryptionScopeListResult">
            <summary> List of encryption scopes requested, and if paging is required, a URL to the next page of encryption scopes. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.EncryptionScopeData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeListResult" />. </summary>
            <param name="value"> List of encryption scopes requested. </param>
            <param name="nextLink"> Request URL that can be used to query next page of encryption scopes. Returned when total number of requested encryption scopes exceeds the maximum page size. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.EncryptionScopeListResult.Value">
            <summary> List of encryption scopes requested. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.EncryptionScopeListResult.NextLink">
            <summary> Request URL that can be used to query next page of encryption scopes. Returned when total number of requested encryption scopes exceeds the maximum page size. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType">
            <summary> The EncryptionScopesIncludeType. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType.All">
            <summary> All. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType.Enabled">
            <summary> Enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType.Disabled">
            <summary> Disabled. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType.op_Equality(Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType,Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType.op_Inequality(Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType,Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType.Equals(Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.EncryptionScopeSource">
            <summary> The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeSource.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeSource" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.EncryptionScopeSource.Storage">
            <summary> Microsoft.Storage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.EncryptionScopeSource.KeyVault">
            <summary> Microsoft.KeyVault. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeSource.op_Equality(Azure.ResourceManager.Storage.Models.EncryptionScopeSource,Azure.ResourceManager.Storage.Models.EncryptionScopeSource)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeSource" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeSource.op_Inequality(Azure.ResourceManager.Storage.Models.EncryptionScopeSource,Azure.ResourceManager.Storage.Models.EncryptionScopeSource)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeSource" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeSource.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.EncryptionScopeSource">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeSource" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeSource.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeSource.Equals(Azure.ResourceManager.Storage.Models.EncryptionScopeSource)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeSource.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeSource.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.EncryptionScopeState">
            <summary> The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.EncryptionScopeState.Enabled">
            <summary> Enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.EncryptionScopeState.Disabled">
            <summary> Disabled. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeState.op_Equality(Azure.ResourceManager.Storage.Models.EncryptionScopeState,Azure.ResourceManager.Storage.Models.EncryptionScopeState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeState.op_Inequality(Azure.ResourceManager.Storage.Models.EncryptionScopeState,Azure.ResourceManager.Storage.Models.EncryptionScopeState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeState.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.EncryptionScopeState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.EncryptionScopeState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeState.Equals(Azure.ResourceManager.Storage.Models.EncryptionScopeState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ExpirationAction">
            <summary> The SAS expiration action. Can only be Log. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ExpirationAction.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ExpirationAction" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ExpirationAction.Log">
            <summary> Log. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ExpirationAction.op_Equality(Azure.ResourceManager.Storage.Models.ExpirationAction,Azure.ResourceManager.Storage.Models.ExpirationAction)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ExpirationAction" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ExpirationAction.op_Inequality(Azure.ResourceManager.Storage.Models.ExpirationAction,Azure.ResourceManager.Storage.Models.ExpirationAction)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ExpirationAction" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ExpirationAction.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.ExpirationAction">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.ExpirationAction" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ExpirationAction.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ExpirationAction.Equals(Azure.ResourceManager.Storage.Models.ExpirationAction)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ExpirationAction.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ExpirationAction.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.FileServiceItems">
            <summary> The FileServiceItems. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileServiceItems.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.FileServiceItems" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileServiceItems.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.FileServiceData},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.FileServiceItems" />. </summary>
            <param name="value"> List of file services returned. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.FileServiceItems.Value">
            <summary> List of file services returned. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.FileShareAccessTier">
            <summary> Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareAccessTier.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.FileShareAccessTier" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.FileShareAccessTier.TransactionOptimized">
            <summary> TransactionOptimized. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.FileShareAccessTier.Hot">
            <summary> Hot. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.FileShareAccessTier.Cool">
            <summary> Cool. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.FileShareAccessTier.Premium">
            <summary> Premium. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareAccessTier.op_Equality(Azure.ResourceManager.Storage.Models.FileShareAccessTier,Azure.ResourceManager.Storage.Models.FileShareAccessTier)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.FileShareAccessTier" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareAccessTier.op_Inequality(Azure.ResourceManager.Storage.Models.FileShareAccessTier,Azure.ResourceManager.Storage.Models.FileShareAccessTier)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.FileShareAccessTier" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareAccessTier.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.FileShareAccessTier">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.FileShareAccessTier" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareAccessTier.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareAccessTier.Equals(Azure.ResourceManager.Storage.Models.FileShareAccessTier)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareAccessTier.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareAccessTier.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol">
            <summary> The authentication protocol that is used for the file share. Can only be specified when creating a share. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol.Smb">
            <summary> SMB. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol.Nfs">
            <summary> NFS. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol.op_Equality(Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol,Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol.op_Inequality(Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol,Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol.Equals(Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.FileShareItems">
            <summary> Response schema. Contains list of shares returned, and if paging is requested or required, a URL to next page of shares. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareItems.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.FileShareItems" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareItems.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.FileShareData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.FileShareItems" />. </summary>
            <param name="value"> List of file shares returned. </param>
            <param name="nextLink"> Request URL that can be used to query next page of shares. Returned when total number of requested shares exceed maximum page size. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.FileShareItems.Value">
            <summary> List of file shares returned. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.FileShareItems.NextLink">
            <summary> Request URL that can be used to query next page of shares. Returned when total number of requested shares exceed maximum page size. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication">
            <summary> Settings for Azure Files identity based authentication. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication.#ctor(Azure.ResourceManager.Storage.Models.DirectoryServiceOption)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication" />. </summary>
            <param name="directoryServiceOptions"> Indicates the directory service used. Note that this enum may be extended in the future. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication.#ctor(Azure.ResourceManager.Storage.Models.DirectoryServiceOption,Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties,System.Nullable{Azure.ResourceManager.Storage.Models.DefaultSharePermission},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication" />. </summary>
            <param name="directoryServiceOptions"> Indicates the directory service used. Note that this enum may be extended in the future. </param>
            <param name="activeDirectoryProperties"> Required if directoryServiceOptions are AD, optional if they are AADKERB. </param>
            <param name="defaultSharePermission"> Default share permission for users using Kerberos authentication if RBAC role is not assigned. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication.DirectoryServiceOptions">
            <summary> Indicates the directory service used. Note that this enum may be extended in the future. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication.ActiveDirectoryProperties">
            <summary> Required if directoryServiceOptions are AD, optional if they are AADKERB. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication.DefaultSharePermission">
            <summary> Default share permission for users using Kerberos authentication if RBAC role is not assigned. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics">
            <summary> Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics.#ctor(System.Nullable{Azure.ResourceManager.Storage.Models.GeoReplicationStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics" />. </summary>
            <param name="status"> The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable. </param>
            <param name="lastSyncOn"> All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap. </param>
            <param name="canFailover"> A boolean flag which indicates whether or not account failover is supported for the account. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics.Status">
            <summary> The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics.LastSyncOn">
            <summary> All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics.CanFailover">
            <summary> A boolean flag which indicates whether or not account failover is supported for the account. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.GeoReplicationStatus">
            <summary> The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GeoReplicationStatus.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.GeoReplicationStatus" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.GeoReplicationStatus.Live">
            <summary> Live. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.GeoReplicationStatus.Bootstrap">
            <summary> Bootstrap. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.GeoReplicationStatus.Unavailable">
            <summary> Unavailable. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GeoReplicationStatus.op_Equality(Azure.ResourceManager.Storage.Models.GeoReplicationStatus,Azure.ResourceManager.Storage.Models.GeoReplicationStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.GeoReplicationStatus" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GeoReplicationStatus.op_Inequality(Azure.ResourceManager.Storage.Models.GeoReplicationStatus,Azure.ResourceManager.Storage.Models.GeoReplicationStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.GeoReplicationStatus" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GeoReplicationStatus.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.GeoReplicationStatus">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.GeoReplicationStatus" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GeoReplicationStatus.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GeoReplicationStatus.Equals(Azure.ResourceManager.Storage.Models.GeoReplicationStatus)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GeoReplicationStatus.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GeoReplicationStatus.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.GetAccountSasResult">
            <summary> The List SAS credentials operation response. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GetAccountSasResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.GetAccountSasResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GetAccountSasResult.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.GetAccountSasResult" />. </summary>
            <param name="accountSasToken"> List SAS credentials of storage account. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.GetAccountSasResult.AccountSasToken">
            <summary> List SAS credentials of storage account. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.GetServiceSasResult">
            <summary> The List service SAS credentials operation response. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GetServiceSasResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.GetServiceSasResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GetServiceSasResult.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.GetServiceSasResult" />. </summary>
            <param name="serviceSasToken"> List service SAS credentials of specific resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.GetServiceSasResult.ServiceSasToken">
            <summary> List service SAS credentials of specific resource. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState">
            <summary> The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState.Locked">
            <summary> Locked. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState.Unlocked">
            <summary> Unlocked. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState.op_Equality(Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState,Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState.op_Inequality(Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState,Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState.Equals(Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType">
            <summary> The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType.Put">
            <summary> put. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType.Lock">
            <summary> lock. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType.Extend">
            <summary> extend. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType.op_Equality(Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType,Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType.op_Inequality(Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType,Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType.Equals(Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ImmutableStorageAccount">
            <summary> This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageAccount.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ImmutableStorageAccount" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageAccount.#ctor(System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicy,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ImmutableStorageAccount" />. </summary>
            <param name="isEnabled"> A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default. </param>
            <param name="immutabilityPolicy"> Specifies the default account-level immutability policy which is inherited and applied to objects that do not possess an explicit immutability policy at the object level. The object-level immutability policy has higher precedence than the container-level immutability policy, which has a higher precedence than the account-level immutability policy. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ImmutableStorageAccount.IsEnabled">
            <summary> A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ImmutableStorageAccount.ImmutabilityPolicy">
            <summary> Specifies the default account-level immutability policy which is inherited and applied to objects that do not possess an explicit immutability policy at the object level. The object-level immutability policy has higher precedence than the container-level immutability policy, which has a higher precedence than the account-level immutability policy. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning">
            <summary> Object level immutability properties of the container. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning" />. </summary>
            <param name="isEnabled"> This is an immutable property, when set to true it enables object level immutability at the container level. </param>
            <param name="timeStamp"> Returns the date and time the object level immutability was enabled. </param>
            <param name="migrationState"> This property denotes the container level immutability to object level immutability migration state. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning.IsEnabled">
            <summary> This is an immutable property, when set to true it enables object level immutability at the container level. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning.TimeStamp">
            <summary> Returns the date and time the object level immutability was enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning.MigrationState">
            <summary> This property denotes the container level immutability to object level immutability migration state. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState">
            <summary> This property denotes the container level immutability to object level immutability migration state. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState.InProgress">
            <summary> InProgress. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState.Completed">
            <summary> Completed. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState.op_Equality(Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState,Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState.op_Inequality(Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState,Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState.Equals(Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioningMigrationState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.LargeFileSharesState">
            <summary> Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LargeFileSharesState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LargeFileSharesState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LargeFileSharesState.Disabled">
            <summary> Disabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LargeFileSharesState.Enabled">
            <summary> Enabled. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LargeFileSharesState.op_Equality(Azure.ResourceManager.Storage.Models.LargeFileSharesState,Azure.ResourceManager.Storage.Models.LargeFileSharesState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.LargeFileSharesState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LargeFileSharesState.op_Inequality(Azure.ResourceManager.Storage.Models.LargeFileSharesState,Azure.ResourceManager.Storage.Models.LargeFileSharesState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.LargeFileSharesState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LargeFileSharesState.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.LargeFileSharesState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.LargeFileSharesState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LargeFileSharesState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LargeFileSharesState.Equals(Azure.ResourceManager.Storage.Models.LargeFileSharesState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LargeFileSharesState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LargeFileSharesState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy">
            <summary> The blob service properties for Last access time based tracking policy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy.#ctor(System.Boolean)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy" />. </summary>
            <param name="isEnabled"> When set to true last access time based tracking is enabled. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy.#ctor(System.Boolean,System.Nullable{Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName},System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy" />. </summary>
            <param name="isEnabled"> When set to true last access time based tracking is enabled. </param>
            <param name="name"> Name of the policy. The valid value is AccessTimeTracking. This field is currently read only. </param>
            <param name="trackingGranularityInDays"> The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1. </param>
            <param name="blobType"> An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy.IsEnabled">
            <summary> When set to true last access time based tracking is enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy.Name">
            <summary> Name of the policy. The valid value is AccessTimeTracking. This field is currently read only. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy.TrackingGranularityInDays">
            <summary> The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy.BlobType">
            <summary> An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName">
            <summary> Name of the policy. The valid value is AccessTimeTracking. This field is currently read only. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName.AccessTimeTracking">
            <summary> AccessTimeTracking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName.op_Equality(Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName,Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName.op_Inequality(Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName,Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName.Equals(Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicyName.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.LeaseContainerAction">
            <summary> Specifies the lease action. Can be one of the available actions. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerAction.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerAction" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseContainerAction.Acquire">
            <summary> Acquire. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseContainerAction.Renew">
            <summary> Renew. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseContainerAction.Change">
            <summary> Change. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseContainerAction.Release">
            <summary> Release. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseContainerAction.Break">
            <summary> Break. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerAction.op_Equality(Azure.ResourceManager.Storage.Models.LeaseContainerAction,Azure.ResourceManager.Storage.Models.LeaseContainerAction)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerAction" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerAction.op_Inequality(Azure.ResourceManager.Storage.Models.LeaseContainerAction,Azure.ResourceManager.Storage.Models.LeaseContainerAction)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerAction" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerAction.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.LeaseContainerAction">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerAction" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerAction.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerAction.Equals(Azure.ResourceManager.Storage.Models.LeaseContainerAction)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerAction.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerAction.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.LeaseContainerContent">
            <summary> Lease Container request schema. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerContent.#ctor(Azure.ResourceManager.Storage.Models.LeaseContainerAction)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerContent" />. </summary>
            <param name="action"> Specifies the lease action. Can be one of the available actions. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerContent.#ctor(Azure.ResourceManager.Storage.Models.LeaseContainerAction,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerContent" />. </summary>
            <param name="action"> Specifies the lease action. Can be one of the available actions. </param>
            <param name="leaseId"> Identifies the lease. Can be specified in any valid GUID string format. </param>
            <param name="breakPeriod"> Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. </param>
            <param name="leaseDuration"> Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. </param>
            <param name="proposedLeaseId"> Optional for acquire, required for change. Proposed lease ID, in a GUID string format. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseContainerContent.Action">
            <summary> Specifies the lease action. Can be one of the available actions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseContainerContent.LeaseId">
            <summary> Identifies the lease. Can be specified in any valid GUID string format. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseContainerContent.BreakPeriod">
            <summary> Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseContainerContent.LeaseDuration">
            <summary> Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseContainerContent.ProposedLeaseId">
            <summary> Optional for acquire, required for change. Proposed lease ID, in a GUID string format. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.LeaseContainerResponse">
            <summary> Lease Container response schema. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerResponse.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerResponse" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerResponse.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseContainerResponse" />. </summary>
            <param name="leaseId"> Returned unique lease ID that must be included with any request to delete the container, or to renew, change, or release the lease. </param>
            <param name="leaseTimeSeconds"> Approximate time remaining in the lease period, in seconds. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseContainerResponse.LeaseId">
            <summary> Returned unique lease ID that must be included with any request to delete the container, or to renew, change, or release the lease. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseContainerResponse.LeaseTimeSeconds">
            <summary> Approximate time remaining in the lease period, in seconds. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.LeaseShareAction">
            <summary> Specifies the lease action. Can be one of the available actions. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareAction.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareAction" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseShareAction.Acquire">
            <summary> Acquire. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseShareAction.Renew">
            <summary> Renew. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseShareAction.Change">
            <summary> Change. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseShareAction.Release">
            <summary> Release. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseShareAction.Break">
            <summary> Break. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareAction.op_Equality(Azure.ResourceManager.Storage.Models.LeaseShareAction,Azure.ResourceManager.Storage.Models.LeaseShareAction)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareAction" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareAction.op_Inequality(Azure.ResourceManager.Storage.Models.LeaseShareAction,Azure.ResourceManager.Storage.Models.LeaseShareAction)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareAction" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareAction.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.LeaseShareAction">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareAction" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareAction.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareAction.Equals(Azure.ResourceManager.Storage.Models.LeaseShareAction)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareAction.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareAction.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.LeaseShareContent">
            <summary> Lease Share request schema. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareContent.#ctor(Azure.ResourceManager.Storage.Models.LeaseShareAction)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareContent" />. </summary>
            <param name="action"> Specifies the lease action. Can be one of the available actions. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareContent.#ctor(Azure.ResourceManager.Storage.Models.LeaseShareAction,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareContent" />. </summary>
            <param name="action"> Specifies the lease action. Can be one of the available actions. </param>
            <param name="leaseId"> Identifies the lease. Can be specified in any valid GUID string format. </param>
            <param name="breakPeriod"> Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. </param>
            <param name="leaseDuration"> Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. </param>
            <param name="proposedLeaseId"> Optional for acquire, required for change. Proposed lease ID, in a GUID string format. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseShareContent.Action">
            <summary> Specifies the lease action. Can be one of the available actions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseShareContent.LeaseId">
            <summary> Identifies the lease. Can be specified in any valid GUID string format. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseShareContent.BreakPeriod">
            <summary> Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseShareContent.LeaseDuration">
            <summary> Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseShareContent.ProposedLeaseId">
            <summary> Optional for acquire, required for change. Proposed lease ID, in a GUID string format. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.LeaseShareResponse">
            <summary> Lease Share response schema. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareResponse.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareResponse" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareResponse.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LeaseShareResponse" />. </summary>
            <param name="leaseId"> Returned unique lease ID that must be included with any request to delete the share, or to renew, change, or release the lease. </param>
            <param name="leaseTimeSeconds"> Approximate time remaining in the lease period, in seconds. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseShareResponse.LeaseId">
            <summary> Returned unique lease ID that must be included with any request to delete the share, or to renew, change, or release the lease. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LeaseShareResponse.LeaseTimeSeconds">
            <summary> Approximate time remaining in the lease period, in seconds. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.LegalHold">
            <summary> The LegalHold property of a blob container. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHold.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LegalHold" />. </summary>
            <param name="tags"> Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHold.#ctor(System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LegalHold" />. </summary>
            <param name="hasLegalHold"> The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account. </param>
            <param name="tags"> Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP. </param>
            <param name="allowProtectedAppendWritesAll"> When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHold.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LegalHold" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LegalHold.HasLegalHold">
            <summary> The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LegalHold.Tags">
            <summary> Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LegalHold.AllowProtectedAppendWritesAll">
            <summary> When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.LegalHoldProperties">
            <summary> The LegalHold property of a blob container. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHoldProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LegalHoldProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHoldProperties.#ctor(System.Nullable{System.Boolean},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.Models.LegalHoldTag},Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LegalHoldProperties" />. </summary>
            <param name="hasLegalHold"> The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account. </param>
            <param name="tags"> The list of LegalHold tags of a blob container. </param>
            <param name="protectedAppendWritesHistory"> Protected append blob writes history. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LegalHoldProperties.HasLegalHold">
            <summary> The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LegalHoldProperties.Tags">
            <summary> The list of LegalHold tags of a blob container. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LegalHoldProperties.ProtectedAppendWritesHistory">
            <summary> Protected append blob writes history. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.LegalHoldTag">
            <summary> A tag of the LegalHold of a blob container. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHoldTag.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LegalHoldTag" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHoldTag.#ctor(System.String,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Guid},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LegalHoldTag" />. </summary>
            <param name="tag"> The tag value. </param>
            <param name="timestamp"> Returns the date and time the tag was added. </param>
            <param name="objectIdentifier"> Returns the Object ID of the user who added the tag. </param>
            <param name="tenantId"> Returns the Tenant ID that issued the token for the user who added the tag. </param>
            <param name="upn"> Returns the User Principal Name of the user who added the tag. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LegalHoldTag.Tag">
            <summary> The tag value. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LegalHoldTag.Timestamp">
            <summary> Returns the date and time the tag was added. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LegalHoldTag.ObjectIdentifier">
            <summary> Returns the Object ID of the user who added the tag. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LegalHoldTag.TenantId">
            <summary> Returns the Tenant ID that issued the token for the user who added the tag. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LegalHoldTag.Upn">
            <summary> Returns the User Principal Name of the user who added the tag. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ListBlobInventoryPolicy">
            <summary> List of blob inventory policies returned. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListBlobInventoryPolicy.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ListBlobInventoryPolicy" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListBlobInventoryPolicy.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.BlobInventoryPolicyData},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ListBlobInventoryPolicy" />. </summary>
            <param name="value"> List of blob inventory policies. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ListBlobInventoryPolicy.Value">
            <summary> List of blob inventory policies. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ListContainerItems">
            <summary> Response schema. Contains list of blobs returned, and if paging is requested or required, a URL to next page of containers. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListContainerItems.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ListContainerItems" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListContainerItems.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.BlobContainerData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ListContainerItems" />. </summary>
            <param name="value"> List of blobs containers returned. </param>
            <param name="nextLink"> Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ListContainerItems.Value">
            <summary> List of blobs containers returned. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ListContainerItems.NextLink">
            <summary> Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ListQueueResource">
            <summary> Response schema. Contains list of queues returned. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListQueueResource.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ListQueueResource" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListQueueResource.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.StorageQueueData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ListQueueResource" />. </summary>
            <param name="value"> List of queues returned. </param>
            <param name="nextLink"> Request URL that can be used to list next page of queues. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ListQueueResource.Value">
            <summary> List of queues returned. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ListQueueResource.NextLink">
            <summary> Request URL that can be used to list next page of queues. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ListQueueServices">
            <summary> The ListQueueServices. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListQueueServices.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ListQueueServices" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListQueueServices.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.QueueServiceData},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ListQueueServices" />. </summary>
            <param name="value"> List of queue services returned. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ListQueueServices.Value">
            <summary> List of queue services returned. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ListTableResource">
            <summary> Response schema. Contains list of tables returned. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListTableResource.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ListTableResource" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListTableResource.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.TableData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ListTableResource" />. </summary>
            <param name="value"> List of tables returned. </param>
            <param name="nextLink"> Request URL that can be used to query next page of tables. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ListTableResource.Value">
            <summary> List of tables returned. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ListTableResource.NextLink">
            <summary> Request URL that can be used to query next page of tables. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ListTableServices">
            <summary> The ListTableServices. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListTableServices.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ListTableServices" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListTableServices.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.TableServiceData},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ListTableServices" />. </summary>
            <param name="value"> List of table services returned. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ListTableServices.Value">
            <summary> List of table services returned. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.LocalUserKeys">
            <summary> The Storage Account Local User keys. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUserKeys.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LocalUserKeys" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUserKeys.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.Models.StorageSshPublicKey},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LocalUserKeys" />. </summary>
            <param name="sshAuthorizedKeys"> Optional, local user ssh authorized keys for SFTP. </param>
            <param name="sharedKey"> Auto generated by the server for SMB authentication. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LocalUserKeys.SshAuthorizedKeys">
            <summary> Optional, local user ssh authorized keys for SFTP. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LocalUserKeys.SharedKey">
            <summary> Auto generated by the server for SMB authentication. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult">
            <summary> The secrets of Storage Account Local User. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult" />. </summary>
            <param name="sshPassword"> Auto generated password by the server for SSH authentication if hasSshPassword is set to true on the creation of local user. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult.SshPassword">
            <summary> Auto generated password by the server for SSH authentication if hasSshPassword is set to true on the creation of local user. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.LocalUsers">
            <summary> List storage account local users. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUsers.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LocalUsers" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUsers.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.StorageAccountLocalUserData},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.LocalUsers" />. </summary>
            <param name="value"> The local users associated with the storage account. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.LocalUsers.Value">
            <summary> The local users associated with the storage account. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ManagementPolicyAction">
            <summary> Actions are applied to the filtered blobs when the execution condition is met. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyAction.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyAction" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyAction.#ctor(Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob,Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot,Azure.ResourceManager.Storage.Models.ManagementPolicyVersion,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyAction" />. </summary>
            <param name="baseBlob"> The management policy action for base blob. </param>
            <param name="snapshot"> The management policy action for snapshot. </param>
            <param name="version"> The management policy action for version. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyAction.BaseBlob">
            <summary> The management policy action for base blob. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyAction.Snapshot">
            <summary> The management policy action for snapshot. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyAction.Version">
            <summary> The management policy action for version. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob">
            <summary> Management policy action for base blob. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob.#ctor(Azure.ResourceManager.Storage.Models.DateAfterModification,Azure.ResourceManager.Storage.Models.DateAfterModification,Azure.ResourceManager.Storage.Models.DateAfterModification,Azure.ResourceManager.Storage.Models.DateAfterModification,Azure.ResourceManager.Storage.Models.DateAfterModification,System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob" />. </summary>
            <param name="tierToCool"> The function to tier blobs to cool storage. </param>
            <param name="tierToArchive"> The function to tier blobs to archive storage. </param>
            <param name="tierToCold"> The function to tier blobs to cold storage. </param>
            <param name="tierToHot"> The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts. </param>
            <param name="delete"> The function to delete the blob. </param>
            <param name="enableAutoTierToHotFromCool"> This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob.TierToCool">
            <summary> The function to tier blobs to cool storage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob.TierToArchive">
            <summary> The function to tier blobs to archive storage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob.TierToCold">
            <summary> The function to tier blobs to cold storage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob.TierToHot">
            <summary> The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob.Delete">
            <summary> The function to delete the blob. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob.EnableAutoTierToHotFromCool">
            <summary> This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition">
            <summary> An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition.#ctor(Azure.ResourceManager.Storage.Models.ManagementPolicyAction)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition" />. </summary>
            <param name="actions"> An object that defines the action set. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="actions" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition.#ctor(Azure.ResourceManager.Storage.Models.ManagementPolicyAction,Azure.ResourceManager.Storage.Models.ManagementPolicyFilter,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition" />. </summary>
            <param name="actions"> An object that defines the action set. </param>
            <param name="filters"> An object that defines the filter set. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition.Actions">
            <summary> An object that defines the action set. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition.Filters">
            <summary> An object that defines the filter set. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter">
            <summary> Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter" />. </summary>
            <param name="blobTypes"> An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="blobTypes" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter" />. </summary>
            <param name="prefixMatch"> An array of strings for prefixes to be match. </param>
            <param name="blobTypes"> An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob. </param>
            <param name="blobIndexMatch"> An array of blob index tag based filters, there can be at most 10 tag filters. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.PrefixMatch">
            <summary> An array of strings for prefixes to be match. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.BlobTypes">
            <summary> An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.BlobIndexMatch">
            <summary> An array of blob index tag based filters, there can be at most 10 tag filters. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ManagementPolicyName">
            <summary> The ManagementPolicyName. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyName.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyName" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyName.Default">
            <summary> default. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyName.op_Equality(Azure.ResourceManager.Storage.Models.ManagementPolicyName,Azure.ResourceManager.Storage.Models.ManagementPolicyName)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyName" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyName.op_Inequality(Azure.ResourceManager.Storage.Models.ManagementPolicyName,Azure.ResourceManager.Storage.Models.ManagementPolicyName)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyName" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyName.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.ManagementPolicyName">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyName" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyName.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyName.Equals(Azure.ResourceManager.Storage.Models.ManagementPolicyName)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyName.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyName.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ManagementPolicyRule">
            <summary> An object that wraps the Lifecycle rule. Each rule is uniquely defined by name. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRule.#ctor(System.String,Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType,Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyRule" />. </summary>
            <param name="name"> A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy. </param>
            <param name="ruleType"> The valid value is Lifecycle. </param>
            <param name="definition"> An object that defines the Lifecycle rule. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="definition" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRule.#ctor(System.Nullable{System.Boolean},System.String,Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType,Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyRule" />. </summary>
            <param name="isEnabled"> Rule is enabled if set to true. </param>
            <param name="name"> A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy. </param>
            <param name="ruleType"> The valid value is Lifecycle. </param>
            <param name="definition"> An object that defines the Lifecycle rule. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRule.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyRule" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyRule.IsEnabled">
            <summary> Rule is enabled if set to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyRule.Name">
            <summary> A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyRule.RuleType">
            <summary> The valid value is Lifecycle. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyRule.Definition">
            <summary> An object that defines the Lifecycle rule. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType">
            <summary> The valid value is Lifecycle. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType.Lifecycle">
            <summary> Lifecycle. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType.op_Equality(Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType,Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType.op_Inequality(Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType,Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType.Equals(Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRuleType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ManagementPolicySchema">
            <summary> The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicySchema.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.ManagementPolicyRule})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicySchema" />. </summary>
            <param name="rules"> The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="rules" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicySchema.#ctor(System.Collections.Generic.IList{Azure.ResourceManager.Storage.Models.ManagementPolicyRule},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicySchema" />. </summary>
            <param name="rules"> The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicySchema.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicySchema" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicySchema.Rules">
            <summary> The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot">
            <summary> Management policy action for snapshot. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot.#ctor(Azure.ResourceManager.Storage.Models.DateAfterCreation,Azure.ResourceManager.Storage.Models.DateAfterCreation,Azure.ResourceManager.Storage.Models.DateAfterCreation,Azure.ResourceManager.Storage.Models.DateAfterCreation,Azure.ResourceManager.Storage.Models.DateAfterCreation,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot" />. </summary>
            <param name="tierToCool"> The function to tier blob snapshot to cool storage. </param>
            <param name="tierToArchive"> The function to tier blob snapshot to archive storage. </param>
            <param name="tierToCold"> The function to tier blobs to cold storage. </param>
            <param name="tierToHot"> The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts. </param>
            <param name="delete"> The function to delete the blob snapshot. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot.TierToCool">
            <summary> The function to tier blob snapshot to cool storage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot.TierToArchive">
            <summary> The function to tier blob snapshot to archive storage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot.TierToCold">
            <summary> The function to tier blobs to cold storage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot.TierToHot">
            <summary> The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot.Delete">
            <summary> The function to delete the blob snapshot. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter">
            <summary> Blob index tag based filtering for blob objects. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter.#ctor(System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter" />. </summary>
            <param name="name"> This is the filter tag name, it can have 1 - 128 characters. </param>
            <param name="operator"> This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported. </param>
            <param name="value"> This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" />, <paramref name="operator" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter.#ctor(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter" />. </summary>
            <param name="name"> This is the filter tag name, it can have 1 - 128 characters. </param>
            <param name="operator"> This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported. </param>
            <param name="value"> This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter.Name">
            <summary> This is the filter tag name, it can have 1 - 128 characters. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter.Operator">
            <summary> This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter.Value">
            <summary> This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ManagementPolicyVersion">
            <summary> Management policy action for blob version. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyVersion.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyVersion" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyVersion.#ctor(Azure.ResourceManager.Storage.Models.DateAfterCreation,Azure.ResourceManager.Storage.Models.DateAfterCreation,Azure.ResourceManager.Storage.Models.DateAfterCreation,Azure.ResourceManager.Storage.Models.DateAfterCreation,Azure.ResourceManager.Storage.Models.DateAfterCreation,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ManagementPolicyVersion" />. </summary>
            <param name="tierToCool"> The function to tier blob version to cool storage. </param>
            <param name="tierToArchive"> The function to tier blob version to archive storage. </param>
            <param name="tierToCold"> The function to tier blobs to cold storage. </param>
            <param name="tierToHot"> The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts. </param>
            <param name="delete"> The function to delete the blob version. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyVersion.TierToCool">
            <summary> The function to tier blob version to cool storage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyVersion.TierToArchive">
            <summary> The function to tier blob version to archive storage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyVersion.TierToCold">
            <summary> The function to tier blobs to cold storage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyVersion.TierToHot">
            <summary> The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ManagementPolicyVersion.Delete">
            <summary> The function to delete the blob version. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.Multichannel">
            <summary> Multichannel setting. Applies to Premium FileStorage only. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.Multichannel.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.Multichannel" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.Multichannel.#ctor(System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.Multichannel" />. </summary>
            <param name="isMultiChannelEnabled"> Indicates whether multichannel is enabled. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.Multichannel.IsMultiChannelEnabled">
            <summary> Indicates whether multichannel is enabled. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicies">
            <summary> List storage account object replication policies. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicies.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicies" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicies.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.ObjectReplicationPolicyData},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicies" />. </summary>
            <param name="value"> The replication policy between two storage accounts. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicies.Value">
            <summary> The replication policy between two storage accounts. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyFilter">
            <summary> Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyFilter.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyFilter" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyFilter.#ctor(System.Collections.Generic.IList{System.String},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyFilter" />. </summary>
            <param name="prefixMatch"> Optional. Filters the results to replicate only blobs whose names begin with the specified prefix. </param>
            <param name="minCreationTime"> Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyFilter.PrefixMatch">
            <summary> Optional. Filters the results to replicate only blobs whose names begin with the specified prefix. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyFilter.MinCreationTime">
            <summary> Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule">
            <summary> The replication policy rule between two containers. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule" />. </summary>
            <param name="sourceContainer"> Required. Source container name. </param>
            <param name="destinationContainer"> Required. Destination container name. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="sourceContainer" /> or <paramref name="destinationContainer" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule.#ctor(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyFilter,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule" />. </summary>
            <param name="ruleId"> Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account. </param>
            <param name="sourceContainer"> Required. Source container name. </param>
            <param name="destinationContainer"> Required. Destination container name. </param>
            <param name="filters"> Optional. An object that defines the filter set. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule.RuleId">
            <summary> Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule.SourceContainer">
            <summary> Required. Source container name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule.DestinationContainer">
            <summary> Required. Destination container name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule.Filters">
            <summary> Optional. An object that defines the filter set. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory">
            <summary> Protected append writes history setting for the blob container with Legal holds. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory" />. </summary>
            <param name="allowProtectedAppendWritesAll"> When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. </param>
            <param name="timestamp"> Returns the date and time the tag was added. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory.AllowProtectedAppendWritesAll">
            <summary> When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory.Timestamp">
            <summary> Returns the date and time the tag was added. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ProtocolSettings">
            <summary> Protocol settings for file service. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ProtocolSettings.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ProtocolSettings" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ProtocolSettings.#ctor(Azure.ResourceManager.Storage.Models.SmbSetting,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ProtocolSettings" />. </summary>
            <param name="smbSetting"> Setting for SMB protocol. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ProtocolSettings.SmbSetting">
            <summary> Setting for SMB protocol. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.RestorePolicy">
            <summary> The blob service properties for blob restore policy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RestorePolicy.#ctor(System.Boolean)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.RestorePolicy" />. </summary>
            <param name="isEnabled"> Blob restore is enabled if set to true. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RestorePolicy.#ctor(System.Boolean,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.RestorePolicy" />. </summary>
            <param name="isEnabled"> Blob restore is enabled if set to true. </param>
            <param name="days"> how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days. </param>
            <param name="lastEnabledOn"> Deprecated in favor of minRestoreTime property. </param>
            <param name="minRestoreOn"> Returns the minimum date and time that the restore can be started. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RestorePolicy.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.RestorePolicy" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.RestorePolicy.IsEnabled">
            <summary> Blob restore is enabled if set to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.RestorePolicy.Days">
            <summary> how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.RestorePolicy.LastEnabledOn">
            <summary> Deprecated in favor of minRestoreTime property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.RestorePolicy.MinRestoreOn">
            <summary> Returns the minimum date and time that the restore can be started. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.RootSquashType">
            <summary> The property is for NFS share only. The default is NoRootSquash. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RootSquashType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.RootSquashType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.RootSquashType.NoRootSquash">
            <summary> NoRootSquash. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.RootSquashType.RootSquash">
            <summary> RootSquash. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.RootSquashType.AllSquash">
            <summary> AllSquash. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RootSquashType.op_Equality(Azure.ResourceManager.Storage.Models.RootSquashType,Azure.ResourceManager.Storage.Models.RootSquashType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.RootSquashType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RootSquashType.op_Inequality(Azure.ResourceManager.Storage.Models.RootSquashType,Azure.ResourceManager.Storage.Models.RootSquashType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.RootSquashType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RootSquashType.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.RootSquashType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.RootSquashType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RootSquashType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RootSquashType.Equals(Azure.ResourceManager.Storage.Models.RootSquashType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RootSquashType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RootSquashType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ServiceSasContent">
            <summary> The parameters to list service SAS credentials of a specific resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasContent.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ServiceSasContent" />. </summary>
            <param name="canonicalizedResource"> The canonical path to the signed resource. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="canonicalizedResource" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasContent.#ctor(System.String,System.Nullable{Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType},System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountSasPermission},System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ServiceSasContent" />. </summary>
            <param name="canonicalizedResource"> The canonical path to the signed resource. </param>
            <param name="resource"> The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s). </param>
            <param name="permissions"> The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p). </param>
            <param name="ipAddressOrRange"> An IP address or a range of IP addresses from which to accept requests. </param>
            <param name="protocols"> The protocol permitted for a request made with the account SAS. </param>
            <param name="sharedAccessStartOn"> The time at which the SAS becomes valid. </param>
            <param name="sharedAccessExpiryOn"> The time at which the shared access signature becomes invalid. </param>
            <param name="identifier"> A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table. </param>
            <param name="partitionKeyStart"> The start of partition key. </param>
            <param name="partitionKeyEnd"> The end of partition key. </param>
            <param name="rowKeyStart"> The start of row key. </param>
            <param name="rowKeyEnd"> The end of row key. </param>
            <param name="keyToSign"> The key to sign the account SAS token with. </param>
            <param name="cacheControl"> The response header override for cache control. </param>
            <param name="contentDisposition"> The response header override for content disposition. </param>
            <param name="contentEncoding"> The response header override for content encoding. </param>
            <param name="contentLanguage"> The response header override for content language. </param>
            <param name="contentType"> The response header override for content type. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ServiceSasContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.CanonicalizedResource">
            <summary> The canonical path to the signed resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.Resource">
            <summary> The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s). </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.Permissions">
            <summary> The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p). </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.IPAddressOrRange">
            <summary> An IP address or a range of IP addresses from which to accept requests. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.Protocols">
            <summary> The protocol permitted for a request made with the account SAS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.SharedAccessStartOn">
            <summary> The time at which the SAS becomes valid. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.SharedAccessExpiryOn">
            <summary> The time at which the shared access signature becomes invalid. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.Identifier">
            <summary> A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.PartitionKeyStart">
            <summary> The start of partition key. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.PartitionKeyEnd">
            <summary> The end of partition key. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.RowKeyStart">
            <summary> The start of row key. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.RowKeyEnd">
            <summary> The end of row key. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.KeyToSign">
            <summary> The key to sign the account SAS token with. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.CacheControl">
            <summary> The response header override for cache control. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.ContentDisposition">
            <summary> The response header override for content disposition. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.ContentEncoding">
            <summary> The response header override for content encoding. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.ContentLanguage">
            <summary> The response header override for content language. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasContent.ContentType">
            <summary> The response header override for content type. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType">
            <summary> The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s). </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType.Blob">
            <summary> b. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType.Container">
            <summary> c. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType.File">
            <summary> f. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType.Share">
            <summary> s. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType.op_Equality(Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType,Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType.op_Inequality(Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType,Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType.Equals(Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasSignedResourceType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.SmbSetting">
            <summary> Setting for SMB protocol. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.SmbSetting.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.SmbSetting" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.SmbSetting.#ctor(Azure.ResourceManager.Storage.Models.Multichannel,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.SmbSetting" />. </summary>
            <param name="multichannel"> Multichannel setting. Applies to Premium FileStorage only. </param>
            <param name="versions"> SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'. </param>
            <param name="authenticationMethods"> SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'. </param>
            <param name="kerberosTicketEncryption"> Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'. </param>
            <param name="channelEncryption"> SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.SmbSetting.Multichannel">
            <summary> Multichannel setting. Applies to Premium FileStorage only. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.SmbSetting.IsMultiChannelEnabled">
            <summary> Indicates whether multichannel is enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.SmbSetting.Versions">
            <summary> SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.SmbSetting.AuthenticationMethods">
            <summary> SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.SmbSetting.KerberosTicketEncryption">
            <summary> Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.SmbSetting.ChannelEncryption">
            <summary> SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountAccessTier">
            <summary> Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageAccountAccessTier.Hot">
            <summary> Hot. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageAccountAccessTier.Cool">
            <summary> Cool. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageAccountAccessTier.Premium">
            <summary> Premium. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent">
            <summary> The parameters used when creating a storage account. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.#ctor(Azure.ResourceManager.Storage.Models.StorageSku,Azure.ResourceManager.Storage.Models.StorageKind,Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent" />. </summary>
            <param name="sku"> Required. Gets or sets the SKU name. </param>
            <param name="kind"> Required. Indicates the type of storage account. </param>
            <param name="location"> Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="sku" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.#ctor(Azure.ResourceManager.Storage.Models.StorageSku,Azure.ResourceManager.Storage.Models.StorageKind,Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Models.ManagedServiceIdentity,System.Nullable{Azure.ResourceManager.Storage.Models.AllowedCopyScope},System.Nullable{Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess},Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy,Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy,Azure.ResourceManager.Storage.Models.StorageCustomDomain,Azure.ResourceManager.Storage.Models.StorageAccountEncryption,Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountAccessTier},Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.LargeFileSharesState},Azure.ResourceManager.Storage.Models.StorageRoutingPreference,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.ImmutableStorageAccount,System.Nullable{Azure.ResourceManager.Storage.Models.StorageDnsEndpointType},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent" />. </summary>
            <param name="sku"> Required. Gets or sets the SKU name. </param>
            <param name="kind"> Required. Indicates the type of storage account. </param>
            <param name="location"> Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed. </param>
            <param name="extendedLocation"> Optional. Set the extended location of the resource. If not set, the storage account will be created in Azure main region. Otherwise it will be created in the specified extended location. </param>
            <param name="tags"> Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters. </param>
            <param name="identity"> The identity of the resource. </param>
            <param name="allowedCopyScope"> Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. </param>
            <param name="publicNetworkAccess"> Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </param>
            <param name="sasPolicy"> SasPolicy assigned to the storage account. </param>
            <param name="keyPolicy"> KeyPolicy assigned to the storage account. </param>
            <param name="customDomain"> User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property. </param>
            <param name="encryption"> Encryption settings to be used for server-side encryption for the storage account. </param>
            <param name="networkRuleSet"> Network rule set. </param>
            <param name="accessTier"> Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. </param>
            <param name="azureFilesIdentityBasedAuthentication"> Provides the identity based authentication settings for Azure Files. </param>
            <param name="enableHttpsTrafficOnly"> Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01. </param>
            <param name="isSftpEnabled"> Enables Secure File Transfer Protocol, if set to true. </param>
            <param name="isLocalUserEnabled"> Enables local users feature, if set to true. </param>
            <param name="isHnsEnabled"> Account HierarchicalNamespace enabled if sets to true. </param>
            <param name="largeFileSharesState"> Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. </param>
            <param name="routingPreference"> Maintains information about the network routing choice opted by the user for data transfer. </param>
            <param name="allowBlobPublicAccess"> Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property. </param>
            <param name="minimumTlsVersion"> Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. </param>
            <param name="allowSharedKeyAccess"> Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. </param>
            <param name="isNfsV3Enabled"> NFS 3.0 protocol support enabled if set to true. </param>
            <param name="allowCrossTenantReplication"> Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property. </param>
            <param name="isDefaultToOAuthAuthentication"> A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. </param>
            <param name="immutableStorageWithVersioning"> The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the new containers in the account by default. </param>
            <param name="dnsEndpointType"> Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.Sku">
            <summary> Required. Gets or sets the SKU name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.Kind">
            <summary> Required. Indicates the type of storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.Location">
            <summary> Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.ExtendedLocation">
            <summary> Optional. Set the extended location of the resource. If not set, the storage account will be created in Azure main region. Otherwise it will be created in the specified extended location. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.Tags">
            <summary> Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.Identity">
            <summary> The identity of the resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.AllowedCopyScope">
            <summary> Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.PublicNetworkAccess">
            <summary> Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.SasPolicy">
            <summary> SasPolicy assigned to the storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.KeyPolicy">
            <summary> KeyPolicy assigned to the storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.KeyExpirationPeriodInDays">
            <summary> The key expiration period in days. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.CustomDomain">
            <summary> User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.Encryption">
            <summary> Encryption settings to be used for server-side encryption for the storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.NetworkRuleSet">
            <summary> Network rule set. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.AccessTier">
            <summary> Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.AzureFilesIdentityBasedAuthentication">
            <summary> Provides the identity based authentication settings for Azure Files. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.EnableHttpsTrafficOnly">
            <summary> Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.IsSftpEnabled">
            <summary> Enables Secure File Transfer Protocol, if set to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.IsLocalUserEnabled">
            <summary> Enables local users feature, if set to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.IsHnsEnabled">
            <summary> Account HierarchicalNamespace enabled if sets to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.LargeFileSharesState">
            <summary> Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.RoutingPreference">
            <summary> Maintains information about the network routing choice opted by the user for data transfer. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.AllowBlobPublicAccess">
            <summary> Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.MinimumTlsVersion">
            <summary> Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.AllowSharedKeyAccess">
            <summary> Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.IsNfsV3Enabled">
            <summary> NFS 3.0 protocol support enabled if set to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.AllowCrossTenantReplication">
            <summary> Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.IsDefaultToOAuthAuthentication">
            <summary> A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.ImmutableStorageWithVersioning">
            <summary> The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the new containers in the account by default. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.DnsEndpointType">
            <summary> Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountEncryption">
            <summary> The encryption settings on the storage account. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryption.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountEncryption" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryption.#ctor(Azure.ResourceManager.Storage.Models.StorageAccountEncryptionServices,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountKeySource},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties,Azure.ResourceManager.Storage.Models.StorageAccountEncryptionIdentity,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountEncryption" />. </summary>
            <param name="services"> List of services which support encryption. </param>
            <param name="keySource"> The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault. </param>
            <param name="requireInfrastructureEncryption"> A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest. </param>
            <param name="keyVaultProperties"> Properties provided by key vault. </param>
            <param name="encryptionIdentity"> The identity to be used with service-side encryption at rest. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEncryption.Services">
            <summary> List of services which support encryption. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEncryption.KeySource">
            <summary> The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEncryption.RequireInfrastructureEncryption">
            <summary> A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEncryption.KeyVaultProperties">
            <summary> Properties provided by key vault. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEncryption.EncryptionIdentity">
            <summary> The identity to be used with service-side encryption at rest. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionIdentity">
            <summary> Encryption identity for the storage account. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionIdentity.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionIdentity" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionIdentity.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionIdentity" />. </summary>
            <param name="encryptionUserAssignedIdentity"> Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account. </param>
            <param name="encryptionFederatedIdentityClientId"> ClientId of the multi-tenant application to be used in conjunction with the user-assigned identity for cross-tenant customer-managed-keys server-side encryption on the storage account. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionIdentity.EncryptionUserAssignedIdentity">
            <summary> Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionIdentity.EncryptionFederatedIdentityClientId">
            <summary> ClientId of the multi-tenant application to be used in conjunction with the user-assigned identity for cross-tenant customer-managed-keys server-side encryption on the storage account. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionServices">
            <summary> A list of services that support encryption. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionServices.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionServices" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionServices.#ctor(Azure.ResourceManager.Storage.Models.StorageEncryptionService,Azure.ResourceManager.Storage.Models.StorageEncryptionService,Azure.ResourceManager.Storage.Models.StorageEncryptionService,Azure.ResourceManager.Storage.Models.StorageEncryptionService,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionServices" />. </summary>
            <param name="blob"> The encryption function of the blob storage service. </param>
            <param name="file"> The encryption function of the file storage service. </param>
            <param name="table"> The encryption function of the table storage service. </param>
            <param name="queue"> The encryption function of the queue storage service. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionServices.Blob">
            <summary> The encryption function of the blob storage service. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionServices.File">
            <summary> The encryption function of the file storage service. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionServices.Table">
            <summary> The encryption function of the table storage service. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionServices.Queue">
            <summary> The encryption function of the queue storage service. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints">
            <summary> The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints.#ctor(System.Uri,System.Uri,System.Uri,System.Uri,System.Uri,System.Uri,Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints,Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints" />. </summary>
            <param name="blobUri"> Gets the blob endpoint. </param>
            <param name="queueUri"> Gets the queue endpoint. </param>
            <param name="tableUri"> Gets the table endpoint. </param>
            <param name="fileUri"> Gets the file endpoint. </param>
            <param name="webUri"> Gets the web endpoint. </param>
            <param name="dfsUri"> Gets the dfs endpoint. </param>
            <param name="microsoftEndpoints"> Gets the microsoft routing storage endpoints. </param>
            <param name="internetEndpoints"> Gets the internet routing storage endpoints. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints.BlobUri">
            <summary> Gets the blob endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints.QueueUri">
            <summary> Gets the queue endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints.TableUri">
            <summary> Gets the table endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints.FileUri">
            <summary> Gets the file endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints.WebUri">
            <summary> Gets the web endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints.DfsUri">
            <summary> Gets the dfs endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints.MicrosoftEndpoints">
            <summary> Gets the microsoft routing storage endpoints. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints.InternetEndpoints">
            <summary> Gets the internet routing storage endpoints. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountExpand">
            <summary> The StorageAccountExpand. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageAccountExpand.GeoReplicationStats">
            <summary> geoReplicationStats. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageAccountExpand.BlobRestoreStatus">
            <summary> blobRestoreStatus. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountFailoverType">
            <summary> The StorageAccountFailoverType. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountFailoverType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountFailoverType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountFailoverType.Planned">
            <summary> Planned. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountFailoverType.op_Equality(Azure.ResourceManager.Storage.Models.StorageAccountFailoverType,Azure.ResourceManager.Storage.Models.StorageAccountFailoverType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountFailoverType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountFailoverType.op_Inequality(Azure.ResourceManager.Storage.Models.StorageAccountFailoverType,Azure.ResourceManager.Storage.Models.StorageAccountFailoverType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountFailoverType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountFailoverType.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageAccountFailoverType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountFailoverType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountFailoverType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountFailoverType.Equals(Azure.ResourceManager.Storage.Models.StorageAccountFailoverType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountFailoverType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountFailoverType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountGetKeysResult">
            <summary> The response from the ListKeys operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountGetKeysResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountGetKeysResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountGetKeysResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.Models.StorageAccountKey},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountGetKeysResult" />. </summary>
            <param name="keys"> Gets the list of storage account keys and their properties for the specified storage account. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountGetKeysResult.Keys">
            <summary> Gets the list of storage account keys and their properties for the specified storage account. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol">
            <summary> The protocol permitted for a request made with the account SAS. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol.HttpsHttp">
            <summary> https,http. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageAccountHttpProtocol.Https">
            <summary> https. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints">
            <summary> The URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints.#ctor(System.Uri,System.Uri,System.Uri,System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints" />. </summary>
            <param name="blobUri"> Gets the blob endpoint. </param>
            <param name="fileUri"> Gets the file endpoint. </param>
            <param name="webUri"> Gets the web endpoint. </param>
            <param name="dfsUri"> Gets the dfs endpoint. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints.BlobUri">
            <summary> Gets the blob endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints.FileUri">
            <summary> Gets the file endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints.WebUri">
            <summary> Gets the web endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints.DfsUri">
            <summary> Gets the dfs endpoint. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountIPRule">
            <summary> IP rule with specific IP or IP range in CIDR format. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountIPRule.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountIPRule" />. </summary>
            <param name="ipAddressOrRange"> Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="ipAddressOrRange" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountIPRule.#ctor(System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountIPRule" />. </summary>
            <param name="ipAddressOrRange"> Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed. </param>
            <param name="action"> The action of IP ACL rule. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountIPRule.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountIPRule" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountIPRule.IPAddressOrRange">
            <summary> Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountIPRule.Action">
            <summary> The action of IP ACL rule. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountKey">
            <summary> An access key for the storage account. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKey.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKey" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKey.#ctor(System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountKeyPermission},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKey" />. </summary>
            <param name="keyName"> Name of the key. </param>
            <param name="value"> Base 64-encoded value of the key. </param>
            <param name="permissions"> Permissions for the key -- read-only or full permissions. </param>
            <param name="createdOn"> Creation time of the key, in round trip date format. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountKey.KeyName">
            <summary> Name of the key. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountKey.Value">
            <summary> Base 64-encoded value of the key. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountKey.Permissions">
            <summary> Permissions for the key -- read-only or full permissions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountKey.CreatedOn">
            <summary> Creation time of the key, in round trip date format. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime">
            <summary> Storage account keys creation time. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime.#ctor(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime" />. </summary>
            <param name="key1"></param>
            <param name="key2"></param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime.Key1">
            <summary> Gets the key 1. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime.Key2">
            <summary> Gets the key 2. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyPermission">
            <summary> Permissions for the key -- read-only or full permissions. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageAccountKeyPermission.Read">
            <summary> Read. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageAccountKeyPermission.Full">
            <summary> Full. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy">
            <summary> KeyPolicy assigned to the storage account. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy.#ctor(System.Int32)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy" />. </summary>
            <param name="keyExpirationPeriodInDays"> The key expiration period in days. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy" />. </summary>
            <param name="keyExpirationPeriodInDays"> The key expiration period in days. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy.KeyExpirationPeriodInDays">
            <summary> The key expiration period in days. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountKeySource">
            <summary> The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeySource.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeySource" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountKeySource.Storage">
            <summary> Microsoft.Storage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountKeySource.KeyVault">
            <summary> Microsoft.Keyvault. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeySource.op_Equality(Azure.ResourceManager.Storage.Models.StorageAccountKeySource,Azure.ResourceManager.Storage.Models.StorageAccountKeySource)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeySource" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeySource.op_Inequality(Azure.ResourceManager.Storage.Models.StorageAccountKeySource,Azure.ResourceManager.Storage.Models.StorageAccountKeySource)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeySource" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeySource.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageAccountKeySource">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeySource" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeySource.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeySource.Equals(Azure.ResourceManager.Storage.Models.StorageAccountKeySource)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeySource.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeySource.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties">
            <summary> Properties of key vault. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties.#ctor(System.String,System.String,System.Uri,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties" />. </summary>
            <param name="keyName"> The name of KeyVault key. </param>
            <param name="keyVersion"> The version of KeyVault key. </param>
            <param name="keyVaultUri"> The Uri of KeyVault. </param>
            <param name="currentVersionedKeyIdentifier"> The object identifier of the current versioned Key Vault Key in use. </param>
            <param name="lastKeyRotationTimestamp"> Timestamp of last rotation of the Key Vault Key. </param>
            <param name="currentVersionedKeyExpirationTimestamp"> This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties.KeyName">
            <summary> The name of KeyVault key. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties.KeyVersion">
            <summary> The version of KeyVault key. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties.KeyVaultUri">
            <summary> The Uri of KeyVault. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties.CurrentVersionedKeyIdentifier">
            <summary> The object identifier of the current versioned Key Vault Key in use. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties.LastKeyRotationTimestamp">
            <summary> Timestamp of last rotation of the Key Vault Key. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties.CurrentVersionedKeyExpirationTimestamp">
            <summary> This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountListResult">
            <summary> The response from the List Storage Accounts operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.StorageAccountData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountListResult" />. </summary>
            <param name="value"> Gets the list of storage accounts and their properties. </param>
            <param name="nextLink"> Request URL that can be used to query next page of storage accounts. Returned when total number of requested storage accounts exceed maximum page size. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountListResult.Value">
            <summary> Gets the list of storage accounts and their properties. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountListResult.NextLink">
            <summary> Request URL that can be used to query next page of storage accounts. Returned when total number of requested storage accounts exceed maximum page size. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints">
            <summary> The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing endpoint. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints.#ctor(System.Uri,System.Uri,System.Uri,System.Uri,System.Uri,System.Uri,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints" />. </summary>
            <param name="blobUri"> Gets the blob endpoint. </param>
            <param name="queueUri"> Gets the queue endpoint. </param>
            <param name="tableUri"> Gets the table endpoint. </param>
            <param name="fileUri"> Gets the file endpoint. </param>
            <param name="webUri"> Gets the web endpoint. </param>
            <param name="dfsUri"> Gets the dfs endpoint. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints.BlobUri">
            <summary> Gets the blob endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints.QueueUri">
            <summary> Gets the queue endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints.TableUri">
            <summary> Gets the table endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints.FileUri">
            <summary> Gets the file endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints.WebUri">
            <summary> Gets the web endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints.DfsUri">
            <summary> Gets the dfs endpoint. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent">
            <summary> The parameters used to check the availability of the storage account name. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent" />. </summary>
            <param name="name"> The storage account name. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent.#ctor(System.String,Azure.Core.ResourceType,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent" />. </summary>
            <param name="name"> The storage account name. </param>
            <param name="resourceType"> The type of resource, Microsoft.Storage/storageAccounts. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent.Name">
            <summary> The storage account name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent.ResourceType">
            <summary> The type of resource, Microsoft.Storage/storageAccounts. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult">
            <summary> The CheckNameAvailability operation response. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult.#ctor(System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountNameUnavailableReason},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult" />. </summary>
            <param name="isNameAvailable"> Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used. </param>
            <param name="reason"> Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false. </param>
            <param name="message"> Gets an error message explaining the Reason value in more detail. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult.IsNameAvailable">
            <summary> Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult.Reason">
            <summary> Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult.Message">
            <summary> Gets an error message explaining the Reason value in more detail. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountNameUnavailableReason">
            <summary> Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageAccountNameUnavailableReason.AccountNameInvalid">
            <summary> AccountNameInvalid. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageAccountNameUnavailableReason.AlreadyExists">
            <summary> AlreadyExists. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction">
            <summary> The action of virtual network rule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction.Allow">
            <summary> Allow. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction.op_Equality(Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction,Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction.op_Inequality(Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction,Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction.Equals(Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet">
            <summary> Network rule set. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet.#ctor(Azure.ResourceManager.Storage.Models.StorageNetworkDefaultAction)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet" />. </summary>
            <param name="defaultAction"> Specifies the default action of allow or deny when no other rules match. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet.#ctor(System.Nullable{Azure.ResourceManager.Storage.Models.StorageNetworkBypass},System.Collections.Generic.IList{Azure.ResourceManager.Storage.Models.StorageAccountResourceAccessRule},System.Collections.Generic.IList{Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule},System.Collections.Generic.IList{Azure.ResourceManager.Storage.Models.StorageAccountIPRule},Azure.ResourceManager.Storage.Models.StorageNetworkDefaultAction,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet" />. </summary>
            <param name="bypass"> Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics. </param>
            <param name="resourceAccessRules"> Sets the resource access rules. </param>
            <param name="virtualNetworkRules"> Sets the virtual network rules. </param>
            <param name="ipRules"> Sets the IP ACL rules. </param>
            <param name="defaultAction"> Specifies the default action of allow or deny when no other rules match. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet.Bypass">
            <summary> Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet.ResourceAccessRules">
            <summary> Sets the resource access rules. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet.VirtualNetworkRules">
            <summary> Sets the virtual network rules. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet.IPRules">
            <summary> Sets the IP ACL rules. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet.DefaultAction">
            <summary> Specifies the default action of allow or deny when no other rules match. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState">
            <summary> Gets the state of virtual network rule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState.Provisioning">
            <summary> Provisioning. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState.Deprovisioning">
            <summary> Deprovisioning. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState.Succeeded">
            <summary> Succeeded. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState.Failed">
            <summary> Failed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState.NetworkSourceDeleted">
            <summary> NetworkSourceDeleted. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState.op_Equality(Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState,Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState.op_Inequality(Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState,Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState.Equals(Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountPatch">
            <summary> The parameters that can be provided when updating the storage account properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountPatch.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountPatch" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountPatch.#ctor(Azure.ResourceManager.Storage.Models.StorageSku,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Models.ManagedServiceIdentity,System.Nullable{Azure.ResourceManager.Storage.Models.StorageKind},Azure.ResourceManager.Storage.Models.StorageCustomDomain,Azure.ResourceManager.Storage.Models.StorageAccountEncryption,Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy,Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountAccessTier},Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet,System.Nullable{Azure.ResourceManager.Storage.Models.LargeFileSharesState},Azure.ResourceManager.Storage.Models.StorageRoutingPreference,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess},Azure.ResourceManager.Storage.Models.ImmutableStorageAccount,System.Nullable{Azure.ResourceManager.Storage.Models.AllowedCopyScope},System.Nullable{Azure.ResourceManager.Storage.Models.StorageDnsEndpointType},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountPatch" />. </summary>
            <param name="sku"> Gets or sets the SKU name. Note that the SKU name cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor can accounts of those SKU names be updated to any other value. </param>
            <param name="tags"> Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters. </param>
            <param name="identity"> The identity of the resource. </param>
            <param name="kind"> Optional. Indicates the type of storage account. Currently only StorageV2 value supported by server. </param>
            <param name="customDomain"> Custom domain assigned to the storage account by the user. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property. </param>
            <param name="encryption"> Not applicable. Azure Storage encryption at rest is enabled by default for all storage accounts and cannot be disabled. </param>
            <param name="sasPolicy"> SasPolicy assigned to the storage account. </param>
            <param name="keyPolicy"> KeyPolicy assigned to the storage account. </param>
            <param name="accessTier"> Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. </param>
            <param name="azureFilesIdentityBasedAuthentication"> Provides the identity based authentication settings for Azure Files. </param>
            <param name="enableHttpsTrafficOnly"> Allows https traffic only to storage service if sets to true. </param>
            <param name="isSftpEnabled"> Enables Secure File Transfer Protocol, if set to true. </param>
            <param name="isLocalUserEnabled"> Enables local users feature, if set to true. </param>
            <param name="networkRuleSet"> Network rule set. </param>
            <param name="largeFileSharesState"> Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. </param>
            <param name="routingPreference"> Maintains information about the network routing choice opted by the user for data transfer. </param>
            <param name="allowBlobPublicAccess"> Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property. </param>
            <param name="minimumTlsVersion"> Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. </param>
            <param name="allowSharedKeyAccess"> Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. </param>
            <param name="allowCrossTenantReplication"> Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property. </param>
            <param name="isDefaultToOAuthAuthentication"> A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. </param>
            <param name="publicNetworkAccess"> Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </param>
            <param name="immutableStorageWithVersioning"> The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default. </param>
            <param name="allowedCopyScope"> Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. </param>
            <param name="dnsEndpointType"> Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.Sku">
            <summary> Gets or sets the SKU name. Note that the SKU name cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor can accounts of those SKU names be updated to any other value. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.Tags">
            <summary> Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.Identity">
            <summary> The identity of the resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.Kind">
            <summary> Optional. Indicates the type of storage account. Currently only StorageV2 value supported by server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.CustomDomain">
            <summary> Custom domain assigned to the storage account by the user. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.Encryption">
            <summary> Not applicable. Azure Storage encryption at rest is enabled by default for all storage accounts and cannot be disabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.SasPolicy">
            <summary> SasPolicy assigned to the storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.KeyPolicy">
            <summary> KeyPolicy assigned to the storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.KeyExpirationPeriodInDays">
            <summary> The key expiration period in days. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.AccessTier">
            <summary> Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.AzureFilesIdentityBasedAuthentication">
            <summary> Provides the identity based authentication settings for Azure Files. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.EnableHttpsTrafficOnly">
            <summary> Allows https traffic only to storage service if sets to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.IsSftpEnabled">
            <summary> Enables Secure File Transfer Protocol, if set to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.IsLocalUserEnabled">
            <summary> Enables local users feature, if set to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.NetworkRuleSet">
            <summary> Network rule set. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.LargeFileSharesState">
            <summary> Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.RoutingPreference">
            <summary> Maintains information about the network routing choice opted by the user for data transfer. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.AllowBlobPublicAccess">
            <summary> Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.MinimumTlsVersion">
            <summary> Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.AllowSharedKeyAccess">
            <summary> Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.AllowCrossTenantReplication">
            <summary> Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.IsDefaultToOAuthAuthentication">
            <summary> A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.PublicNetworkAccess">
            <summary> Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.ImmutableStorageWithVersioning">
            <summary> The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.AllowedCopyScope">
            <summary> Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountPatch.DnsEndpointType">
            <summary> Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent">
            <summary> The parameters used to regenerate the storage account key. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent" />. </summary>
            <param name="keyName"> The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1, kerb2. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="keyName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent" />. </summary>
            <param name="keyName"> The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1, kerb2. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent.KeyName">
            <summary> The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1, kerb2. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountResourceAccessRule">
            <summary> Resource Access Rule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountResourceAccessRule.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountResourceAccessRule" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountResourceAccessRule.#ctor(System.Nullable{System.Guid},Azure.Core.ResourceIdentifier,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountResourceAccessRule" />. </summary>
            <param name="tenantId"> Tenant Id. </param>
            <param name="resourceId"> Resource Id. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountResourceAccessRule.TenantId">
            <summary> Tenant Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountResourceAccessRule.ResourceId">
            <summary> Resource Id. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission">
            <summary> The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p). </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.R">
            <summary> r. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.D">
            <summary> d. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.W">
            <summary> w. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.L">
            <summary> l. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.A">
            <summary> a. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.C">
            <summary> c. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.U">
            <summary> u. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.P">
            <summary> p. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.op_Equality(Azure.ResourceManager.Storage.Models.StorageAccountSasPermission,Azure.ResourceManager.Storage.Models.StorageAccountSasPermission)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.op_Inequality(Azure.ResourceManager.Storage.Models.StorageAccountSasPermission,Azure.ResourceManager.Storage.Models.StorageAccountSasPermission)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageAccountSasPermission">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.Equals(Azure.ResourceManager.Storage.Models.StorageAccountSasPermission)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPermission.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy">
            <summary> SasPolicy assigned to the storage account. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy.#ctor(System.String,Azure.ResourceManager.Storage.Models.ExpirationAction)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy" />. </summary>
            <param name="sasExpirationPeriod"> The SAS expiration period, DD.HH:MM:SS. </param>
            <param name="expirationAction"> The SAS expiration action. Can only be Log. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="sasExpirationPeriod" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy.#ctor(System.String,Azure.ResourceManager.Storage.Models.ExpirationAction,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy" />. </summary>
            <param name="sasExpirationPeriod"> The SAS expiration period, DD.HH:MM:SS. </param>
            <param name="expirationAction"> The SAS expiration action. Can only be Log. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy.SasExpirationPeriod">
            <summary> The SAS expiration period, DD.HH:MM:SS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy.ExpirationAction">
            <summary> The SAS expiration action. Can only be Log. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType">
            <summary> The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType.S">
            <summary> s. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType.C">
            <summary> c. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType.O">
            <summary> o. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType.op_Equality(Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType,Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType.op_Inequality(Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType,Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType.Equals(Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedResourceType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService">
            <summary> The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f). </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService.B">
            <summary> b. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService.Q">
            <summary> q. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService.T">
            <summary> t. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService.F">
            <summary> f. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService.op_Equality(Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService,Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService.op_Inequality(Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService,Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService.Equals(Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasSignedService.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState">
            <summary> This property indicates the current sku conversion status. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState.InProgress">
            <summary> InProgress. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState.Succeeded">
            <summary> Succeeded. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState.Failed">
            <summary> Failed. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState.op_Equality(Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState,Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState.op_Inequality(Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState,Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState.Equals(Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus">
            <summary> This defines the sku conversion status object for asynchronous sku conversions. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus.#ctor(System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionState},System.Nullable{Azure.ResourceManager.Storage.Models.StorageSkuName},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus" />. </summary>
            <param name="skuConversionStatus"> This property indicates the current sku conversion status. </param>
            <param name="targetSkuName"> This property represents the target sku name to which the account sku is being converted asynchronously. </param>
            <param name="startOn"> This property represents the sku conversion start time. </param>
            <param name="endOn"> This property represents the sku conversion end time. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus.SkuConversionStatus">
            <summary> This property indicates the current sku conversion status. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus.TargetSkuName">
            <summary> This property represents the target sku name to which the account sku is being converted asynchronously. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus.StartOn">
            <summary> This property represents the sku conversion start time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus.EndOn">
            <summary> This property represents the sku conversion end time. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountStatus">
            <summary> Gets the status indicating whether the primary location of the storage account is available or unavailable. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageAccountStatus.Available">
            <summary> available. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageAccountStatus.Unavailable">
            <summary> unavailable. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule">
            <summary> Virtual Network rule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule.#ctor(Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule" />. </summary>
            <param name="virtualNetworkResourceId"> Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="virtualNetworkResourceId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule.#ctor(Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleAction},System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule" />. </summary>
            <param name="virtualNetworkResourceId"> Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}. </param>
            <param name="action"> The action of virtual network rule. </param>
            <param name="state"> Gets the state of virtual network rule. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule.VirtualNetworkResourceId">
            <summary> Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule.Action">
            <summary> The action of virtual network rule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule.State">
            <summary> Gets the state of virtual network rule. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties">
            <summary> Settings properties for Active Directory (AD). </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.#ctor(System.String,System.Guid)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties" />. </summary>
            <param name="domainName"> Specifies the primary domain that the AD DNS server is authoritative for. </param>
            <param name="domainGuid"> Specifies the domain GUID. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="domainName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.#ctor(System.String,System.String,System.String,System.Guid,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.ActiveDirectoryAccountType},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties" />. </summary>
            <param name="domainName"> Specifies the primary domain that the AD DNS server is authoritative for. </param>
            <param name="netBiosDomainName"> Specifies the NetBIOS domain name. </param>
            <param name="forestName"> Specifies the Active Directory forest to get. </param>
            <param name="domainGuid"> Specifies the domain GUID. </param>
            <param name="domainSid"> Specifies the security identifier (SID). </param>
            <param name="azureStorageSid"> Specifies the security identifier (SID) for Azure Storage. </param>
            <param name="samAccountName"> Specifies the Active Directory SAMAccountName for Azure Storage. </param>
            <param name="accountType"> Specifies the Active Directory account type for Azure Storage. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.DomainName">
            <summary> Specifies the primary domain that the AD DNS server is authoritative for. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.NetBiosDomainName">
            <summary> Specifies the NetBIOS domain name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.ForestName">
            <summary> Specifies the Active Directory forest to get. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.DomainGuid">
            <summary> Specifies the domain GUID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.DomainSid">
            <summary> Specifies the security identifier (SID). </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.AzureStorageSid">
            <summary> Specifies the security identifier (SID) for Azure Storage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.SamAccountName">
            <summary> Specifies the Active Directory SAMAccountName for Azure Storage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.AccountType">
            <summary> Specifies the Active Directory account type for Azure Storage. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageCorsRule">
            <summary> Specifies a CORS rule for the Blob service. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCorsRule.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod},System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageCorsRule" />. </summary>
            <param name="allowedOrigins"> Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains. </param>
            <param name="allowedMethods"> Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin. </param>
            <param name="maxAgeInSeconds"> Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response. </param>
            <param name="exposedHeaders"> Required if CorsRule element is present. A list of response headers to expose to CORS clients. </param>
            <param name="allowedHeaders"> Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="allowedOrigins" />, <paramref name="allowedMethods" />, <paramref name="exposedHeaders" /> or <paramref name="allowedHeaders" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCorsRule.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Azure.ResourceManager.Storage.Models.CorsRuleAllowedMethod},System.Int32,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageCorsRule" />. </summary>
            <param name="allowedOrigins"> Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains. </param>
            <param name="allowedMethods"> Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin. </param>
            <param name="maxAgeInSeconds"> Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response. </param>
            <param name="exposedHeaders"> Required if CorsRule element is present. A list of response headers to expose to CORS clients. </param>
            <param name="allowedHeaders"> Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCorsRule.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageCorsRule" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageCorsRule.AllowedOrigins">
            <summary> Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageCorsRule.AllowedMethods">
            <summary> Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageCorsRule.MaxAgeInSeconds">
            <summary> Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageCorsRule.ExposedHeaders">
            <summary> Required if CorsRule element is present. A list of response headers to expose to CORS clients. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageCorsRule.AllowedHeaders">
            <summary> Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageCorsRules">
            <summary> Sets the CORS rules. You can include up to five CorsRule elements in the request. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCorsRules.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageCorsRules" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCorsRules.#ctor(System.Collections.Generic.IList{Azure.ResourceManager.Storage.Models.StorageCorsRule},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageCorsRules" />. </summary>
            <param name="corsRules"> The List of CORS rules. You can include up to five CorsRule elements in the request. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageCorsRules.CorsRules">
            <summary> The List of CORS rules. You can include up to five CorsRule elements in the request. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageCustomDomain">
            <summary> The custom domain assigned to this storage account. This can be set via Update. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCustomDomain.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageCustomDomain" />. </summary>
            <param name="name"> Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCustomDomain.#ctor(System.String,System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageCustomDomain" />. </summary>
            <param name="name"> Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source. </param>
            <param name="isUseSubDomainNameEnabled"> Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCustomDomain.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageCustomDomain" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageCustomDomain.Name">
            <summary> Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageCustomDomain.IsUseSubDomainNameEnabled">
            <summary> Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageDnsEndpointType">
            <summary> Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageDnsEndpointType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageDnsEndpointType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageDnsEndpointType.Standard">
            <summary> Standard. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageDnsEndpointType.AzureDnsZone">
            <summary> AzureDnsZone. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageDnsEndpointType.op_Equality(Azure.ResourceManager.Storage.Models.StorageDnsEndpointType,Azure.ResourceManager.Storage.Models.StorageDnsEndpointType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageDnsEndpointType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageDnsEndpointType.op_Inequality(Azure.ResourceManager.Storage.Models.StorageDnsEndpointType,Azure.ResourceManager.Storage.Models.StorageDnsEndpointType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageDnsEndpointType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageDnsEndpointType.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageDnsEndpointType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageDnsEndpointType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageDnsEndpointType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageDnsEndpointType.Equals(Azure.ResourceManager.Storage.Models.StorageDnsEndpointType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageDnsEndpointType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageDnsEndpointType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType">
            <summary> Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType.Service">
            <summary> Service. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType.Account">
            <summary> Account. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType.op_Equality(Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType,Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType.op_Inequality(Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType,Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType.Equals(Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageEncryptionService">
            <summary> A service that allows server-side encryption to be used. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageEncryptionService.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageEncryptionService" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageEncryptionService.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Storage.Models.StorageEncryptionKeyType},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageEncryptionService" />. </summary>
            <param name="isEnabled"> A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is enabled by default today and cannot be disabled. </param>
            <param name="lastEnabledOn"> Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is encrypted at rest by default today and cannot be disabled. </param>
            <param name="keyType"> Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageEncryptionService.IsEnabled">
            <summary> A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is enabled by default today and cannot be disabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageEncryptionService.LastEnabledOn">
            <summary> Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is encrypted at rest by default today and cannot be disabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageEncryptionService.KeyType">
            <summary> Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageKind">
            <summary> Indicates the type of storage account. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageKind.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageKind" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageKind.Storage">
            <summary> Storage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageKind.StorageV2">
            <summary> StorageV2. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageKind.BlobStorage">
            <summary> BlobStorage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageKind.FileStorage">
            <summary> FileStorage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageKind.BlockBlobStorage">
            <summary> BlockBlobStorage. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageKind.op_Equality(Azure.ResourceManager.Storage.Models.StorageKind,Azure.ResourceManager.Storage.Models.StorageKind)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageKind" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageKind.op_Inequality(Azure.ResourceManager.Storage.Models.StorageKind,Azure.ResourceManager.Storage.Models.StorageKind)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageKind" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageKind.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageKind">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageKind" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageKind.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageKind.Equals(Azure.ResourceManager.Storage.Models.StorageKind)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageKind.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageKind.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageLeaseDurationType">
            <summary> Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseDurationType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageLeaseDurationType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageLeaseDurationType.Infinite">
            <summary> Infinite. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageLeaseDurationType.Fixed">
            <summary> Fixed. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseDurationType.op_Equality(Azure.ResourceManager.Storage.Models.StorageLeaseDurationType,Azure.ResourceManager.Storage.Models.StorageLeaseDurationType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageLeaseDurationType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseDurationType.op_Inequality(Azure.ResourceManager.Storage.Models.StorageLeaseDurationType,Azure.ResourceManager.Storage.Models.StorageLeaseDurationType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageLeaseDurationType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseDurationType.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageLeaseDurationType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageLeaseDurationType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseDurationType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseDurationType.Equals(Azure.ResourceManager.Storage.Models.StorageLeaseDurationType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseDurationType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseDurationType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageLeaseState">
            <summary> Lease state of the container. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageLeaseState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageLeaseState.Available">
            <summary> Available. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageLeaseState.Leased">
            <summary> Leased. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageLeaseState.Expired">
            <summary> Expired. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageLeaseState.Breaking">
            <summary> Breaking. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageLeaseState.Broken">
            <summary> Broken. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseState.op_Equality(Azure.ResourceManager.Storage.Models.StorageLeaseState,Azure.ResourceManager.Storage.Models.StorageLeaseState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageLeaseState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseState.op_Inequality(Azure.ResourceManager.Storage.Models.StorageLeaseState,Azure.ResourceManager.Storage.Models.StorageLeaseState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageLeaseState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseState.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageLeaseState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageLeaseState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseState.Equals(Azure.ResourceManager.Storage.Models.StorageLeaseState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageLeaseStatus">
            <summary> The lease status of the container. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseStatus.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageLeaseStatus" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageLeaseStatus.Locked">
            <summary> Locked. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageLeaseStatus.Unlocked">
            <summary> Unlocked. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseStatus.op_Equality(Azure.ResourceManager.Storage.Models.StorageLeaseStatus,Azure.ResourceManager.Storage.Models.StorageLeaseStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageLeaseStatus" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseStatus.op_Inequality(Azure.ResourceManager.Storage.Models.StorageLeaseStatus,Azure.ResourceManager.Storage.Models.StorageLeaseStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageLeaseStatus" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseStatus.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageLeaseStatus">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageLeaseStatus" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseStatus.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseStatus.Equals(Azure.ResourceManager.Storage.Models.StorageLeaseStatus)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseStatus.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageLeaseStatus.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageListKeyExpand">
            <summary> The StorageListKeyExpand. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageListKeyExpand.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageListKeyExpand" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageListKeyExpand.Kerb">
            <summary> kerb. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageListKeyExpand.op_Equality(Azure.ResourceManager.Storage.Models.StorageListKeyExpand,Azure.ResourceManager.Storage.Models.StorageListKeyExpand)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageListKeyExpand" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageListKeyExpand.op_Inequality(Azure.ResourceManager.Storage.Models.StorageListKeyExpand,Azure.ResourceManager.Storage.Models.StorageListKeyExpand)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageListKeyExpand" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageListKeyExpand.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageListKeyExpand">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageListKeyExpand" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageListKeyExpand.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageListKeyExpand.Equals(Azure.ResourceManager.Storage.Models.StorageListKeyExpand)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageListKeyExpand.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageListKeyExpand.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageNetworkBypass">
            <summary> Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageNetworkBypass.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageNetworkBypass" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageNetworkBypass.None">
            <summary> None. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageNetworkBypass.Logging">
            <summary> Logging. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageNetworkBypass.Metrics">
            <summary> Metrics. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageNetworkBypass.AzureServices">
            <summary> AzureServices. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageNetworkBypass.op_Equality(Azure.ResourceManager.Storage.Models.StorageNetworkBypass,Azure.ResourceManager.Storage.Models.StorageNetworkBypass)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageNetworkBypass" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageNetworkBypass.op_Inequality(Azure.ResourceManager.Storage.Models.StorageNetworkBypass,Azure.ResourceManager.Storage.Models.StorageNetworkBypass)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageNetworkBypass" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageNetworkBypass.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageNetworkBypass">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageNetworkBypass" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageNetworkBypass.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageNetworkBypass.Equals(Azure.ResourceManager.Storage.Models.StorageNetworkBypass)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageNetworkBypass.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageNetworkBypass.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageNetworkDefaultAction">
            <summary> Specifies the default action of allow or deny when no other rules match. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageNetworkDefaultAction.Allow">
            <summary> Allow. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageNetworkDefaultAction.Deny">
            <summary> Deny. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StoragePermissionScope">
            <summary> The StoragePermissionScope. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePermissionScope.#ctor(System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePermissionScope" />. </summary>
            <param name="permissions"> The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), and Create (c). </param>
            <param name="service"> The service used by the local user, e.g. blob, file. </param>
            <param name="resourceName"> The name of resource, normally the container name or the file share name, used by the local user. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="permissions" />, <paramref name="service" /> or <paramref name="resourceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePermissionScope.#ctor(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePermissionScope" />. </summary>
            <param name="permissions"> The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), and Create (c). </param>
            <param name="service"> The service used by the local user, e.g. blob, file. </param>
            <param name="resourceName"> The name of resource, normally the container name or the file share name, used by the local user. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePermissionScope.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePermissionScope" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePermissionScope.Permissions">
            <summary> The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), and Create (c). </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePermissionScope.Service">
            <summary> The service used by the local user, e.g. blob, file. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePermissionScope.ResourceName">
            <summary> The name of resource, normally the container name or the file share name, used by the local user. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionListResult">
            <summary> List of private endpoint connection associated with the specified storage account. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionListResult" />. </summary>
            <param name="value"> Array of private endpoint connections. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionListResult.Value">
            <summary> Array of private endpoint connections. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState">
            <summary> The current provisioning state. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState.Succeeded">
            <summary> Succeeded. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState.Creating">
            <summary> Creating. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState.Deleting">
            <summary> Deleting. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState.Failed">
            <summary> Failed. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState.op_Equality(Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState,Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState.op_Inequality(Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState,Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState.Equals(Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus">
            <summary> The private endpoint connection status. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus.Pending">
            <summary> Pending. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus.Approved">
            <summary> Approved. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus.Rejected">
            <summary> Rejected. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus.op_Equality(Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus,Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus.op_Inequality(Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus,Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus.Equals(Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData">
            <summary> A private link resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="groupId"> The private link resource group id. </param>
            <param name="requiredMembers"> The private link resource required member names. </param>
            <param name="requiredZoneNames"> The private link resource Private link DNS zone name. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData.GroupId">
            <summary> The private link resource group id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData.RequiredMembers">
            <summary> The private link resource required member names. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData.RequiredZoneNames">
            <summary> The private link resource Private link DNS zone name. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceListResult">
            <summary> A list of private link resources. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceListResult" />. </summary>
            <param name="value"> Array of private link resources. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceListResult.Value">
            <summary> Array of private link resources. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState">
            <summary> A collection of information about the state of the connection between service consumer and provider. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState.#ctor(System.Nullable{Azure.ResourceManager.Storage.Models.StoragePrivateEndpointServiceConnectionStatus},System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState" />. </summary>
            <param name="status"> Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. </param>
            <param name="description"> The reason for approval/rejection of the connection. </param>
            <param name="actionRequired"> A message indicating if changes on the service provider require any updates on the consumer. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState.Status">
            <summary> Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState.Description">
            <summary> The reason for approval/rejection of the connection. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState.ActionRequired">
            <summary> A message indicating if changes on the service provider require any updates on the consumer. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageProvisioningState">
            <summary> Gets the status of the storage account at the time the operation was called. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageProvisioningState.Creating">
            <summary> Creating. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageProvisioningState.ResolvingDns">
            <summary> ResolvingDNS. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageProvisioningState.Succeeded">
            <summary> Succeeded. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StoragePublicAccessType">
            <summary> Specifies whether data in the container may be accessed publicly and the level of access. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StoragePublicAccessType.None">
            <summary> None. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StoragePublicAccessType.Container">
            <summary> Container. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StoragePublicAccessType.Blob">
            <summary> Blob. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess">
            <summary> Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess.Enabled">
            <summary> Enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess.Disabled">
            <summary> Disabled. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess.op_Equality(Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess,Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess.op_Inequality(Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess,Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess.Equals(Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode">
            <summary> The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode.QuotaId">
            <summary> QuotaId. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode.NotAvailableForSubscription">
            <summary> NotAvailableForSubscription. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode.op_Equality(Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode,Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode.op_Inequality(Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode,Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode.Equals(Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageRoutingChoice">
            <summary> Routing Choice defines the kind of network routing opted by the user. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRoutingChoice.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageRoutingChoice" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageRoutingChoice.MicrosoftRouting">
            <summary> MicrosoftRouting. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageRoutingChoice.InternetRouting">
            <summary> InternetRouting. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRoutingChoice.op_Equality(Azure.ResourceManager.Storage.Models.StorageRoutingChoice,Azure.ResourceManager.Storage.Models.StorageRoutingChoice)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageRoutingChoice" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRoutingChoice.op_Inequality(Azure.ResourceManager.Storage.Models.StorageRoutingChoice,Azure.ResourceManager.Storage.Models.StorageRoutingChoice)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageRoutingChoice" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRoutingChoice.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageRoutingChoice">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageRoutingChoice" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRoutingChoice.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRoutingChoice.Equals(Azure.ResourceManager.Storage.Models.StorageRoutingChoice)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRoutingChoice.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRoutingChoice.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageRoutingPreference">
            <summary> Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRoutingPreference.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageRoutingPreference" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRoutingPreference.#ctor(System.Nullable{Azure.ResourceManager.Storage.Models.StorageRoutingChoice},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageRoutingPreference" />. </summary>
            <param name="routingChoice"> Routing Choice defines the kind of network routing opted by the user. </param>
            <param name="isMicrosoftEndpointsPublished"> A boolean flag which indicates whether microsoft routing storage endpoints are to be published. </param>
            <param name="isInternetEndpointsPublished"> A boolean flag which indicates whether internet routing storage endpoints are to be published. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageRoutingPreference.RoutingChoice">
            <summary> Routing Choice defines the kind of network routing opted by the user. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageRoutingPreference.IsMicrosoftEndpointsPublished">
            <summary> A boolean flag which indicates whether microsoft routing storage endpoints are to be published. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageRoutingPreference.IsInternetEndpointsPublished">
            <summary> A boolean flag which indicates whether internet routing storage endpoints are to be published. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageServiceAccessPolicy">
            <summary> The StorageServiceAccessPolicy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageServiceAccessPolicy.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageServiceAccessPolicy" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageServiceAccessPolicy.#ctor(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageServiceAccessPolicy" />. </summary>
            <param name="startOn"> Start time of the access policy. </param>
            <param name="expireOn"> Expiry time of the access policy. </param>
            <param name="permission"> List of abbreviated permissions. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageServiceAccessPolicy.StartOn">
            <summary> Start time of the access policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageServiceAccessPolicy.ExpireOn">
            <summary> Expiry time of the access policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageServiceAccessPolicy.Permission">
            <summary> List of abbreviated permissions. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageSignedIdentifier">
            <summary> The StorageSignedIdentifier. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSignedIdentifier.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSignedIdentifier" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSignedIdentifier.#ctor(System.String,Azure.ResourceManager.Storage.Models.StorageServiceAccessPolicy,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSignedIdentifier" />. </summary>
            <param name="id"> An unique identifier of the stored access policy. </param>
            <param name="accessPolicy"> Access policy. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSignedIdentifier.Id">
            <summary> An unique identifier of the stored access policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSignedIdentifier.AccessPolicy">
            <summary> Access policy. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageSku">
            <summary> The SKU of the storage account. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSku.#ctor(Azure.ResourceManager.Storage.Models.StorageSkuName)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSku" />. </summary>
            <param name="name"> The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSku.#ctor(Azure.ResourceManager.Storage.Models.StorageSkuName,System.Nullable{Azure.ResourceManager.Storage.Models.StorageSkuTier},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSku" />. </summary>
            <param name="name"> The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType. </param>
            <param name="tier"> The SKU tier. This is based on the SKU name. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSku.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSku" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSku.Name">
            <summary> The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSku.Tier">
            <summary> The SKU tier. This is based on the SKU name. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageSkuCapability">
            <summary> The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuCapability.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuCapability" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuCapability.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuCapability" />. </summary>
            <param name="name"> The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc. </param>
            <param name="value"> A string value to indicate states of given capability. Possibly 'true' or 'false'. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuCapability.Name">
            <summary> The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuCapability.Value">
            <summary> A string value to indicate states of given capability. Possibly 'true' or 'false'. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageSkuInformation">
            <summary> Storage SKU and its properties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuInformation.#ctor(Azure.ResourceManager.Storage.Models.StorageSkuName)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuInformation" />. </summary>
            <param name="name"> The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuInformation.#ctor(Azure.ResourceManager.Storage.Models.StorageSkuName,System.Nullable{Azure.ResourceManager.Storage.Models.StorageSkuTier},System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageKind},System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.Models.StorageSkuCapability},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.Models.StorageSkuRestriction},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuInformation" />. </summary>
            <param name="name"> The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType. </param>
            <param name="tier"> The SKU tier. This is based on the SKU name. </param>
            <param name="resourceType"> The type of the resource, usually it is 'storageAccounts'. </param>
            <param name="kind"> Indicates the type of storage account. </param>
            <param name="locations"> The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). </param>
            <param name="capabilities"> The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc. </param>
            <param name="restrictions"> The restrictions because of which SKU cannot be used. This is empty if there are no restrictions. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuInformation.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuInformation" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuInformation.Name">
            <summary> The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuInformation.Tier">
            <summary> The SKU tier. This is based on the SKU name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuInformation.ResourceType">
            <summary> The type of the resource, usually it is 'storageAccounts'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuInformation.Kind">
            <summary> Indicates the type of storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuInformation.Locations">
            <summary> The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuInformation.Capabilities">
            <summary> The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuInformation.Restrictions">
            <summary> The restrictions because of which SKU cannot be used. This is empty if there are no restrictions. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageSkuListResult">
            <summary> The response from the List Storage SKUs operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.Models.StorageSkuInformation},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuListResult" />. </summary>
            <param name="value"> Get the list result of storage SKUs and their properties. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuListResult.Value">
            <summary> Get the list result of storage SKUs and their properties. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageSkuName">
            <summary> The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuName.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuName" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuName.StandardLrs">
            <summary> Standard_LRS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuName.StandardGrs">
            <summary> Standard_GRS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuName.StandardRagrs">
            <summary> Standard_RAGRS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuName.StandardZrs">
            <summary> Standard_ZRS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuName.PremiumLrs">
            <summary> Premium_LRS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuName.PremiumZrs">
            <summary> Premium_ZRS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuName.StandardGzrs">
            <summary> Standard_GZRS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuName.StandardRagzrs">
            <summary> Standard_RAGZRS. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuName.op_Equality(Azure.ResourceManager.Storage.Models.StorageSkuName,Azure.ResourceManager.Storage.Models.StorageSkuName)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuName" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuName.op_Inequality(Azure.ResourceManager.Storage.Models.StorageSkuName,Azure.ResourceManager.Storage.Models.StorageSkuName)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuName" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuName.op_Implicit(System.String)~Azure.ResourceManager.Storage.Models.StorageSkuName">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuName" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuName.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuName.Equals(Azure.ResourceManager.Storage.Models.StorageSkuName)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuName.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuName.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageSkuRestriction">
            <summary> The restriction because of which SKU cannot be used. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuRestriction.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuRestriction" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuRestriction.#ctor(System.String,System.Collections.Generic.IReadOnlyList{System.String},System.Nullable{Azure.ResourceManager.Storage.Models.StorageRestrictionReasonCode},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuRestriction" />. </summary>
            <param name="restrictionType"> The type of restrictions. As of now only possible value for this is location. </param>
            <param name="values"> The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted. </param>
            <param name="reasonCode"> The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuRestriction.RestrictionType">
            <summary> The type of restrictions. As of now only possible value for this is location. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuRestriction.Values">
            <summary> The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSkuRestriction.ReasonCode">
            <summary> The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageSkuTier">
            <summary> The SKU tier. This is based on the SKU name. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageSkuTier.Standard">
            <summary> Standard. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageSkuTier.Premium">
            <summary> Premium. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageSshPublicKey">
            <summary> The StorageSshPublicKey. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSshPublicKey.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSshPublicKey" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSshPublicKey.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSshPublicKey" />. </summary>
            <param name="description"> Optional. It is used to store the function/usage of the key. </param>
            <param name="key"> Ssh public key base64 encoded. The format should be: '&lt;keyType&gt; &lt;keyData&gt;', e.g. ssh-rsa AAAABBBB. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSshPublicKey.Description">
            <summary> Optional. It is used to store the function/usage of the key. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageSshPublicKey.Key">
            <summary> Ssh public key base64 encoded. The format should be: '&lt;keyType&gt; &lt;keyData&gt;', e.g. ssh-rsa AAAABBBB. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier">
            <summary> Object to set Table Access Policy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier" />. </summary>
            <param name="id"> unique-64-character-value of the stored access policy. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier.#ctor(System.String,Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier" />. </summary>
            <param name="id"> unique-64-character-value of the stored access policy. </param>
            <param name="accessPolicy"> Access policy. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier.Id">
            <summary> unique-64-character-value of the stored access policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier.AccessPolicy">
            <summary> Access policy. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageUsage">
            <summary> Describes Storage Resource Usage. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageUsage.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsage" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageUsage.#ctor(System.Nullable{Azure.ResourceManager.Storage.Models.StorageUsageUnit},System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.ResourceManager.Storage.Models.StorageUsageName,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsage" />. </summary>
            <param name="unit"> Gets the unit of measurement. </param>
            <param name="currentValue"> Gets the current count of the allocated resources in the subscription. </param>
            <param name="limit"> Gets the maximum count of the resources that can be allocated in the subscription. </param>
            <param name="name"> Gets the name of the type of usage. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageUsage.Unit">
            <summary> Gets the unit of measurement. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageUsage.CurrentValue">
            <summary> Gets the current count of the allocated resources in the subscription. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageUsage.Limit">
            <summary> Gets the maximum count of the resources that can be allocated in the subscription. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageUsage.Name">
            <summary> Gets the name of the type of usage. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageUsageName">
            <summary> The usage names that can be used; currently limited to StorageAccount. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageUsageName.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsageName" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageUsageName.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsageName" />. </summary>
            <param name="value"> Gets a string describing the resource name. </param>
            <param name="localizedValue"> Gets a localized string describing the resource name. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageUsageName.Value">
            <summary> Gets a string describing the resource name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.StorageUsageName.LocalizedValue">
            <summary> Gets a localized string describing the resource name. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.StorageUsageUnit">
            <summary> Gets the unit of measurement. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageUsageUnit.Count">
            <summary> Count. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageUsageUnit.Bytes">
            <summary> Bytes. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageUsageUnit.Seconds">
            <summary> Seconds. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageUsageUnit.Percent">
            <summary> Percent. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageUsageUnit.CountsPerSecond">
            <summary> CountsPerSecond. </summary>
        </member>
        <member name="F:Azure.ResourceManager.Storage.Models.StorageUsageUnit.BytesPerSecond">
            <summary> BytesPerSecond. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry">
            <summary> An update history of the ImmutabilityPolicy of a blob container. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry.#ctor(System.Nullable{Azure.ResourceManager.Storage.Models.ImmutabilityPolicyUpdateType},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Guid},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry" />. </summary>
            <param name="updateType"> The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend. </param>
            <param name="immutabilityPeriodSinceCreationInDays"> The immutability period for the blobs in the container since the policy creation, in days. </param>
            <param name="timestamp"> Returns the date and time the ImmutabilityPolicy was updated. </param>
            <param name="objectIdentifier"> Returns the Object ID of the user who updated the ImmutabilityPolicy. </param>
            <param name="tenantId"> Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy. </param>
            <param name="upn"> Returns the User Principal Name of the user who updated the ImmutabilityPolicy. </param>
            <param name="allowProtectedAppendWrites"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. </param>
            <param name="allowProtectedAppendWritesAll"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry.UpdateType">
            <summary> The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry.ImmutabilityPeriodSinceCreationInDays">
            <summary> The immutability period for the blobs in the container since the policy creation, in days. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry.Timestamp">
            <summary> Returns the date and time the ImmutabilityPolicy was updated. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry.ObjectIdentifier">
            <summary> Returns the Object ID of the user who updated the ImmutabilityPolicy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry.TenantId">
            <summary> Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry.Upn">
            <summary> Returns the User Principal Name of the user who updated the ImmutabilityPolicy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry.AllowProtectedAppendWrites">
            <summary> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry.AllowProtectedAppendWritesAll">
            <summary> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Models.UsageListResult">
            <summary> The response from the List Usages operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.UsageListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.UsageListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.UsageListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.Models.StorageUsage},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.Models.UsageListResult" />. </summary>
            <param name="value"> Gets or sets the list of Storage Resource Usages. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.Models.UsageListResult.Value">
            <summary> Gets or sets the list of Storage Resource Usages. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StorageAccountResource">
            <summary>
            A Class representing a StorageAccount along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetStorageAccountResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetStorageAccount method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.FailoverAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            A failover request can be triggered for a storage account in the event a primary endpoint becomes unavailable for any reason. The failover occurs from the storage account's primary cluster to the secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover and the account is converted to LRS. In the case of a Planned Failover, the primary and secondary clusters are swapped after failover and the account remains geo-replicated. Failover should continue to be used in the event of availability issues as Planned failover is only available while the primary and secondary endpoints are available. The primary use case of a Planned Failover is disaster recovery testing drills. This type of failover is invoked by setting FailoverType parameter to 'Planned'. Learn more about the failover options here- https://learn.microsoft.com/en-us/azure/storage/common/storage-disaster-recovery-guidance
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/failover</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_Failover</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.Failover(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            A failover request can be triggered for a storage account in the event a primary endpoint becomes unavailable for any reason. The failover occurs from the storage account's primary cluster to the secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover and the account is converted to LRS. In the case of a Planned Failover, the primary and secondary clusters are swapped after failover and the account remains geo-replicated. Failover should continue to be used in the event of availability issues as Planned failover is only available while the primary and secondary endpoints are available. The primary use case of a Planned Failover is disaster recovery testing drills. This type of failover is invoked by setting FailoverType parameter to 'Planned'. Learn more about the failover options here- https://learn.microsoft.com/en-us/azure/storage/common/storage-disaster-recovery-guidance
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/failover</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_Failover</description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.RestoreBlobRangesAsync(Azure.WaitUntil,Azure.ResourceManager.Storage.Models.BlobRestoreContent,System.Threading.CancellationToken)">
            <summary>
            Restore blobs in the specified blob ranges
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/restoreBlobRanges</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_RestoreBlobRanges</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The parameters to provide for restore blob ranges. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.RestoreBlobRanges(Azure.WaitUntil,Azure.ResourceManager.Storage.Models.BlobRestoreContent,System.Threading.CancellationToken)">
            <summary>
            Restore blobs in the specified blob ranges
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/restoreBlobRanges</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_RestoreBlobRanges</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> The parameters to provide for restore blob ranges. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.StorageAccountResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.StorageAccountData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetStorageAccountManagementPolicy">
            <summary> Gets an object representing a StorageAccountManagementPolicyResource along with the instance operations that can be performed on it in the StorageAccount. </summary>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetBlobInventoryPolicy">
            <summary> Gets an object representing a BlobInventoryPolicyResource along with the instance operations that can be performed on it in the StorageAccount. </summary>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetStoragePrivateEndpointConnections">
            <summary> Gets a collection of StoragePrivateEndpointConnectionResources in the StorageAccount. </summary>
            <returns> An object representing collection of StoragePrivateEndpointConnectionResources and their operations over a StoragePrivateEndpointConnectionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetStoragePrivateEndpointConnectionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified private endpoint connection associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetStoragePrivateEndpointConnection(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified private endpoint connection associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetObjectReplicationPolicies">
            <summary> Gets a collection of ObjectReplicationPolicyResources in the StorageAccount. </summary>
            <returns> An object representing collection of ObjectReplicationPolicyResources and their operations over a ObjectReplicationPolicyResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetObjectReplicationPolicyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the object replication policy of the storage account by policy ID.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="objectReplicationPolicyId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetObjectReplicationPolicy(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the object replication policy of the storage account by policy ID.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="objectReplicationPolicyId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetStorageAccountLocalUsers">
            <summary> Gets a collection of StorageAccountLocalUserResources in the StorageAccount. </summary>
            <returns> An object representing collection of StorageAccountLocalUserResources and their operations over a StorageAccountLocalUserResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetStorageAccountLocalUserAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the local user of the storage account by username.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="username" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetStorageAccountLocalUser(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the local user of the storage account by username.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="username" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetEncryptionScopes">
            <summary> Gets a collection of EncryptionScopeResources in the StorageAccount. </summary>
            <returns> An object representing collection of EncryptionScopeResources and their operations over a EncryptionScopeResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetEncryptionScopeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified encryption scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="encryptionScopeName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetEncryptionScope(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified encryption scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="encryptionScopeName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetBlobService">
            <summary> Gets an object representing a BlobServiceResource along with the instance operations that can be performed on it in the StorageAccount. </summary>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetFileService">
            <summary> Gets an object representing a FileServiceResource along with the instance operations that can be performed on it in the StorageAccount. </summary>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetQueueService">
            <summary> Gets an object representing a QueueServiceResource along with the instance operations that can be performed on it in the StorageAccount. </summary>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetTableService">
            <summary> Gets an object representing a TableServiceResource along with the instance operations that can be performed on it in the StorageAccount. </summary>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetAsync(System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="expand"> May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.Get(System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="expand"> May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a storage account in Microsoft Azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a storage account in Microsoft Azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.UpdateAsync(Azure.ResourceManager.Storage.Models.StorageAccountPatch,System.Threading.CancellationToken)">
            <summary>
            The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="patch"> The parameters to provide for the updated account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.Update(Azure.ResourceManager.Storage.Models.StorageAccountPatch,System.Threading.CancellationToken)">
            <summary>
            The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="patch"> The parameters to provide for the updated account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="patch" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetKeysAsync(System.Nullable{Azure.ResourceManager.Storage.Models.StorageListKeyExpand},System.Threading.CancellationToken)">
            <summary>
            Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_ListKeys</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="expand"> Specifies type of the key to be listed. Possible value is kerb. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKey" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetKeys(System.Nullable{Azure.ResourceManager.Storage.Models.StorageListKeyExpand},System.Threading.CancellationToken)">
            <summary>
            Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_ListKeys</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="expand"> Specifies type of the key to be listed. Possible value is kerb. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKey" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.RegenerateKeyAsync(Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent,System.Threading.CancellationToken)">
            <summary>
            Regenerates one of the access keys or Kerberos keys for the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_RegenerateKey</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> Specifies name of the key which should be regenerated -- key1, key2, kerb1, kerb2. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKey" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.RegenerateKey(Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent,System.Threading.CancellationToken)">
            <summary>
            Regenerates one of the access keys or Kerberos keys for the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_RegenerateKey</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> Specifies name of the key which should be regenerated -- key1, key2, kerb1, kerb2. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageAccountKey" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetAccountSasAsync(Azure.ResourceManager.Storage.Models.AccountSasContent,System.Threading.CancellationToken)">
            <summary>
            List SAS credentials of a storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListAccountSas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_ListAccountSAS</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> The parameters to provide to list SAS credentials for the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetAccountSas(Azure.ResourceManager.Storage.Models.AccountSasContent,System.Threading.CancellationToken)">
            <summary>
            List SAS credentials of a storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListAccountSas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_ListAccountSAS</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> The parameters to provide to list SAS credentials for the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetServiceSasAsync(Azure.ResourceManager.Storage.Models.ServiceSasContent,System.Threading.CancellationToken)">
            <summary>
            List service SAS credentials of a specific resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListServiceSas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_ListServiceSAS</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> The parameters to provide to list service SAS credentials. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetServiceSas(Azure.ResourceManager.Storage.Models.ServiceSasContent,System.Threading.CancellationToken)">
            <summary>
            List service SAS credentials of a specific resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListServiceSas</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_ListServiceSAS</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> The parameters to provide to list service SAS credentials. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.FailoverAsync(Azure.WaitUntil,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountFailoverType},System.Threading.CancellationToken)">
            <summary>
            A failover request can be triggered for a storage account in the event a primary endpoint becomes unavailable for any reason. The failover occurs from the storage account's primary cluster to the secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover and the account is converted to LRS. In the case of a Planned Failover, the primary and secondary clusters are swapped after failover and the account remains geo-replicated. Failover should continue to be used in the event of availability issues as Planned failover is only available while the primary and secondary endpoints are available. The primary use case of a Planned Failover is disaster recovery testing drills. This type of failover is invoked by setting FailoverType parameter to 'Planned'. Learn more about the failover options here- https://learn.microsoft.com/en-us/azure/storage/common/storage-disaster-recovery-guidance
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/failover</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_Failover</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="failoverType"> The parameter is set to 'Planned' to indicate whether a Planned failover is requested. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.Failover(Azure.WaitUntil,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountFailoverType},System.Threading.CancellationToken)">
            <summary>
            A failover request can be triggered for a storage account in the event a primary endpoint becomes unavailable for any reason. The failover occurs from the storage account's primary cluster to the secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover and the account is converted to LRS. In the case of a Planned Failover, the primary and secondary clusters are swapped after failover and the account remains geo-replicated. Failover should continue to be used in the event of availability issues as Planned failover is only available while the primary and secondary endpoints are available. The primary use case of a Planned Failover is disaster recovery testing drills. This type of failover is invoked by setting FailoverType parameter to 'Planned'. Learn more about the failover options here- https://learn.microsoft.com/en-us/azure/storage/common/storage-disaster-recovery-guidance
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/failover</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_Failover</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="failoverType"> The parameter is set to 'Planned' to indicate whether a Planned failover is requested. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.EnableHierarchicalNamespaceAsync(Azure.WaitUntil,System.String,System.Threading.CancellationToken)">
            <summary>
            Live Migration of storage account to enable Hns
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/hnsonmigration</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_HierarchicalNamespaceMigration</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="requestType"> Required. Hierarchical namespace migration type can either be a hierarchical namespace validation request 'HnsOnValidationRequest' or a hydration request 'HnsOnHydrationRequest'. The validation request will validate the migration whereas the hydration request will migrate the account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="requestType" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.EnableHierarchicalNamespace(Azure.WaitUntil,System.String,System.Threading.CancellationToken)">
            <summary>
            Live Migration of storage account to enable Hns
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/hnsonmigration</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_HierarchicalNamespaceMigration</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="requestType"> Required. Hierarchical namespace migration type can either be a hierarchical namespace validation request 'HnsOnValidationRequest' or a hydration request 'HnsOnHydrationRequest'. The validation request will validate the migration whereas the hydration request will migrate the account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="requestType" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.AbortHierarchicalNamespaceMigrationAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Abort live Migration of storage account to enable Hns
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/aborthnsonmigration</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_AbortHierarchicalNamespaceMigration</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.AbortHierarchicalNamespaceMigration(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Abort live Migration of storage account to enable Hns
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/aborthnsonmigration</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_AbortHierarchicalNamespaceMigration</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.RevokeUserDelegationKeysAsync(System.Threading.CancellationToken)">
            <summary>
            Revoke user delegation keys.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/revokeUserDelegationKeys</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_RevokeUserDelegationKeys</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.RevokeUserDelegationKeys(System.Threading.CancellationToken)">
            <summary>
            Revoke user delegation keys.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/revokeUserDelegationKeys</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_RevokeUserDelegationKeys</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetPrivateLinkResourcesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the private link resources that need to be created for a storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateLinkResources</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateLinkResources_ListByStorageAccount</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.GetPrivateLinkResources(System.Threading.CancellationToken)">
            <summary>
            Gets the private link resources that need to be created for a storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateLinkResources</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateLinkResources_ListByStorageAccount</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.AddTag(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a tag to the current resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="value"> The value for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> or <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Replace the tags on the resource with the given set.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tags"> The set of tags to use as replacement. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tags" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.RemoveTag(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a tag by key from the resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="key"> The key for the tag. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.BlobContainerCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" />.
            To get a <see cref="T:Azure.ResourceManager.Storage.BlobContainerCollection" /> instance call the GetBlobContainers method from an instance of <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.BlobContainerCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.BlobContainerCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.BlobContainerData,System.Threading.CancellationToken)">
            <summary>
            Creates a new container under the specified account as described by request body. The container resource includes metadata and properties for that container. It does not include a list of the blobs contained by the container.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Properties of the blob container to create. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="containerName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.BlobContainerData,System.Threading.CancellationToken)">
            <summary>
            Creates a new container under the specified account as described by request body. The container resource includes metadata and properties for that container. It does not include a list of the blobs contained by the container.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Properties of the blob container to create. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="containerName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified container.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="containerName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified container.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="containerName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerCollection.GetAllAsync(System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.BlobContainerState},System.Threading.CancellationToken)">
            <summary>
            Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="maxpagesize"> Optional. Specified maximum number of containers that can be included in the list. </param>
            <param name="filter"> Optional. When specified, only container names starting with the filter will be listed. </param>
            <param name="include"> Optional, used to include the properties for soft deleted blob containers. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerCollection.GetAll(System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.BlobContainerState},System.Threading.CancellationToken)">
            <summary>
            Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="maxpagesize"> Optional. Specified maximum number of containers that can be included in the list. </param>
            <param name="filter"> Optional. When specified, only container names starting with the filter will be listed. </param>
            <param name="include"> Optional, used to include the properties for soft deleted blob containers. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="containerName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="containerName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="containerName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="containerName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.BlobContainerData">
            <summary>
            A class representing the BlobContainer data model.
            Properties of the blob container, including Id, resource name, resource type, Etag.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.BlobContainerData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StoragePublicAccessType},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseStatus},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseState},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseDurationType},System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy,Azure.ResourceManager.Storage.Models.LegalHoldProperties,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.BlobContainerData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="version"> The version of the deleted blob container. </param>
            <param name="isDeleted"> Indicates whether the blob container was deleted. </param>
            <param name="deletedOn"> Blob container deletion time. </param>
            <param name="remainingRetentionDays"> Remaining retention days for soft deleted blob container. </param>
            <param name="defaultEncryptionScope"> Default the container to use specified encryption scope for all writes. </param>
            <param name="preventEncryptionScopeOverride"> Block override of encryption scope from the container default. </param>
            <param name="publicAccess"> Specifies whether data in the container may be accessed publicly and the level of access. </param>
            <param name="lastModifiedOn"> Returns the date and time the container was last modified. </param>
            <param name="leaseStatus"> The lease status of the container. </param>
            <param name="leaseState"> Lease state of the container. </param>
            <param name="leaseDuration"> Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased. </param>
            <param name="metadata"> A name-value pair to associate with the container as metadata. </param>
            <param name="immutabilityPolicy"> The ImmutabilityPolicy property of the container. </param>
            <param name="legalHold"> The LegalHold property of the container. </param>
            <param name="hasLegalHold"> The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account. </param>
            <param name="hasImmutabilityPolicy"> The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container. </param>
            <param name="immutableStorageWithVersioning"> The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process. </param>
            <param name="enableNfsV3RootSquash"> Enable NFSv3 root squash on blob container. </param>
            <param name="enableNfsV3AllSquash"> Enable NFSv3 all squash on blob container. </param>
            <param name="etag"> Resource Etag. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.Version">
            <summary> The version of the deleted blob container. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.IsDeleted">
            <summary> Indicates whether the blob container was deleted. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.DeletedOn">
            <summary> Blob container deletion time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.RemainingRetentionDays">
            <summary> Remaining retention days for soft deleted blob container. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.DefaultEncryptionScope">
            <summary> Default the container to use specified encryption scope for all writes. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.PreventEncryptionScopeOverride">
            <summary> Block override of encryption scope from the container default. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.PublicAccess">
            <summary> Specifies whether data in the container may be accessed publicly and the level of access. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.LastModifiedOn">
            <summary> Returns the date and time the container was last modified. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.LeaseStatus">
            <summary> The lease status of the container. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.LeaseState">
            <summary> Lease state of the container. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.LeaseDuration">
            <summary> Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.Metadata">
            <summary> A name-value pair to associate with the container as metadata. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.ImmutabilityPolicy">
            <summary> The ImmutabilityPolicy property of the container. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.LegalHold">
            <summary> The LegalHold property of the container. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.HasLegalHold">
            <summary> The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.HasImmutabilityPolicy">
            <summary> The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.ImmutableStorageWithVersioning">
            <summary> The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.EnableNfsV3RootSquash">
            <summary> Enable NFSv3 root squash on blob container. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.EnableNfsV3AllSquash">
            <summary> Enable NFSv3 all squash on blob container. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerData.ETag">
            <summary> Resource Etag. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.BlobContainerResource">
            <summary>
            A Class representing a BlobContainer along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetBlobContainerResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /> using the GetBlobContainer method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
            <param name="containerName"> The containerName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.BlobContainerResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.BlobContainerData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobContainerResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.GetImmutabilityPolicy">
            <summary> Gets an object representing a ImmutabilityPolicyResource along with the instance operations that can be performed on it in the BlobContainer. </summary>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified container.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified container.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes specified container under its account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes specified container under its account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.UpdateAsync(Azure.ResourceManager.Storage.BlobContainerData,System.Threading.CancellationToken)">
            <summary>
            Updates container properties as specified in request body. Properties not mentioned in the request will be unchanged. Update fails if the specified container doesn't already exist.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> Properties to update for the blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.Update(Azure.ResourceManager.Storage.BlobContainerData,System.Threading.CancellationToken)">
            <summary>
            Updates container properties as specified in request body. Properties not mentioned in the request will be unchanged. Update fails if the specified container doesn't already exist.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> Properties to update for the blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.SetLegalHoldAsync(Azure.ResourceManager.Storage.Models.LegalHold,System.Threading.CancellationToken)">
            <summary>
            Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/setLegalHold</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_SetLegalHold</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="legalHold"> The LegalHold property that will be set to a blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="legalHold" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.SetLegalHold(Azure.ResourceManager.Storage.Models.LegalHold,System.Threading.CancellationToken)">
            <summary>
            Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/setLegalHold</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_SetLegalHold</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="legalHold"> The LegalHold property that will be set to a blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="legalHold" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.ClearLegalHoldAsync(Azure.ResourceManager.Storage.Models.LegalHold,System.Threading.CancellationToken)">
            <summary>
            Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/clearLegalHold</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_ClearLegalHold</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="legalHold"> The LegalHold property that will be clear from a blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="legalHold" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.ClearLegalHold(Azure.ResourceManager.Storage.Models.LegalHold,System.Threading.CancellationToken)">
            <summary>
            Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/clearLegalHold</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_ClearLegalHold</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="legalHold"> The LegalHold property that will be clear from a blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="legalHold" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.LeaseAsync(Azure.ResourceManager.Storage.Models.LeaseContainerContent,System.Threading.CancellationToken)">
            <summary>
            The Lease Container operation establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/lease</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Lease</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> Lease Container request body. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.Lease(Azure.ResourceManager.Storage.Models.LeaseContainerContent,System.Threading.CancellationToken)">
            <summary>
            The Lease Container operation establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/lease</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Lease</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> Lease Container request body. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.EnableVersionLevelImmutabilityAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            This operation migrates a blob container from container level WORM to object level immutability enabled container. Prerequisites require a container level immutability policy either in locked or unlocked state, Account level versioning must be enabled and there should be no Legal hold on the container.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/migrate</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_ObjectLevelWorm</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.EnableVersionLevelImmutability(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            This operation migrates a blob container from container level WORM to object level immutability enabled container. Prerequisites require a container level immutability policy either in locked or unlocked state, Account level versioning must be enabled and there should be no Legal hold on the container.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/migrate</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_ObjectLevelWorm</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.Storage.BlobInventoryPolicyData">
            <summary>
            A class representing the BlobInventoryPolicy data model.
            The storage account blob inventory policy.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="lastModifiedOn"> Returns the last modified date and time of the blob inventory policy. </param>
            <param name="policySchema"> The storage account blob inventory policy object. It is composed of policy rules. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobInventoryPolicyData.LastModifiedOn">
            <summary> Returns the last modified date and time of the blob inventory policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobInventoryPolicyData.PolicySchema">
            <summary> The storage account blob inventory policy object. It is composed of policy rules. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource">
            <summary>
            A Class representing a BlobInventoryPolicy along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetBlobInventoryPolicyResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> using the GetBlobInventoryPolicy method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
            <param name="blobInventoryPolicyName"> The blobInventoryPolicyName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.BlobInventoryPolicyData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the blob inventory policy associated with the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobInventoryPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets the blob inventory policy associated with the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobInventoryPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the blob inventory policy associated with the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobInventoryPolicies_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the blob inventory policy associated with the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobInventoryPolicies_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.CreateOrUpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Storage.BlobInventoryPolicyData,System.Threading.CancellationToken)">
            <summary>
            Sets the blob inventory policy to the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobInventoryPolicies_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The blob inventory policy set to a storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.CreateOrUpdate(Azure.WaitUntil,Azure.ResourceManager.Storage.BlobInventoryPolicyData,System.Threading.CancellationToken)">
            <summary>
            Sets the blob inventory policy to the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobInventoryPolicies_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The blob inventory policy set to a storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.BlobServiceData">
            <summary>
            A class representing the BlobService data model.
            The properties of a storage account’s Blob service.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.BlobServiceData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Storage.Models.StorageSku,Azure.ResourceManager.Storage.Models.StorageCorsRules,System.String,Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed,Azure.ResourceManager.Storage.Models.RestorePolicy,Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy,Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.BlobServiceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="sku"> Sku name and tier. </param>
            <param name="cors"> Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service. </param>
            <param name="defaultServiceVersion"> DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions. </param>
            <param name="deleteRetentionPolicy"> The blob service properties for blob soft delete. </param>
            <param name="isVersioningEnabled"> Versioning is enabled if set to true. </param>
            <param name="isAutomaticSnapshotPolicyEnabled"> Deprecated in favor of isVersioningEnabled property. </param>
            <param name="changeFeed"> The blob service properties for change feed events. </param>
            <param name="restorePolicy"> The blob service properties for blob restore policy. </param>
            <param name="containerDeleteRetentionPolicy"> The blob service properties for container soft delete. </param>
            <param name="lastAccessTimeTrackingPolicy"> The blob service property to configure last access time based tracking policy. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobServiceData.Sku">
            <summary> Sku name and tier. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobServiceData.Cors">
            <summary> Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobServiceData.CorsRules">
            <summary> The List of CORS rules. You can include up to five CorsRule elements in the request. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobServiceData.DefaultServiceVersion">
            <summary> DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobServiceData.DeleteRetentionPolicy">
            <summary> The blob service properties for blob soft delete. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobServiceData.IsVersioningEnabled">
            <summary> Versioning is enabled if set to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobServiceData.IsAutomaticSnapshotPolicyEnabled">
            <summary> Deprecated in favor of isVersioningEnabled property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobServiceData.ChangeFeed">
            <summary> The blob service properties for change feed events. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobServiceData.RestorePolicy">
            <summary> The blob service properties for blob restore policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobServiceData.ContainerDeleteRetentionPolicy">
            <summary> The blob service properties for container soft delete. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobServiceData.LastAccessTimeTrackingPolicy">
            <summary> The blob service property to configure last access time based tracking policy. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.BlobServiceResource">
            <summary>
            A Class representing a BlobService along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetBlobServiceResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> using the GetBlobService method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.BlobServiceResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.BlobServiceData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobServiceResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.BlobServiceResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.GetBlobContainers">
            <summary> Gets a collection of BlobContainerResources in the BlobService. </summary>
            <returns> An object representing collection of BlobContainerResources and their operations over a BlobContainerResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.GetBlobContainerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified container.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.GetBlobContainer(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified container.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /></description>
            </item>
            </list>
            </summary>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobServices_GetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobServices_GetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.CreateOrUpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Storage.BlobServiceData,System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobServices_SetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.CreateOrUpdate(Azure.WaitUntil,Azure.ResourceManager.Storage.BlobServiceData,System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobServices_SetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.DeletedAccountCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" />.
            To get a <see cref="T:Azure.ResourceManager.Storage.DeletedAccountCollection" /> instance call the GetDeletedAccounts method from an instance of <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.DeletedAccountCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.DeletedAccountCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountCollection.GetAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)">
            <summary>
            Get properties of specified deleted account resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="location"> The location of the deleted storage account. </param>
            <param name="deletedAccountName"> Name of the deleted storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deletedAccountName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deletedAccountName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountCollection.Get(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)">
            <summary>
            Get properties of specified deleted account resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="location"> The location of the deleted storage account. </param>
            <param name="deletedAccountName"> Name of the deleted storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deletedAccountName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deletedAccountName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountCollection.ExistsAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="location"> The location of the deleted storage account. </param>
            <param name="deletedAccountName"> Name of the deleted storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deletedAccountName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deletedAccountName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountCollection.Exists(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="location"> The location of the deleted storage account. </param>
            <param name="deletedAccountName"> Name of the deleted storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deletedAccountName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deletedAccountName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountCollection.GetIfExistsAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="location"> The location of the deleted storage account. </param>
            <param name="deletedAccountName"> Name of the deleted storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deletedAccountName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deletedAccountName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountCollection.GetIfExists(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="location"> The location of the deleted storage account. </param>
            <param name="deletedAccountName"> Name of the deleted storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="deletedAccountName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deletedAccountName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.DeletedAccountData">
            <summary>
            A class representing the DeletedAccount data model.
            Deleted storage account
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.DeletedAccountData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,System.Nullable{Azure.Core.AzureLocation},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.DeletedAccountData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="storageAccountResourceId"> Full resource id of the original storage account. </param>
            <param name="location"> Location of the deleted account. </param>
            <param name="restoreReference"> Can be used to attempt recovering this deleted account via PutStorageAccount API. </param>
            <param name="createdOn"> Creation time of the deleted account. </param>
            <param name="deletedOn"> Deletion time of the deleted account. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.DeletedAccountData.StorageAccountResourceId">
            <summary> Full resource id of the original storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.DeletedAccountData.Location">
            <summary> Location of the deleted account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.DeletedAccountData.RestoreReference">
            <summary> Can be used to attempt recovering this deleted account via PutStorageAccount API. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.DeletedAccountData.CreatedOn">
            <summary> Creation time of the deleted account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.DeletedAccountData.DeletedOn">
            <summary> Deletion time of the deleted account. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.DeletedAccountResource">
            <summary>
            A Class representing a DeletedAccount along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetDeletedAccountResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> using the GetDeletedAccount method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="location"> The location. </param>
            <param name="deletedAccountName"> The deletedAccountName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.DeletedAccountResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.DeletedAccountData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.DeletedAccountResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.DeletedAccountResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get properties of specified deleted account resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get properties of specified deleted account resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.Storage.EncryptionScopeData">
            <summary>
            A class representing the EncryptionScope data model.
            The Encryption Scope resource.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.Storage.Models.EncryptionScopeSource},System.Nullable{Azure.ResourceManager.Storage.Models.EncryptionScopeState},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties,System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="source"> The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault. </param>
            <param name="state"> The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled. </param>
            <param name="createdOn"> Gets the creation date and time of the encryption scope in UTC. </param>
            <param name="lastModifiedOn"> Gets the last modification date and time of the encryption scope in UTC. </param>
            <param name="keyVaultProperties"> The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'. </param>
            <param name="requireInfrastructureEncryption"> A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.EncryptionScopeData.Source">
            <summary> The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.EncryptionScopeData.State">
            <summary> The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.EncryptionScopeData.CreatedOn">
            <summary> Gets the creation date and time of the encryption scope in UTC. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.EncryptionScopeData.LastModifiedOn">
            <summary> Gets the last modification date and time of the encryption scope in UTC. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.EncryptionScopeData.KeyVaultProperties">
            <summary> The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.EncryptionScopeData.RequireInfrastructureEncryption">
            <summary> A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.EncryptionScopeResource">
            <summary>
            A Class representing an EncryptionScope along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetEncryptionScopeResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> using the GetEncryptionScope method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
            <param name="encryptionScopeName"> The encryptionScopeName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.EncryptionScopeResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.EncryptionScopeData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.EncryptionScopeResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.EncryptionScopeResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified encryption scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeResource.Get(System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified encryption scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeResource.UpdateAsync(Azure.ResourceManager.Storage.EncryptionScopeData,System.Threading.CancellationToken)">
            <summary>
            Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_Patch</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> Encryption scope properties to be used for the update. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeResource.Update(Azure.ResourceManager.Storage.EncryptionScopeData,System.Threading.CancellationToken)">
            <summary>
            Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EncryptionScopes_Patch</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> Encryption scope properties to be used for the update. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient">
            <summary> A class to add extension methods to ArmClient. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStorageAccountResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StorageAccountResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetDeletedAccountResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.DeletedAccountResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStorageAccountManagementPolicyResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.ManagementPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetBlobInventoryPolicyResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStoragePrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetObjectReplicationPolicyResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStorageAccountLocalUserResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetEncryptionScopeResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.EncryptionScopeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetBlobServiceResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.BlobServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetBlobContainerResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.BlobContainerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetImmutabilityPolicyResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetFileServiceResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.FileServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetFileShareResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.FileShareResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetQueueServiceResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.QueueServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStorageQueueResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StorageQueueResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetTableServiceResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.TableServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetTableResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.TableResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.TableResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.TableResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.TableResource" /> object. </returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Mocking.MockableStorageResourceGroupResource">
            <summary> A class to add extension methods to ResourceGroupResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageResourceGroupResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.Mocking.MockableStorageResourceGroupResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageResourceGroupResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.Mocking.MockableStorageResourceGroupResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageResourceGroupResource.GetStorageAccounts">
            <summary> Gets a collection of StorageAccountResources in the ResourceGroupResource. </summary>
            <returns> An object representing collection of StorageAccountResources and their operations over a StorageAccountResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageResourceGroupResource.GetStorageAccountAsync(System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="expand"> May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageResourceGroupResource.GetStorageAccount(System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="expand"> May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource">
            <summary> A class to add extension methods to SubscriptionResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetDeletedAccounts">
            <summary> Gets a collection of DeletedAccountResources in the SubscriptionResource. </summary>
            <returns> An object representing collection of DeletedAccountResources and their operations over a DeletedAccountResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetDeletedAccountAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)">
            <summary>
            Get properties of specified deleted account resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="location"> The location of the deleted storage account. </param>
            <param name="deletedAccountName"> Name of the deleted storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deletedAccountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deletedAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetDeletedAccount(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)">
            <summary>
            Get properties of specified deleted account resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="location"> The location of the deleted storage account. </param>
            <param name="deletedAccountName"> Name of the deleted storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deletedAccountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deletedAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetSkusAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the available SKUs supported by Microsoft.Storage for given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Skus_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuInformation" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetSkus(System.Threading.CancellationToken)">
            <summary>
            Lists the available SKUs supported by Microsoft.Storage for given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Skus_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuInformation" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.CheckStorageAccountNameAvailabilityAsync(Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary>
            Checks that the storage account name is valid and is not already in use.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_CheckNameAvailability</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.CheckStorageAccountNameAvailability(Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary>
            Checks that the storage account name is valid and is not already in use.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_CheckNameAvailability</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetStorageAccountsAsync(System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetStorageAccounts(System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetDeletedAccountsAsync(System.Threading.CancellationToken)">
            <summary>
            Lists deleted accounts under the subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/deletedAccounts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetDeletedAccounts(System.Threading.CancellationToken)">
            <summary>
            Lists deleted accounts under the subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/deletedAccounts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetUsagesByLocationAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary>
            Gets the current usage count and the limit for the resources of the location under the subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Usages_ListByLocation</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            </list>
            </summary>
            <param name="location"> The location of the Azure Storage resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsage" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetUsagesByLocation(Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary>
            Gets the current usage count and the limit for the resources of the location under the subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Usages_ListByLocation</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            </list>
            </summary>
            <param name="location"> The location of the Azure Storage resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsage" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StorageExtensions">
            <summary> A class to add extension methods to Azure.ResourceManager.Storage. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetStorageAccountResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StorageAccountResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStorageAccountResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetDeletedAccountResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.DeletedAccountResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetDeletedAccountResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetStorageAccountManagementPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.ManagementPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStorageAccountManagementPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetBlobInventoryPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetBlobInventoryPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.BlobInventoryPolicyResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetStoragePrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStoragePrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetObjectReplicationPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetObjectReplicationPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetStorageAccountLocalUserResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStorageAccountLocalUserResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetEncryptionScopeResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.EncryptionScopeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetEncryptionScopeResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.EncryptionScopeResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetBlobServiceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.BlobServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetBlobServiceResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.BlobServiceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetBlobContainerResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.BlobContainerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetBlobContainerResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetImmutabilityPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetImmutabilityPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetFileServiceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.FileServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetFileServiceResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetFileShareResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.FileShareResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetFileShareResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetQueueServiceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.QueueServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetQueueServiceResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetStorageQueueResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.StorageQueueResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetStorageQueueResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetTableServiceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.TableServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetTableServiceResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetTableResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Storage.TableResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Storage.TableResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Storage.TableResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageArmClient.GetTableResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Storage.TableResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetStorageAccounts(Azure.ResourceManager.Resources.ResourceGroupResource)">
            <summary>
            Gets a collection of StorageAccountResources in the ResourceGroupResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageResourceGroupResource.GetStorageAccounts" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> is null. </exception>
            <returns> An object representing collection of StorageAccountResources and their operations over a StorageAccountResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetStorageAccountAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageResourceGroupResource.GetStorageAccountAsync(System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="expand"> May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetStorageAccount(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageResourceGroupResource.GetStorageAccount(System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="expand"> May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetDeletedAccounts(Azure.ResourceManager.Resources.SubscriptionResource)">
            <summary>
            Gets a collection of DeletedAccountResources in the SubscriptionResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetDeletedAccounts" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> An object representing collection of DeletedAccountResources and their operations over a DeletedAccountResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetDeletedAccountAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)">
            <summary>
            Get properties of specified deleted account resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetDeletedAccountAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="location"> The location of the deleted storage account. </param>
            <param name="deletedAccountName"> Name of the deleted storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> or <paramref name="deletedAccountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deletedAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetDeletedAccount(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)">
            <summary>
            Get properties of specified deleted account resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetDeletedAccount(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="location"> The location of the deleted storage account. </param>
            <param name="deletedAccountName"> Name of the deleted storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> or <paramref name="deletedAccountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="deletedAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetSkusAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Lists the available SKUs supported by Microsoft.Storage for given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Skus_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetSkus(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuInformation" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetSkus(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Lists the available SKUs supported by Microsoft.Storage for given subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Skus_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetSkus(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageSkuInformation" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.CheckStorageAccountNameAvailabilityAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary>
            Checks that the storage account name is valid and is not already in use.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_CheckNameAvailability</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.CheckStorageAccountNameAvailability(Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="content"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.CheckStorageAccountNameAvailability(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary>
            Checks that the storage account name is valid and is not already in use.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_CheckNameAvailability</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.CheckStorageAccountNameAvailability(Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="content"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetStorageAccountsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetStorageAccounts(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetStorageAccounts(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetStorageAccounts(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetDeletedAccountsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Lists deleted accounts under the subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/deletedAccounts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetDeletedAccounts(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetDeletedAccounts(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Lists deleted accounts under the subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/deletedAccounts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DeletedAccounts_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetDeletedAccounts(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.DeletedAccountResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetUsagesByLocationAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary>
            Gets the current usage count and the limit for the resources of the location under the subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Usages_ListByLocation</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetUsagesByLocation(Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="location"> The location of the Azure Storage resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsage" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageExtensions.GetUsagesByLocation(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary>
            Gets the current usage count and the limit for the resources of the location under the subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Usages_ListByLocation</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Storage.Mocking.MockableStorageSubscriptionResource.GetUsagesByLocation(Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="location"> The location of the Azure Storage resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.Models.StorageUsage" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="T:Azure.ResourceManager.Storage.FileServiceData">
            <summary>
            A class representing the FileService data model.
            The properties of File services in storage account.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.FileServiceData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Storage.Models.StorageSku,Azure.ResourceManager.Storage.Models.StorageCorsRules,Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy,Azure.ResourceManager.Storage.Models.ProtocolSettings,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.FileServiceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="sku"> Sku name and tier. </param>
            <param name="cors"> Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service. </param>
            <param name="shareDeleteRetentionPolicy"> The file service properties for share soft delete. </param>
            <param name="protocolSettings"> Protocol settings for file service. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileServiceData.Sku">
            <summary> Sku name and tier. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileServiceData.Cors">
            <summary> Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileServiceData.CorsRules">
            <summary> The List of CORS rules. You can include up to five CorsRule elements in the request. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileServiceData.ShareDeleteRetentionPolicy">
            <summary> The file service properties for share soft delete. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileServiceData.ProtocolSettings">
            <summary> Protocol settings for file service. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileServiceData.ProtocolSmbSetting">
            <summary> Setting for SMB protocol. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.FileServiceResource">
            <summary>
            A Class representing a FileService along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetFileServiceResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> using the GetFileService method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.FileServiceResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.FileServiceData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileServiceResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileServiceResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.GetFileShares">
            <summary> Gets a collection of FileShareResources in the FileService. </summary>
            <returns> An object representing collection of FileShareResources and their operations over a FileShareResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.GetFileShareAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified share.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','. </param>
            <param name="xMsSnapshot"> Optional, used to retrieve properties of a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="shareName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.GetFileShare(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified share.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','. </param>
            <param name="xMsSnapshot"> Optional, used to retrieve properties of a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="shareName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/{FileServicesName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileServices_GetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/{FileServicesName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileServices_GetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.CreateOrUpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Storage.FileServiceData,System.Threading.CancellationToken)">
            <summary>
            Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/{FileServicesName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileServices_SetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.CreateOrUpdate(Azure.WaitUntil,Azure.ResourceManager.Storage.FileServiceData,System.Threading.CancellationToken)">
            <summary>
            Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/{FileServicesName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileServices_SetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.FileShareCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" />.
            To get a <see cref="T:Azure.ResourceManager.Storage.FileShareCollection" /> instance call the GetFileShares method from an instance of <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.FileShareCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.FileShareCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.FileShareData,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new share under the specified account as described by request body. The share resource includes metadata and properties for that share. It does not include a list of the files contained by the share.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Properties of the file share to create. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: snapshots. Should be passed as a string with delimiter ','. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="shareName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.FileShareData,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new share under the specified account as described by request body. The share resource includes metadata and properties for that share. It does not include a list of the files contained by the share.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Properties of the file share to create. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: snapshots. Should be passed as a string with delimiter ','. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="shareName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareCollection.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified share.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','. </param>
            <param name="xMsSnapshot"> Optional, used to retrieve properties of a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="shareName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareCollection.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified share.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','. </param>
            <param name="xMsSnapshot"> Optional, used to retrieve properties of a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="shareName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareCollection.GetAllAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all shares.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="maxpagesize"> Optional. Specified maximum number of shares that can be included in the list. </param>
            <param name="filter"> Optional. When specified, only share names starting with the filter will be listed. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: deleted, snapshots. Should be passed as a string with delimiter ','. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareCollection.GetAll(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all shares.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="maxpagesize"> Optional. Specified maximum number of shares that can be included in the list. </param>
            <param name="filter"> Optional. When specified, only share names starting with the filter will be listed. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: deleted, snapshots. Should be passed as a string with delimiter ','. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareCollection.ExistsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','. </param>
            <param name="xMsSnapshot"> Optional, used to retrieve properties of a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="shareName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareCollection.Exists(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','. </param>
            <param name="xMsSnapshot"> Optional, used to retrieve properties of a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="shareName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareCollection.GetIfExistsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','. </param>
            <param name="xMsSnapshot"> Optional, used to retrieve properties of a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="shareName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareCollection.GetIfExists(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','. </param>
            <param name="xMsSnapshot"> Optional, used to retrieve properties of a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="shareName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.FileShareData">
            <summary>
            A class representing the FileShare data model.
            Properties of the file share, including Id, resource name, resource type, Etag.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.FileShareData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.DateTimeOffset},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Storage.Models.FileShareEnabledProtocol},System.Nullable{Azure.ResourceManager.Storage.Models.RootSquashType},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Storage.Models.FileShareAccessTier},System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int64},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseStatus},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseState},System.Nullable{Azure.ResourceManager.Storage.Models.StorageLeaseDurationType},System.Collections.Generic.IList{Azure.ResourceManager.Storage.Models.StorageSignedIdentifier},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.FileShareData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="lastModifiedOn"> Returns the date and time the share was last modified. </param>
            <param name="metadata"> A name-value pair to associate with the share as metadata. </param>
            <param name="shareQuota"> The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400. </param>
            <param name="enabledProtocol"> The authentication protocol that is used for the file share. Can only be specified when creating a share. </param>
            <param name="rootSquash"> The property is for NFS share only. The default is NoRootSquash. </param>
            <param name="version"> The version of the share. </param>
            <param name="isDeleted"> Indicates whether the share was deleted. </param>
            <param name="deletedOn"> The deleted time if the share was deleted. </param>
            <param name="remainingRetentionDays"> Remaining retention days for share that was soft deleted. </param>
            <param name="accessTier"> Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium. </param>
            <param name="accessTierChangeOn"> Indicates the last modification time for share access tier. </param>
            <param name="accessTierStatus"> Indicates if there is a pending transition for access tier. </param>
            <param name="shareUsageBytes"> The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files. </param>
            <param name="leaseStatus"> The lease status of the share. </param>
            <param name="leaseState"> Lease state of the share. </param>
            <param name="leaseDuration"> Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased. </param>
            <param name="signedIdentifiers"> List of stored access policies specified on the share. </param>
            <param name="snapshotOn"> Creation time of share snapshot returned in the response of list shares with expand param "snapshots". </param>
            <param name="etag"> Resource Etag. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.LastModifiedOn">
            <summary> Returns the date and time the share was last modified. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.Metadata">
            <summary> A name-value pair to associate with the share as metadata. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.ShareQuota">
            <summary> The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.EnabledProtocol">
            <summary> The authentication protocol that is used for the file share. Can only be specified when creating a share. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.RootSquash">
            <summary> The property is for NFS share only. The default is NoRootSquash. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.Version">
            <summary> The version of the share. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.IsDeleted">
            <summary> Indicates whether the share was deleted. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.DeletedOn">
            <summary> The deleted time if the share was deleted. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.RemainingRetentionDays">
            <summary> Remaining retention days for share that was soft deleted. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.AccessTier">
            <summary> Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.AccessTierChangeOn">
            <summary> Indicates the last modification time for share access tier. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.AccessTierStatus">
            <summary> Indicates if there is a pending transition for access tier. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.ShareUsageBytes">
            <summary> The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.LeaseStatus">
            <summary> The lease status of the share. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.LeaseState">
            <summary> Lease state of the share. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.LeaseDuration">
            <summary> Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.SignedIdentifiers">
            <summary> List of stored access policies specified on the share. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.SnapshotOn">
            <summary> Creation time of share snapshot returned in the response of list shares with expand param "snapshots". </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareData.ETag">
            <summary> Resource Etag. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.FileShareResource">
            <summary>
            A Class representing a FileShare along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Storage.FileShareResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetFileShareResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Storage.FileServiceResource" /> using the GetFileShare method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
            <param name="shareName"> The shareName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.FileShareResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.FileShareData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.FileShareResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.FileShareResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified share.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','. </param>
            <param name="xMsSnapshot"> Optional, used to retrieve properties of a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified share.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','. </param>
            <param name="xMsSnapshot"> Optional, used to retrieve properties of a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.DeleteAsync(Azure.WaitUntil,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes specified share under its account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="xMsSnapshot"> Optional, used to delete a snapshot. </param>
            <param name="include"> Optional. Valid values are: snapshots, leased-snapshots, none. The default value is snapshots. For 'snapshots', the file share is deleted including all of its file share snapshots. If the file share contains leased-snapshots, the deletion fails. For 'leased-snapshots', the file share is deleted included all of its file share snapshots (leased/unleased). For 'none', the file share is deleted if it has no share snapshots. If the file share contains any snapshots (leased or unleased), the deletion fails. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.Delete(Azure.WaitUntil,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes specified share under its account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="xMsSnapshot"> Optional, used to delete a snapshot. </param>
            <param name="include"> Optional. Valid values are: snapshots, leased-snapshots, none. The default value is snapshots. For 'snapshots', the file share is deleted including all of its file share snapshots. If the file share contains leased-snapshots, the deletion fails. For 'leased-snapshots', the file share is deleted included all of its file share snapshots (leased/unleased). For 'none', the file share is deleted if it has no share snapshots. If the file share contains any snapshots (leased or unleased), the deletion fails. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.UpdateAsync(Azure.ResourceManager.Storage.FileShareData,System.Threading.CancellationToken)">
            <summary>
            Updates share properties as specified in request body. Properties not mentioned in the request will not be changed. Update fails if the specified share does not already exist.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> Properties to update for the file share. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.Update(Azure.ResourceManager.Storage.FileShareData,System.Threading.CancellationToken)">
            <summary>
            Updates share properties as specified in request body. Properties not mentioned in the request will not be changed. Update fails if the specified share does not already exist.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> Properties to update for the file share. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.RestoreAsync(Azure.ResourceManager.Storage.Models.DeletedShare,System.Threading.CancellationToken)">
            <summary>
            Restore a file share within a valid retention days if share soft delete is enabled
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}/restore</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Restore</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="deletedShare"> The <see cref="T:Azure.ResourceManager.Storage.Models.DeletedShare" /> to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deletedShare" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.Restore(Azure.ResourceManager.Storage.Models.DeletedShare,System.Threading.CancellationToken)">
            <summary>
            Restore a file share within a valid retention days if share soft delete is enabled
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}/restore</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Restore</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="deletedShare"> The <see cref="T:Azure.ResourceManager.Storage.Models.DeletedShare" /> to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="deletedShare" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.LeaseAsync(Azure.ResourceManager.Storage.Models.LeaseShareContent,System.String,System.Threading.CancellationToken)">
            <summary>
            The Lease Share operation establishes and manages a lock on a share for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}/lease</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Lease</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> Lease Share request body. </param>
            <param name="xMsSnapshot"> Optional. Specify the snapshot time to lease a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.Lease(Azure.ResourceManager.Storage.Models.LeaseShareContent,System.String,System.Threading.CancellationToken)">
            <summary>
            The Lease Share operation establishes and manages a lock on a share for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}/lease</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>FileShares_Lease</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.FileShareResource" /></description>
            </item>
            </list>
            </summary>
            <param name="content"> Lease Share request body. </param>
            <param name="xMsSnapshot"> Optional. Specify the snapshot time to lease a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.Storage.ImmutabilityPolicyData">
            <summary>
            A class representing the ImmutabilityPolicy data model.
            The ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Storage.Models.ImmutabilityPolicyState},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ETag},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="immutabilityPeriodSinceCreationInDays"> The immutability period for the blobs in the container since the policy creation, in days. </param>
            <param name="state"> The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked. </param>
            <param name="allowProtectedAppendWrites"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. </param>
            <param name="allowProtectedAppendWritesAll"> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. </param>
            <param name="etag"> Resource Etag. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ImmutabilityPolicyData.ImmutabilityPeriodSinceCreationInDays">
            <summary> The immutability period for the blobs in the container since the policy creation, in days. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ImmutabilityPolicyData.State">
            <summary> The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ImmutabilityPolicyData.AllowProtectedAppendWrites">
            <summary> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ImmutabilityPolicyData.AllowProtectedAppendWritesAll">
            <summary> This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ImmutabilityPolicyData.ETag">
            <summary> Resource Etag. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource">
            <summary>
            A Class representing an ImmutabilityPolicy along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetImmutabilityPolicyResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Storage.BlobContainerResource" /> using the GetImmutabilityPolicy method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
            <param name="containerName"> The containerName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.ImmutabilityPolicyData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.GetAsync(System.Nullable{Azure.ETag},System.Threading.CancellationToken)">
            <summary>
            Gets the existing immutability policy along with the corresponding ETag in response headers and body.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_GetImmutabilityPolicy</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.Get(System.Nullable{Azure.ETag},System.Threading.CancellationToken)">
            <summary>
            Gets the existing immutability policy along with the corresponding ETag in response headers and body.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_GetImmutabilityPolicy</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.DeleteAsync(Azure.WaitUntil,Azure.ETag,System.Threading.CancellationToken)">
            <summary>
            Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, the only way is to delete the container after deleting all expired blobs inside the policy locked container.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_DeleteImmutabilityPolicy</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.Delete(Azure.WaitUntil,Azure.ETag,System.Threading.CancellationToken)">
            <summary>
            Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, the only way is to delete the container after deleting all expired blobs inside the policy locked container.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_DeleteImmutabilityPolicy</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.CreateOrUpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Storage.ImmutabilityPolicyData,System.Nullable{Azure.ETag},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an unlocked immutability policy. ETag in If-Match is honored if given but not required for this operation.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_CreateOrUpdateImmutabilityPolicy</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The ImmutabilityPolicy Properties that will be created or updated to a blob container. </param>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.CreateOrUpdate(Azure.WaitUntil,Azure.ResourceManager.Storage.ImmutabilityPolicyData,System.Nullable{Azure.ETag},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an unlocked immutability policy. ETag in If-Match is honored if given but not required for this operation.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_CreateOrUpdateImmutabilityPolicy</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The ImmutabilityPolicy Properties that will be created or updated to a blob container. </param>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.LockImmutabilityPolicyAsync(Azure.ETag,System.Threading.CancellationToken)">
            <summary>
            Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/lock</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_LockImmutabilityPolicy</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.LockImmutabilityPolicy(Azure.ETag,System.Threading.CancellationToken)">
            <summary>
            Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/lock</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_LockImmutabilityPolicy</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.ExtendImmutabilityPolicyAsync(Azure.ETag,Azure.ResourceManager.Storage.ImmutabilityPolicyData,System.Threading.CancellationToken)">
            <summary>
            Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/extend</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_ExtendImmutabilityPolicy</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="data"> The ImmutabilityPolicy Properties that will be extended for a blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.ExtendImmutabilityPolicy(Azure.ETag,Azure.ResourceManager.Storage.ImmutabilityPolicyData,System.Threading.CancellationToken)">
            <summary>
            Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/extend</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>BlobContainers_ExtendImmutabilityPolicy</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ImmutabilityPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="data"> The ImmutabilityPolicy Properties that will be extended for a blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation.#ctor">
            <summary> Initializes a new instance of StorageArmOperation for mocking. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageArmOperation.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            There are cases that operation id is not available, we return "NOT_SET" for unavailable operation id.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation.GetRehydrationToken">
            <summary>
            Get a token that can be used to rehydrate the operation.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageArmOperation.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final response of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation`1.#ctor">
            <summary> Initializes a new instance of StorageArmOperation for mocking. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageArmOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            There are cases that operation id is not available, we return "NOT_SET" for unavailable operation id.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation`1.GetRehydrationToken">
            <summary>
            Get a token that can be used to rehydrate the operation.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageArmOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageArmOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageArmOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageArmOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" />.
            To get an <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection" /> instance call the GetObjectReplicationPolicies method from an instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.ObjectReplicationPolicyData,System.Threading.CancellationToken)">
            <summary>
            Create or update the object replication policy of the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="data"> The object replication policy set to a storage account. A unique policy ID will be created if absent. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="objectReplicationPolicyId" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.ObjectReplicationPolicyData,System.Threading.CancellationToken)">
            <summary>
            Create or update the object replication policy of the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="data"> The object replication policy set to a storage account. A unique policy ID will be created if absent. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="objectReplicationPolicyId" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the object replication policy of the storage account by policy ID.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="objectReplicationPolicyId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the object replication policy of the storage account by policy ID.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="objectReplicationPolicyId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List the object replication policies associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List the object replication policies associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="objectReplicationPolicyId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="objectReplicationPolicyId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="objectReplicationPolicyId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="objectReplicationPolicyId" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyData">
            <summary>
            A class representing the ObjectReplicationPolicy data model.
            The replication policy between two storage accounts. Multiple rules can be defined in one policy.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{System.DateTimeOffset},System.String,System.String,System.Collections.Generic.IList{Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="policyId"> A unique id for object replication policy. </param>
            <param name="enabledOn"> Indicates when the policy is enabled on the source account. </param>
            <param name="sourceAccount"> Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false. </param>
            <param name="destinationAccount"> Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false. </param>
            <param name="rules"> The storage account object replication rules. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ObjectReplicationPolicyData.PolicyId">
            <summary> A unique id for object replication policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ObjectReplicationPolicyData.EnabledOn">
            <summary> Indicates when the policy is enabled on the source account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ObjectReplicationPolicyData.SourceAccount">
            <summary> Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ObjectReplicationPolicyData.DestinationAccount">
            <summary> Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ObjectReplicationPolicyData.Rules">
            <summary> The storage account object replication rules. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource">
            <summary>
            A Class representing an ObjectReplicationPolicy along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetObjectReplicationPolicyResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> using the GetObjectReplicationPolicy method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
            <param name="objectReplicationPolicyId"> The objectReplicationPolicyId. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.ObjectReplicationPolicyData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get the object replication policy of the storage account by policy ID.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get the object replication policy of the storage account by policy ID.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the object replication policy associated with the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the object replication policy associated with the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Storage.ObjectReplicationPolicyData,System.Threading.CancellationToken)">
            <summary>
            Create or update the object replication policy of the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The object replication policy set to a storage account. A unique policy ID will be created if absent. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.Update(Azure.WaitUntil,Azure.ResourceManager.Storage.ObjectReplicationPolicyData,System.Threading.CancellationToken)">
            <summary>
            Create or update the object replication policy of the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ObjectReplicationPolicies_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The object replication policy set to a storage account. A unique policy ID will be created if absent. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.QueueServiceData">
            <summary>
            A class representing the QueueService data model.
            The properties of a storage account’s Queue service.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.QueueServiceData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Storage.Models.StorageCorsRules,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.QueueServiceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="cors"> Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.QueueServiceData.Cors">
            <summary> Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.QueueServiceData.CorsRules">
            <summary> The List of CORS rules. You can include up to five CorsRule elements in the request. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.QueueServiceResource">
            <summary>
            A Class representing a QueueService along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetQueueServiceResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> using the GetQueueService method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.QueueServiceResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.QueueServiceData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.QueueServiceResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.QueueServiceResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.GetStorageQueues">
            <summary> Gets a collection of StorageQueueResources in the QueueService. </summary>
            <returns> An object representing collection of StorageQueueResources and their operations over a StorageQueueResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.GetStorageQueueAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the queue with the specified queue name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queueName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.GetStorageQueue(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the queue with the specified queue name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queueName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/{queueServiceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>QueueServices_GetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/{queueServiceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>QueueServices_GetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.CreateOrUpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Storage.QueueServiceData,System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/{queueServiceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>QueueServices_SetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The properties of a storage account’s Queue service, only properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.CreateOrUpdate(Azure.WaitUntil,Azure.ResourceManager.Storage.QueueServiceData,System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/{queueServiceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>QueueServices_SetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The properties of a storage account’s Queue service, only properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of BlobContainersRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.ListAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.BlobContainerState},System.Threading.CancellationToken)">
            <summary> Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional. Specified maximum number of containers that can be included in the list. </param>
            <param name="filter"> Optional. When specified, only container names starting with the filter will be listed. </param>
            <param name="include"> Optional, used to include the properties for soft deleted blob containers. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.List(System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.BlobContainerState},System.Threading.CancellationToken)">
            <summary> Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional. Specified maximum number of containers that can be included in the list. </param>
            <param name="filter"> Optional. When specified, only container names starting with the filter will be listed. </param>
            <param name="include"> Optional, used to include the properties for soft deleted blob containers. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.CreateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.BlobContainerData,System.Threading.CancellationToken)">
            <summary> Creates a new container under the specified account as described by request body. The container resource includes metadata and properties for that container. It does not include a list of the blobs contained by the container. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Properties of the blob container to create. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="containerName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.Create(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.BlobContainerData,System.Threading.CancellationToken)">
            <summary> Creates a new container under the specified account as described by request body. The container resource includes metadata and properties for that container. It does not include a list of the blobs contained by the container. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Properties of the blob container to create. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="containerName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.BlobContainerData,System.Threading.CancellationToken)">
            <summary> Updates container properties as specified in request body. Properties not mentioned in the request will be unchanged. Update fails if the specified container doesn't already exist. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Properties to update for the blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="containerName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.Update(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.BlobContainerData,System.Threading.CancellationToken)">
            <summary> Updates container properties as specified in request body. Properties not mentioned in the request will be unchanged. Update fails if the specified container doesn't already exist. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Properties to update for the blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="containerName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets properties of a specified container. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets properties of a specified container. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes specified container under its account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes specified container under its account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.SetLegalHoldAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.LegalHold,System.Threading.CancellationToken)">
            <summary> Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="legalHold"> The LegalHold property that will be set to a blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="containerName" /> or <paramref name="legalHold" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.SetLegalHold(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.LegalHold,System.Threading.CancellationToken)">
            <summary> Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="legalHold"> The LegalHold property that will be set to a blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="containerName" /> or <paramref name="legalHold" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.ClearLegalHoldAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.LegalHold,System.Threading.CancellationToken)">
            <summary> Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="legalHold"> The LegalHold property that will be clear from a blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="containerName" /> or <paramref name="legalHold" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.ClearLegalHold(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.LegalHold,System.Threading.CancellationToken)">
            <summary> Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="legalHold"> The LegalHold property that will be clear from a blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="containerName" /> or <paramref name="legalHold" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.CreateOrUpdateImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.ImmutabilityPolicyData,System.Nullable{Azure.ETag},System.Threading.CancellationToken)">
            <summary> Creates or updates an unlocked immutability policy. ETag in If-Match is honored if given but not required for this operation. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> The ImmutabilityPolicy Properties that will be created or updated to a blob container. </param>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="containerName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.CreateOrUpdateImmutabilityPolicy(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.ImmutabilityPolicyData,System.Nullable{Azure.ETag},System.Threading.CancellationToken)">
            <summary> Creates or updates an unlocked immutability policy. ETag in If-Match is honored if given but not required for this operation. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> The ImmutabilityPolicy Properties that will be created or updated to a blob container. </param>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="containerName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.GetImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Nullable{Azure.ETag},System.Threading.CancellationToken)">
            <summary> Gets the existing immutability policy along with the corresponding ETag in response headers and body. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.GetImmutabilityPolicy(System.String,System.String,System.String,System.String,System.Nullable{Azure.ETag},System.Threading.CancellationToken)">
            <summary> Gets the existing immutability policy along with the corresponding ETag in response headers and body. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.DeleteImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,Azure.ETag,System.Threading.CancellationToken)">
            <summary> Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, the only way is to delete the container after deleting all expired blobs inside the policy locked container. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.DeleteImmutabilityPolicy(System.String,System.String,System.String,System.String,Azure.ETag,System.Threading.CancellationToken)">
            <summary> Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, the only way is to delete the container after deleting all expired blobs inside the policy locked container. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.LockImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,Azure.ETag,System.Threading.CancellationToken)">
            <summary> Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.LockImmutabilityPolicy(System.String,System.String,System.String,System.String,Azure.ETag,System.Threading.CancellationToken)">
            <summary> Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.ExtendImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,Azure.ETag,Azure.ResourceManager.Storage.ImmutabilityPolicyData,System.Threading.CancellationToken)">
            <summary> Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="data"> The ImmutabilityPolicy Properties that will be extended for a blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.ExtendImmutabilityPolicy(System.String,System.String,System.String,System.String,Azure.ETag,Azure.ResourceManager.Storage.ImmutabilityPolicyData,System.Threading.CancellationToken)">
            <summary> Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="ifMatch"> The entity state (ETag) version of the immutability policy to update. A value of "*" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. </param>
            <param name="data"> The ImmutabilityPolicy Properties that will be extended for a blob container. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.LeaseAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.LeaseContainerContent,System.Threading.CancellationToken)">
            <summary> The Lease Container operation establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="content"> Lease Container request body. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.Lease(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.LeaseContainerContent,System.Threading.CancellationToken)">
            <summary> The Lease Container operation establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="content"> Lease Container request body. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.ObjectLevelWormAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> This operation migrates a blob container from container level WORM to object level immutability enabled container. Prerequisites require a container level immutability policy either in locked or unlocked state, Account level versioning must be enabled and there should be no Legal hold on the container. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.ObjectLevelWorm(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> This operation migrates a blob container from container level WORM to object level immutability enabled container. Prerequisites require a container level immutability policy either in locked or unlocked state, Account level versioning must be enabled and there should be no Legal hold on the container. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="containerName"> The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.ListNextPageAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.BlobContainerState},System.Threading.CancellationToken)">
            <summary> Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional. Specified maximum number of containers that can be included in the list. </param>
            <param name="filter"> Optional. When specified, only container names starting with the filter will be listed. </param>
            <param name="include"> Optional, used to include the properties for soft deleted blob containers. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainersRestOperations.ListNextPage(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.BlobContainerState},System.Threading.CancellationToken)">
            <summary> Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional. Specified maximum number of containers that can be included in the list. </param>
            <param name="filter"> Optional. When specified, only container names starting with the filter will be listed. </param>
            <param name="include"> Optional, used to include the properties for soft deleted blob containers. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPoliciesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of BlobInventoryPoliciesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPoliciesRestOperations.GetAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName,System.Threading.CancellationToken)">
            <summary> Gets the blob inventory policy associated with the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="blobInventoryPolicyName"> The name of the storage account blob inventory policy. It should always be 'default'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPoliciesRestOperations.Get(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName,System.Threading.CancellationToken)">
            <summary> Gets the blob inventory policy associated with the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="blobInventoryPolicyName"> The name of the storage account blob inventory policy. It should always be 'default'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPoliciesRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName,Azure.ResourceManager.Storage.BlobInventoryPolicyData,System.Threading.CancellationToken)">
            <summary> Sets the blob inventory policy to the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="blobInventoryPolicyName"> The name of the storage account blob inventory policy. It should always be 'default'. </param>
            <param name="data"> The blob inventory policy set to a storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPoliciesRestOperations.CreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName,Azure.ResourceManager.Storage.BlobInventoryPolicyData,System.Threading.CancellationToken)">
            <summary> Sets the blob inventory policy to the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="blobInventoryPolicyName"> The name of the storage account blob inventory policy. It should always be 'default'. </param>
            <param name="data"> The blob inventory policy set to a storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPoliciesRestOperations.DeleteAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName,System.Threading.CancellationToken)">
            <summary> Deletes the blob inventory policy associated with the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="blobInventoryPolicyName"> The name of the storage account blob inventory policy. It should always be 'default'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPoliciesRestOperations.Delete(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.BlobInventoryPolicyName,System.Threading.CancellationToken)">
            <summary> Deletes the blob inventory policy associated with the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="blobInventoryPolicyName"> The name of the storage account blob inventory policy. It should always be 'default'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPoliciesRestOperations.ListAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the blob inventory policy associated with the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPoliciesRestOperations.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the blob inventory policy associated with the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServicesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of BlobServicesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServicesRestOperations.ListAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List blob services of storage account. It returns a collection of one object named default. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServicesRestOperations.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List blob services of storage account. It returns a collection of one object named default. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServicesRestOperations.SetServicePropertiesAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.BlobServiceData,System.Threading.CancellationToken)">
            <summary> Sets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="data"> The properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServicesRestOperations.SetServiceProperties(System.String,System.String,System.String,Azure.ResourceManager.Storage.BlobServiceData,System.Threading.CancellationToken)">
            <summary> Sets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="data"> The properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServicesRestOperations.GetServicePropertiesAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServicesRestOperations.GetServiceProperties(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of DeletedAccountsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountsRestOperations.ListAsync(System.String,System.Threading.CancellationToken)">
            <summary> Lists deleted accounts under the subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountsRestOperations.List(System.String,System.Threading.CancellationToken)">
            <summary> Lists deleted accounts under the subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountsRestOperations.GetAsync(System.String,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)">
            <summary> Get properties of specified deleted account resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="location"> The location of the deleted storage account. </param>
            <param name="deletedAccountName"> Name of the deleted storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="deletedAccountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="deletedAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountsRestOperations.Get(System.String,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)">
            <summary> Get properties of specified deleted account resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="location"> The location of the deleted storage account. </param>
            <param name="deletedAccountName"> Name of the deleted storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="deletedAccountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="deletedAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountsRestOperations.ListNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists deleted accounts under the subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountsRestOperations.ListNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists deleted accounts under the subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of EncryptionScopesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopesRestOperations.PutAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.EncryptionScopeData,System.Threading.CancellationToken)">
            <summary> Synchronously creates or updates an encryption scope under the specified storage account. If an encryption scope is already created and a subsequent request is issued with different properties, the encryption scope properties will be updated per the specified request. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Encryption scope properties to be used for the create or update. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="encryptionScopeName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopesRestOperations.Put(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.EncryptionScopeData,System.Threading.CancellationToken)">
            <summary> Synchronously creates or updates an encryption scope under the specified storage account. If an encryption scope is already created and a subsequent request is issued with different properties, the encryption scope properties will be updated per the specified request. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Encryption scope properties to be used for the create or update. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="encryptionScopeName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopesRestOperations.PatchAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.EncryptionScopeData,System.Threading.CancellationToken)">
            <summary> Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Encryption scope properties to be used for the update. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="encryptionScopeName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopesRestOperations.Patch(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.EncryptionScopeData,System.Threading.CancellationToken)">
            <summary> Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Encryption scope properties to be used for the update. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="encryptionScopeName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopesRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Returns the properties for the specified encryption scope. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="encryptionScopeName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopesRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Returns the properties for the specified encryption scope. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="encryptionScopeName"> The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="encryptionScopeName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="encryptionScopeName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopesRestOperations.ListAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType},System.Threading.CancellationToken)">
            <summary> Lists all the encryption scopes available under the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional, specifies the maximum number of encryption scopes that will be included in the list response. </param>
            <param name="filter"> Optional. When specified, only encryption scope names starting with the filter will be listed. </param>
            <param name="include"> Optional, when specified, will list encryption scopes with the specific state. Defaults to All. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopesRestOperations.List(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType},System.Threading.CancellationToken)">
            <summary> Lists all the encryption scopes available under the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional, specifies the maximum number of encryption scopes that will be included in the list response. </param>
            <param name="filter"> Optional. When specified, only encryption scope names starting with the filter will be listed. </param>
            <param name="include"> Optional, when specified, will list encryption scopes with the specific state. Defaults to All. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopesRestOperations.ListNextPageAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType},System.Threading.CancellationToken)">
            <summary> Lists all the encryption scopes available under the specified storage account. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional, specifies the maximum number of encryption scopes that will be included in the list response. </param>
            <param name="filter"> Optional. When specified, only encryption scope names starting with the filter will be listed. </param>
            <param name="include"> Optional, when specified, will list encryption scopes with the specific state. Defaults to All. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopesRestOperations.ListNextPage(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{Azure.ResourceManager.Storage.Models.EncryptionScopesIncludeType},System.Threading.CancellationToken)">
            <summary> Lists all the encryption scopes available under the specified storage account. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional, specifies the maximum number of encryption scopes that will be included in the list response. </param>
            <param name="filter"> Optional. When specified, only encryption scope names starting with the filter will be listed. </param>
            <param name="include"> Optional, when specified, will list encryption scopes with the specific state. Defaults to All. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServicesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of FileServicesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServicesRestOperations.ListAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all file services in storage accounts. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServicesRestOperations.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all file services in storage accounts. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServicesRestOperations.SetServicePropertiesAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.FileServiceData,System.Threading.CancellationToken)">
            <summary> Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="data"> The properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServicesRestOperations.SetServiceProperties(System.String,System.String,System.String,Azure.ResourceManager.Storage.FileServiceData,System.Threading.CancellationToken)">
            <summary> Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="data"> The properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServicesRestOperations.GetServicePropertiesAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServicesRestOperations.GetServiceProperties(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of FileSharesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.ListAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all shares. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional. Specified maximum number of shares that can be included in the list. </param>
            <param name="filter"> Optional. When specified, only share names starting with the filter will be listed. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: deleted, snapshots. Should be passed as a string with delimiter ','. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.List(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all shares. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional. Specified maximum number of shares that can be included in the list. </param>
            <param name="filter"> Optional. When specified, only share names starting with the filter will be listed. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: deleted, snapshots. Should be passed as a string with delimiter ','. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.CreateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.FileShareData,System.String,System.Threading.CancellationToken)">
            <summary> Creates a new share under the specified account as described by request body. The share resource includes metadata and properties for that share. It does not include a list of the files contained by the share. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Properties of the file share to create. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: snapshots. Should be passed as a string with delimiter ','. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="shareName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.Create(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.FileShareData,System.String,System.Threading.CancellationToken)">
            <summary> Creates a new share under the specified account as described by request body. The share resource includes metadata and properties for that share. It does not include a list of the files contained by the share. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Properties of the file share to create. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: snapshots. Should be passed as a string with delimiter ','. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="shareName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.FileShareData,System.Threading.CancellationToken)">
            <summary> Updates share properties as specified in request body. Properties not mentioned in the request will not be changed. Update fails if the specified share does not already exist. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Properties to update for the file share. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="shareName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.Update(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.FileShareData,System.Threading.CancellationToken)">
            <summary> Updates share properties as specified in request body. Properties not mentioned in the request will not be changed. Update fails if the specified share does not already exist. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="data"> Properties to update for the file share. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="shareName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets properties of a specified share. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','. </param>
            <param name="xMsSnapshot"> Optional, used to retrieve properties of a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.Get(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets properties of a specified share. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','. </param>
            <param name="xMsSnapshot"> Optional, used to retrieve properties of a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes specified share under its account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="xMsSnapshot"> Optional, used to delete a snapshot. </param>
            <param name="include"> Optional. Valid values are: snapshots, leased-snapshots, none. The default value is snapshots. For 'snapshots', the file share is deleted including all of its file share snapshots. If the file share contains leased-snapshots, the deletion fails. For 'leased-snapshots', the file share is deleted included all of its file share snapshots (leased/unleased). For 'none', the file share is deleted if it has no share snapshots. If the file share contains any snapshots (leased or unleased), the deletion fails. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.Delete(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes specified share under its account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="xMsSnapshot"> Optional, used to delete a snapshot. </param>
            <param name="include"> Optional. Valid values are: snapshots, leased-snapshots, none. The default value is snapshots. For 'snapshots', the file share is deleted including all of its file share snapshots. If the file share contains leased-snapshots, the deletion fails. For 'leased-snapshots', the file share is deleted included all of its file share snapshots (leased/unleased). For 'none', the file share is deleted if it has no share snapshots. If the file share contains any snapshots (leased or unleased), the deletion fails. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.RestoreAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.DeletedShare,System.Threading.CancellationToken)">
            <summary> Restore a file share within a valid retention days if share soft delete is enabled. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="deletedShare"> The <see cref="T:Azure.ResourceManager.Storage.Models.DeletedShare" /> to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="shareName" /> or <paramref name="deletedShare" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.Restore(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.DeletedShare,System.Threading.CancellationToken)">
            <summary> Restore a file share within a valid retention days if share soft delete is enabled. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="deletedShare"> The <see cref="T:Azure.ResourceManager.Storage.Models.DeletedShare" /> to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="shareName" /> or <paramref name="deletedShare" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.LeaseAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.LeaseShareContent,System.String,System.Threading.CancellationToken)">
            <summary> The Lease Share operation establishes and manages a lock on a share for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="content"> Lease Share request body. </param>
            <param name="xMsSnapshot"> Optional. Specify the snapshot time to lease a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.Lease(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.LeaseShareContent,System.String,System.Threading.CancellationToken)">
            <summary> The Lease Share operation establishes and manages a lock on a share for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="shareName"> The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number. </param>
            <param name="content"> Lease Share request body. </param>
            <param name="xMsSnapshot"> Optional. Specify the snapshot time to lease a snapshot. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="shareName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.ListNextPageAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all shares. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional. Specified maximum number of shares that can be included in the list. </param>
            <param name="filter"> Optional. When specified, only share names starting with the filter will be listed. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: deleted, snapshots. Should be passed as a string with delimiter ','. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileSharesRestOperations.ListNextPage(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all shares. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional. Specified maximum number of shares that can be included in the list. </param>
            <param name="filter"> Optional. When specified, only share names starting with the filter will be listed. </param>
            <param name="expand"> Optional, used to expand the properties within share's properties. Valid values are: deleted, snapshots. Should be passed as a string with delimiter ','. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.LocalUsersRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of LocalUsersRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.LocalUsersRestOperations.ListAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List the local users associated with the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.LocalUsersRestOperations.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List the local users associated with the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.LocalUsersRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the local user of the storage account by username. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.LocalUsersRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the local user of the storage account by username. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.LocalUsersRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.StorageAccountLocalUserData,System.Threading.CancellationToken)">
            <summary> Create or update the properties of a local user associated with the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="data"> The local user associated with a storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="username" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.LocalUsersRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.StorageAccountLocalUserData,System.Threading.CancellationToken)">
            <summary> Create or update the properties of a local user associated with the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="data"> The local user associated with a storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="username" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.LocalUsersRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the local user associated with the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.LocalUsersRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the local user associated with the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.LocalUsersRestOperations.ListKeysAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List SSH authorized keys and shared key of the local user. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.LocalUsersRestOperations.ListKeys(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List SSH authorized keys and shared key of the local user. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.LocalUsersRestOperations.RegeneratePasswordAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Regenerate the local user SSH password. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.LocalUsersRestOperations.RegeneratePassword(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Regenerate the local user SSH password. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ManagementPoliciesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ManagementPoliciesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ManagementPoliciesRestOperations.GetAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.ManagementPolicyName,System.Threading.CancellationToken)">
            <summary> Gets the managementpolicy associated with the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="managementPolicyName"> The name of the Storage Account Management Policy. It should always be 'default'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ManagementPoliciesRestOperations.Get(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.ManagementPolicyName,System.Threading.CancellationToken)">
            <summary> Gets the managementpolicy associated with the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="managementPolicyName"> The name of the Storage Account Management Policy. It should always be 'default'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ManagementPoliciesRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.ManagementPolicyName,Azure.ResourceManager.Storage.StorageAccountManagementPolicyData,System.Threading.CancellationToken)">
            <summary> Sets the managementpolicy to the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="managementPolicyName"> The name of the Storage Account Management Policy. It should always be 'default'. </param>
            <param name="data"> The ManagementPolicy set to a storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ManagementPoliciesRestOperations.CreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.ManagementPolicyName,Azure.ResourceManager.Storage.StorageAccountManagementPolicyData,System.Threading.CancellationToken)">
            <summary> Sets the managementpolicy to the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="managementPolicyName"> The name of the Storage Account Management Policy. It should always be 'default'. </param>
            <param name="data"> The ManagementPolicy set to a storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ManagementPoliciesRestOperations.DeleteAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.ManagementPolicyName,System.Threading.CancellationToken)">
            <summary> Deletes the managementpolicy associated with the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="managementPolicyName"> The name of the Storage Account Management Policy. It should always be 'default'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ManagementPoliciesRestOperations.Delete(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.ManagementPolicyName,System.Threading.CancellationToken)">
            <summary> Deletes the managementpolicy associated with the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="managementPolicyName"> The name of the Storage Account Management Policy. It should always be 'default'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPoliciesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ObjectReplicationPoliciesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPoliciesRestOperations.ListAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List the object replication policies associated with the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPoliciesRestOperations.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List the object replication policies associated with the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPoliciesRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the object replication policy of the storage account by policy ID. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="objectReplicationPolicyId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPoliciesRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the object replication policy of the storage account by policy ID. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="objectReplicationPolicyId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPoliciesRestOperations.CreateOrUpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.ObjectReplicationPolicyData,System.Threading.CancellationToken)">
            <summary> Create or update the object replication policy of the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="data"> The object replication policy set to a storage account. A unique policy ID will be created if absent. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="objectReplicationPolicyId" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPoliciesRestOperations.CreateOrUpdate(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.ObjectReplicationPolicyData,System.Threading.CancellationToken)">
            <summary> Create or update the object replication policy of the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="data"> The object replication policy set to a storage account. A unique policy ID will be created if absent. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="objectReplicationPolicyId" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPoliciesRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the object replication policy associated with the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="objectReplicationPolicyId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPoliciesRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the object replication policy associated with the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="objectReplicationPolicyId"> For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="objectReplicationPolicyId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="objectReplicationPolicyId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.PrivateEndpointConnectionsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of PrivateEndpointConnectionsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.PrivateEndpointConnectionsRestOperations.ListAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the private endpoint connections associated with the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.PrivateEndpointConnectionsRestOperations.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all the private endpoint connections associated with the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.PrivateEndpointConnectionsRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the specified private endpoint connection associated with the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.PrivateEndpointConnectionsRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the specified private endpoint connection associated with the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.PrivateEndpointConnectionsRestOperations.PutAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData,System.Threading.CancellationToken)">
            <summary> Update the state of specified private endpoint connection associated with the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="data"> The private endpoint connection properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="privateEndpointConnectionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.PrivateEndpointConnectionsRestOperations.Put(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData,System.Threading.CancellationToken)">
            <summary> Update the state of specified private endpoint connection associated with the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="data"> The private endpoint connection properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="privateEndpointConnectionName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.PrivateEndpointConnectionsRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the specified private endpoint connection associated with the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.PrivateEndpointConnectionsRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the specified private endpoint connection associated with the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.PrivateLinkResourcesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of PrivateLinkResourcesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.PrivateLinkResourcesRestOperations.ListByStorageAccountAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the private link resources that need to be created for a storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.PrivateLinkResourcesRestOperations.ListByStorageAccount(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the private link resources that need to be created for a storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of QueueRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueRestOperations.CreateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.StorageQueueData,System.Threading.CancellationToken)">
            <summary> Creates a new queue with the specified queue name, under the specified account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="data"> Queue properties and metadata to be created with. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="queueName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueRestOperations.Create(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.StorageQueueData,System.Threading.CancellationToken)">
            <summary> Creates a new queue with the specified queue name, under the specified account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="data"> Queue properties and metadata to be created with. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="queueName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.StorageQueueData,System.Threading.CancellationToken)">
            <summary> Creates a new queue with the specified queue name, under the specified account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="data"> Queue properties and metadata to be created with. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="queueName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueRestOperations.Update(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.StorageQueueData,System.Threading.CancellationToken)">
            <summary> Creates a new queue with the specified queue name, under the specified account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="data"> Queue properties and metadata to be created with. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="queueName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the queue with the specified queue name, under the specified account if it exists. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="queueName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the queue with the specified queue name, under the specified account if it exists. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="queueName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the queue with the specified queue name, under the specified account if it exists. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="queueName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the queue with the specified queue name, under the specified account if it exists. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="queueName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueRestOperations.ListAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of all the queues under the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional, a maximum number of queues that should be included in a list queue response. </param>
            <param name="filter"> Optional, When specified, only the queues with a name starting with the given filter will be listed. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueRestOperations.List(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of all the queues under the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional, a maximum number of queues that should be included in a list queue response. </param>
            <param name="filter"> Optional, When specified, only the queues with a name starting with the given filter will be listed. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueRestOperations.ListNextPageAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of all the queues under the specified storage account. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional, a maximum number of queues that should be included in a list queue response. </param>
            <param name="filter"> Optional, When specified, only the queues with a name starting with the given filter will be listed. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueRestOperations.ListNextPage(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of all the queues under the specified storage account. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="maxpagesize"> Optional, a maximum number of queues that should be included in a list queue response. </param>
            <param name="filter"> Optional, When specified, only the queues with a name starting with the given filter will be listed. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServicesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of QueueServicesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServicesRestOperations.ListAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all queue services for the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServicesRestOperations.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all queue services for the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServicesRestOperations.SetServicePropertiesAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.QueueServiceData,System.Threading.CancellationToken)">
            <summary> Sets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="data"> The properties of a storage account’s Queue service, only properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServicesRestOperations.SetServiceProperties(System.String,System.String,System.String,Azure.ResourceManager.Storage.QueueServiceData,System.Threading.CancellationToken)">
            <summary> Sets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="data"> The properties of a storage account’s Queue service, only properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServicesRestOperations.GetServicePropertiesAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServicesRestOperations.GetServiceProperties(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.SkusRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of SkusRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.SkusRestOperations.ListAsync(System.String,System.Threading.CancellationToken)">
            <summary> Lists the available SKUs supported by Microsoft.Storage for given subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.SkusRestOperations.List(System.String,System.Threading.CancellationToken)">
            <summary> Lists the available SKUs supported by Microsoft.Storage for given subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of StorageAccountsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.CheckNameAvailabilityAsync(System.String,Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary> Checks that the storage account name is valid and is not already in use. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="content"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.CheckNameAvailability(System.String,Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent,System.Threading.CancellationToken)">
            <summary> Checks that the storage account name is valid and is not already in use. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="content"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.CreateAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent,System.Threading.CancellationToken)">
            <summary> Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="content"> The parameters to provide for the created account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.Create(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent,System.Threading.CancellationToken)">
            <summary> Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="content"> The parameters to provide for the created account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a storage account in Microsoft Azure. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a storage account in Microsoft Azure. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.GetPropertiesAsync(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary> Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="expand"> May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.GetProperties(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary> Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="expand"> May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.UpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.StorageAccountPatch,System.Threading.CancellationToken)">
            <summary> The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="patch"> The parameters to provide for the updated account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.Update(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.StorageAccountPatch,System.Threading.CancellationToken)">
            <summary> The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="patch"> The parameters to provide for the updated account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="patch" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.ListAsync(System.String,System.Threading.CancellationToken)">
            <summary> Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.List(System.String,System.Threading.CancellationToken)">
            <summary> Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.ListByResourceGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.ListByResourceGroup(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.ListKeysAsync(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageListKeyExpand},System.Threading.CancellationToken)">
            <summary> Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="expand"> Specifies type of the key to be listed. Possible value is kerb. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.ListKeys(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageListKeyExpand},System.Threading.CancellationToken)">
            <summary> Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="expand"> Specifies type of the key to be listed. Possible value is kerb. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.RegenerateKeyAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent,System.Threading.CancellationToken)">
            <summary> Regenerates one of the access keys or Kerberos keys for the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="content"> Specifies name of the key which should be regenerated -- key1, key2, kerb1, kerb2. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.RegenerateKey(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent,System.Threading.CancellationToken)">
            <summary> Regenerates one of the access keys or Kerberos keys for the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="content"> Specifies name of the key which should be regenerated -- key1, key2, kerb1, kerb2. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.ListAccountSasAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.AccountSasContent,System.Threading.CancellationToken)">
            <summary> List SAS credentials of a storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="content"> The parameters to provide to list SAS credentials for the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.ListAccountSas(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.AccountSasContent,System.Threading.CancellationToken)">
            <summary> List SAS credentials of a storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="content"> The parameters to provide to list SAS credentials for the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.ListServiceSasAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.ServiceSasContent,System.Threading.CancellationToken)">
            <summary> List service SAS credentials of a specific resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="content"> The parameters to provide to list service SAS credentials. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.ListServiceSas(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.ServiceSasContent,System.Threading.CancellationToken)">
            <summary> List service SAS credentials of a specific resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="content"> The parameters to provide to list service SAS credentials. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.FailoverAsync(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountFailoverType},System.Threading.CancellationToken)">
            <summary> A failover request can be triggered for a storage account in the event a primary endpoint becomes unavailable for any reason. The failover occurs from the storage account's primary cluster to the secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover and the account is converted to LRS. In the case of a Planned Failover, the primary and secondary clusters are swapped after failover and the account remains geo-replicated. Failover should continue to be used in the event of availability issues as Planned failover is only available while the primary and secondary endpoints are available. The primary use case of a Planned Failover is disaster recovery testing drills. This type of failover is invoked by setting FailoverType parameter to 'Planned'. Learn more about the failover options here- https://learn.microsoft.com/en-us/azure/storage/common/storage-disaster-recovery-guidance. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="failoverType"> The parameter is set to 'Planned' to indicate whether a Planned failover is requested. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.Failover(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountFailoverType},System.Threading.CancellationToken)">
            <summary> A failover request can be triggered for a storage account in the event a primary endpoint becomes unavailable for any reason. The failover occurs from the storage account's primary cluster to the secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover and the account is converted to LRS. In the case of a Planned Failover, the primary and secondary clusters are swapped after failover and the account remains geo-replicated. Failover should continue to be used in the event of availability issues as Planned failover is only available while the primary and secondary endpoints are available. The primary use case of a Planned Failover is disaster recovery testing drills. This type of failover is invoked by setting FailoverType parameter to 'Planned'. Learn more about the failover options here- https://learn.microsoft.com/en-us/azure/storage/common/storage-disaster-recovery-guidance. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="failoverType"> The parameter is set to 'Planned' to indicate whether a Planned failover is requested. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.HierarchicalNamespaceMigrationAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Live Migration of storage account to enable Hns. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="requestType"> Required. Hierarchical namespace migration type can either be a hierarchical namespace validation request 'HnsOnValidationRequest' or a hydration request 'HnsOnHydrationRequest'. The validation request will validate the migration whereas the hydration request will migrate the account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="requestType" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.HierarchicalNamespaceMigration(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Live Migration of storage account to enable Hns. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="requestType"> Required. Hierarchical namespace migration type can either be a hierarchical namespace validation request 'HnsOnValidationRequest' or a hydration request 'HnsOnHydrationRequest'. The validation request will validate the migration whereas the hydration request will migrate the account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="requestType" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.AbortHierarchicalNamespaceMigrationAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Abort live Migration of storage account to enable Hns. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.AbortHierarchicalNamespaceMigration(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Abort live Migration of storage account to enable Hns. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.RestoreBlobRangesAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.BlobRestoreContent,System.Threading.CancellationToken)">
            <summary> Restore blobs in the specified blob ranges. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="content"> The parameters to provide for restore blob ranges. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.RestoreBlobRanges(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.BlobRestoreContent,System.Threading.CancellationToken)">
            <summary> Restore blobs in the specified blob ranges. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="content"> The parameters to provide for restore blob ranges. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.RevokeUserDelegationKeysAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Revoke user delegation keys. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.RevokeUserDelegationKeys(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Revoke user delegation keys. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.ListNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.ListNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.ListByResourceGroupNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountsRestOperations.ListByResourceGroupNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of TableRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableRestOperations.CreateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.TableData,System.Threading.CancellationToken)">
            <summary> Creates a new table with the specified table name, under the specified account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="data"> The parameters to provide to create a table. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="tableName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableRestOperations.Create(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.TableData,System.Threading.CancellationToken)">
            <summary> Creates a new table with the specified table name, under the specified account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="data"> The parameters to provide to create a table. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="tableName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableRestOperations.UpdateAsync(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.TableData,System.Threading.CancellationToken)">
            <summary> Creates a new table with the specified table name, under the specified account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="data"> The parameters to provide to create a table. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="tableName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableRestOperations.Update(System.String,System.String,System.String,System.String,Azure.ResourceManager.Storage.TableData,System.Threading.CancellationToken)">
            <summary> Creates a new table with the specified table name, under the specified account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="data"> The parameters to provide to create a table. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" />, <paramref name="tableName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableRestOperations.GetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the table with the specified table name, under the specified account if it exists. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="tableName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableRestOperations.Get(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the table with the specified table name, under the specified account if it exists. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="tableName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableRestOperations.DeleteAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the table with the specified table name, under the specified account if it exists. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="tableName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableRestOperations.Delete(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes the table with the specified table name, under the specified account if it exists. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="tableName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableRestOperations.ListAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of all the tables under the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableRestOperations.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of all the tables under the specified storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableRestOperations.ListNextPageAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of all the tables under the specified storage account. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableRestOperations.ListNextPage(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets a list of all the tables under the specified storage account. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServicesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of TableServicesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServicesRestOperations.ListAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all table services for the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServicesRestOperations.List(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all table services for the storage account. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServicesRestOperations.SetServicePropertiesAsync(System.String,System.String,System.String,Azure.ResourceManager.Storage.TableServiceData,System.Threading.CancellationToken)">
            <summary> Sets the properties of a storage account’s Table service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="data"> The properties of a storage account’s Table service, only properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServicesRestOperations.SetServiceProperties(System.String,System.String,System.String,Azure.ResourceManager.Storage.TableServiceData,System.Threading.CancellationToken)">
            <summary> Sets the properties of a storage account’s Table service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="data"> The properties of a storage account’s Table service, only properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="accountName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServicesRestOperations.GetServicePropertiesAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the properties of a storage account’s Table service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServicesRestOperations.GetServiceProperties(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the properties of a storage account’s Table service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group within the user's subscription. The name is case insensitive. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.UsagesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of UsagesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.UsagesRestOperations.ListByLocationAsync(System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary> Gets the current usage count and the limit for the resources of the location under the subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="location"> The location of the Azure Storage resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.UsagesRestOperations.ListByLocation(System.String,Azure.Core.AzureLocation,System.Threading.CancellationToken)">
            <summary> Gets the current usage count and the limit for the resources of the location under the subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="location"> The location of the Azure Storage resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StorageAccountCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get a <see cref="T:Azure.ResourceManager.Storage.StorageAccountCollection" /> instance call the GetStorageAccounts method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageAccountCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageAccountCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent,System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="content"> The parameters to provide for the created account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="accountName" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent,System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="content"> The parameters to provide for the created account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="accountName" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountCollection.GetAsync(System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="expand"> May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="accountName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountCollection.Get(System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="expand"> May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="accountName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_ListByResourceGroup</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountCollection.ExistsAsync(System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="expand"> May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="accountName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountCollection.Exists(System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="expand"> May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="accountName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountCollection.GetIfExistsAsync(System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="expand"> May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="accountName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountCollection.GetIfExists(System.String,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>StorageAccounts_GetProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /></description>
            </item>
            </list>
            </summary>
            <param name="accountName"> The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only. </param>
            <param name="expand"> May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="accountName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StorageAccountData">
            <summary>
            A class representing the StorageAccount data model.
            The storage account.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountData.#ctor(Azure.Core.AzureLocation)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountData" />. </summary>
            <param name="location"> The location. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Storage.Models.StorageSku,System.Nullable{Azure.ResourceManager.Storage.Models.StorageKind},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.Nullable{Azure.ResourceManager.Storage.Models.StorageProvisioningState},Azure.ResourceManager.Storage.Models.StorageAccountEndpoints,System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountStatus},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Core.AzureLocation},System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountStatus},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Storage.Models.StorageCustomDomain,Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy,Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy,Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime,Azure.ResourceManager.Storage.Models.StorageAccountEndpoints,Azure.ResourceManager.Storage.Models.StorageAccountEncryption,System.Nullable{Azure.ResourceManager.Storage.Models.StorageAccountAccessTier},Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication,System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.Storage.Models.GeoReplicationStatistics,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.LargeFileSharesState},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData},Azure.ResourceManager.Storage.Models.StorageRoutingPreference,Azure.ResourceManager.Storage.Models.BlobRestoreStatus,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StorageMinimumTlsVersion},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Storage.Models.StoragePublicNetworkAccess},Azure.ResourceManager.Storage.Models.ImmutableStorageAccount,System.Nullable{Azure.ResourceManager.Storage.Models.AllowedCopyScope},Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus,System.Nullable{Azure.ResourceManager.Storage.Models.StorageDnsEndpointType},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tags"> The tags. </param>
            <param name="location"> The location. </param>
            <param name="sku"> Gets the SKU. </param>
            <param name="kind"> Gets the Kind. </param>
            <param name="identity"> The identity of the resource. </param>
            <param name="extendedLocation"> The extendedLocation of the resource. </param>
            <param name="provisioningState"> Gets the status of the storage account at the time the operation was called. </param>
            <param name="primaryEndpoints"> Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint. </param>
            <param name="primaryLocation"> Gets the location of the primary data center for the storage account. </param>
            <param name="statusOfPrimary"> Gets the status indicating whether the primary location of the storage account is available or unavailable. </param>
            <param name="lastGeoFailoverOn"> Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS. </param>
            <param name="secondaryLocation"> Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS. </param>
            <param name="statusOfSecondary"> Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS. </param>
            <param name="createdOn"> Gets the creation date and time of the storage account in UTC. </param>
            <param name="customDomain"> Gets the custom domain the user assigned to this storage account. </param>
            <param name="sasPolicy"> SasPolicy assigned to the storage account. </param>
            <param name="keyPolicy"> KeyPolicy assigned to the storage account. </param>
            <param name="keyCreationTime"> Storage account keys creation time. </param>
            <param name="secondaryEndpoints"> Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS. </param>
            <param name="encryption"> Encryption settings to be used for server-side encryption for the storage account. </param>
            <param name="accessTier"> Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. </param>
            <param name="azureFilesIdentityBasedAuthentication"> Provides the identity based authentication settings for Azure Files. </param>
            <param name="enableHttpsTrafficOnly"> Allows https traffic only to storage service if sets to true. </param>
            <param name="networkRuleSet"> Network rule set. </param>
            <param name="isSftpEnabled"> Enables Secure File Transfer Protocol, if set to true. </param>
            <param name="isLocalUserEnabled"> Enables local users feature, if set to true. </param>
            <param name="isHnsEnabled"> Account HierarchicalNamespace enabled if sets to true. </param>
            <param name="geoReplicationStats"> Geo Replication Stats. </param>
            <param name="isFailoverInProgress"> If the failover is in progress, the value will be true, otherwise, it will be null. </param>
            <param name="largeFileSharesState"> Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. </param>
            <param name="privateEndpointConnections"> List of private endpoint connection associated with the specified storage account. </param>
            <param name="routingPreference"> Maintains information about the network routing choice opted by the user for data transfer. </param>
            <param name="blobRestoreStatus"> Blob restore status. </param>
            <param name="allowBlobPublicAccess"> Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property. </param>
            <param name="minimumTlsVersion"> Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. </param>
            <param name="allowSharedKeyAccess"> Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. </param>
            <param name="isNfsV3Enabled"> NFS 3.0 protocol support enabled if set to true. </param>
            <param name="allowCrossTenantReplication"> Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property. </param>
            <param name="isDefaultToOAuthAuthentication"> A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. </param>
            <param name="publicNetworkAccess"> Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </param>
            <param name="immutableStorageWithVersioning"> The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default. </param>
            <param name="allowedCopyScope"> Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. </param>
            <param name="storageAccountSkuConversionStatus"> This property is readOnly and is set by server during asynchronous storage account sku conversion operations. </param>
            <param name="dnsEndpointType"> Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountData" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.Sku">
            <summary> Gets the SKU. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.Kind">
            <summary> Gets the Kind. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.Identity">
            <summary> The identity of the resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.ExtendedLocation">
            <summary> The extendedLocation of the resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.ProvisioningState">
            <summary> Gets the status of the storage account at the time the operation was called. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.PrimaryEndpoints">
            <summary> Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.PrimaryLocation">
            <summary> Gets the location of the primary data center for the storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.StatusOfPrimary">
            <summary> Gets the status indicating whether the primary location of the storage account is available or unavailable. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.LastGeoFailoverOn">
            <summary> Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.SecondaryLocation">
            <summary> Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.StatusOfSecondary">
            <summary> Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.CreatedOn">
            <summary> Gets the creation date and time of the storage account in UTC. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.CustomDomain">
            <summary> Gets the custom domain the user assigned to this storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.SasPolicy">
            <summary> SasPolicy assigned to the storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.KeyPolicy">
            <summary> KeyPolicy assigned to the storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.KeyExpirationPeriodInDays">
            <summary> The key expiration period in days. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.KeyCreationTime">
            <summary> Storage account keys creation time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.SecondaryEndpoints">
            <summary> Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.Encryption">
            <summary> Encryption settings to be used for server-side encryption for the storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.AccessTier">
            <summary> Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.AzureFilesIdentityBasedAuthentication">
            <summary> Provides the identity based authentication settings for Azure Files. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.EnableHttpsTrafficOnly">
            <summary> Allows https traffic only to storage service if sets to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.NetworkRuleSet">
            <summary> Network rule set. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.IsSftpEnabled">
            <summary> Enables Secure File Transfer Protocol, if set to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.IsLocalUserEnabled">
            <summary> Enables local users feature, if set to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.IsHnsEnabled">
            <summary> Account HierarchicalNamespace enabled if sets to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.GeoReplicationStats">
            <summary> Geo Replication Stats. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.IsFailoverInProgress">
            <summary> If the failover is in progress, the value will be true, otherwise, it will be null. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.LargeFileSharesState">
            <summary> Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.PrivateEndpointConnections">
            <summary> List of private endpoint connection associated with the specified storage account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.RoutingPreference">
            <summary> Maintains information about the network routing choice opted by the user for data transfer. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.BlobRestoreStatus">
            <summary> Blob restore status. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.AllowBlobPublicAccess">
            <summary> Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.MinimumTlsVersion">
            <summary> Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.AllowSharedKeyAccess">
            <summary> Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.IsNfsV3Enabled">
            <summary> NFS 3.0 protocol support enabled if set to true. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.AllowCrossTenantReplication">
            <summary> Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.IsDefaultToOAuthAuthentication">
            <summary> A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.PublicNetworkAccess">
            <summary> Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.ImmutableStorageWithVersioning">
            <summary> The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.AllowedCopyScope">
            <summary> Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.StorageAccountSkuConversionStatus">
            <summary> This property is readOnly and is set by server during asynchronous storage account sku conversion operations. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountData.DnsEndpointType">
            <summary> Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" />.
            To get a <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection" /> instance call the GetStorageAccountLocalUsers method from an instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.StorageAccountLocalUserData,System.Threading.CancellationToken)">
            <summary>
            Create or update the properties of a local user associated with the storage account
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="data"> The local user associated with a storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="username" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.StorageAccountLocalUserData,System.Threading.CancellationToken)">
            <summary>
            Create or update the properties of a local user associated with the storage account
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="data"> The local user associated with a storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="username" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the local user of the storage account by username.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="username" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the local user of the storage account by username.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="username" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List the local users associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List the local users associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="username" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="username" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="username" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="username"> The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="username" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="username" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StorageAccountLocalUserData">
            <summary>
            A class representing the StorageAccountLocalUser data model.
            The local user associated with the storage accounts.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IList{Azure.ResourceManager.Storage.Models.StoragePermissionScope},System.String,System.Collections.Generic.IList{Azure.ResourceManager.Storage.Models.StorageSshPublicKey},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="permissionScopes"> The permission scopes of the local user. </param>
            <param name="homeDirectory"> Optional, local user home directory. </param>
            <param name="sshAuthorizedKeys"> Optional, local user ssh authorized keys for SFTP. </param>
            <param name="sid"> A unique Security Identifier that is generated by the server. </param>
            <param name="hasSharedKey"> Indicates whether shared key exists. Set it to false to remove existing shared key. </param>
            <param name="hasSshKey"> Indicates whether ssh key exists. Set it to false to remove existing SSH key. </param>
            <param name="hasSshPassword"> Indicates whether ssh password exists. Set it to false to remove existing SSH password. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountLocalUserData.PermissionScopes">
            <summary> The permission scopes of the local user. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountLocalUserData.HomeDirectory">
            <summary> Optional, local user home directory. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountLocalUserData.SshAuthorizedKeys">
            <summary> Optional, local user ssh authorized keys for SFTP. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountLocalUserData.Sid">
            <summary> A unique Security Identifier that is generated by the server. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountLocalUserData.HasSharedKey">
            <summary> Indicates whether shared key exists. Set it to false to remove existing shared key. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountLocalUserData.HasSshKey">
            <summary> Indicates whether ssh key exists. Set it to false to remove existing SSH key. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountLocalUserData.HasSshPassword">
            <summary> Indicates whether ssh password exists. Set it to false to remove existing SSH password. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource">
            <summary>
            A Class representing a StorageAccountLocalUser along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetStorageAccountLocalUserResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> using the GetStorageAccountLocalUser method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
            <param name="username"> The username. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.StorageAccountLocalUserData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get the local user of the storage account by username.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get the local user of the storage account by username.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the local user associated with the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the local user associated with the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Storage.StorageAccountLocalUserData,System.Threading.CancellationToken)">
            <summary>
            Create or update the properties of a local user associated with the storage account
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The local user associated with a storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.Update(Azure.WaitUntil,Azure.ResourceManager.Storage.StorageAccountLocalUserData,System.Threading.CancellationToken)">
            <summary>
            Create or update the properties of a local user associated with the storage account
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The local user associated with a storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.GetKeysAsync(System.Threading.CancellationToken)">
            <summary>
            List SSH authorized keys and shared key of the local user.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/listKeys</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_ListKeys</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.GetKeys(System.Threading.CancellationToken)">
            <summary>
            List SSH authorized keys and shared key of the local user.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/listKeys</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_ListKeys</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.RegeneratePasswordAsync(System.Threading.CancellationToken)">
            <summary>
            Regenerate the local user SSH password.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/regeneratePassword</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_RegeneratePassword</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.RegeneratePassword(System.Threading.CancellationToken)">
            <summary>
            Regenerate the local user SSH password.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/regeneratePassword</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>LocalUsers_RegeneratePassword</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountLocalUserResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData">
            <summary>
            A class representing the StorageAccountManagementPolicy data model.
            The Get Storage Account ManagementPolicies operation response.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Storage.Models.ManagementPolicySchema,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="lastModifiedOn"> Returns the date and time the ManagementPolicies was last modified. </param>
            <param name="policy"> The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData.LastModifiedOn">
            <summary> Returns the date and time the ManagementPolicies was last modified. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData.Policy">
            <summary> The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData.Rules">
            <summary> The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource">
            <summary>
            A Class representing a StorageAccountManagementPolicy along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetStorageAccountManagementPolicyResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> using the GetStorageAccountManagementPolicy method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Storage.Models.ManagementPolicyName)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
            <param name="managementPolicyName"> The managementPolicyName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.StorageAccountManagementPolicyData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the managementpolicy associated with the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets the managementpolicy associated with the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the managementpolicy associated with the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ManagementPolicies_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the managementpolicy associated with the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ManagementPolicies_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.CreateOrUpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Storage.StorageAccountManagementPolicyData,System.Threading.CancellationToken)">
            <summary>
            Sets the managementpolicy to the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ManagementPolicies_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The ManagementPolicy set to a storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.CreateOrUpdate(Azure.WaitUntil,Azure.ResourceManager.Storage.StorageAccountManagementPolicyData,System.Threading.CancellationToken)">
            <summary>
            Sets the managementpolicy to the specified storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ManagementPolicies_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The ManagementPolicy set to a storage account. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" />.
            To get a <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection" /> instance call the GetStoragePrivateEndpointConnections method from an instance of <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData,System.Threading.CancellationToken)">
            <summary>
            Update the state of specified private endpoint connection associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Put</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="data"> The private endpoint connection properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData,System.Threading.CancellationToken)">
            <summary>
            Update the state of specified private endpoint connection associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Put</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="data"> The private endpoint connection properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified private endpoint connection associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified private endpoint connection associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            List all the private endpoint connections associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            List all the private endpoint connections associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="privateEndpointConnectionName"> The name of the private endpoint connection associated with the Azure resource. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="privateEndpointConnectionName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData">
            <summary>
            A class representing the StoragePrivateEndpointConnection data model.
            The Private Endpoint Connection resource.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Resources.Models.SubResource,Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState,System.Nullable{Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionProvisioningState},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="privateEndpoint"> The resource of private end point. </param>
            <param name="connectionState"> A collection of information about the state of the connection between service consumer and provider. </param>
            <param name="provisioningState"> The provisioning state of the private endpoint connection resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData.PrivateEndpoint">
            <summary> The resource of private end point. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData.PrivateEndpointId">
            <summary> Gets Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData.ConnectionState">
            <summary> A collection of information about the state of the connection between service consumer and provider. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData.ProvisioningState">
            <summary> The provisioning state of the private endpoint connection resource. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource">
            <summary>
            A Class representing a StoragePrivateEndpointConnection along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetStoragePrivateEndpointConnectionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> using the GetStoragePrivateEndpointConnection method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
            <param name="privateEndpointConnectionName"> The privateEndpointConnectionName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the specified private endpoint connection associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets the specified private endpoint connection associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified private endpoint connection associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified private endpoint connection associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData,System.Threading.CancellationToken)">
            <summary>
            Update the state of specified private endpoint connection associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Put</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The private endpoint connection properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.Update(Azure.WaitUntil,Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData,System.Threading.CancellationToken)">
            <summary>
            Update the state of specified private endpoint connection associated with the storage account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>PrivateEndpointConnections_Put</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The private endpoint connection properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StorageQueueCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" />.
            To get a <see cref="T:Azure.ResourceManager.Storage.StorageQueueCollection" /> instance call the GetStorageQueues method from an instance of <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageQueueCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageQueueCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.StorageQueueData,System.Threading.CancellationToken)">
            <summary>
            Creates a new queue with the specified queue name, under the specified account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="data"> Queue properties and metadata to be created with. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queueName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.StorageQueueData,System.Threading.CancellationToken)">
            <summary>
            Creates a new queue with the specified queue name, under the specified account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="data"> Queue properties and metadata to be created with. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queueName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the queue with the specified queue name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queueName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the queue with the specified queue name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queueName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueCollection.GetAllAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the queues under the specified storage account
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="maxpagesize"> Optional, a maximum number of queues that should be included in a list queue response. </param>
            <param name="filter"> Optional, When specified, only the queues with a name starting with the given filter will be listed. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueCollection.GetAll(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the queues under the specified storage account
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="maxpagesize"> Optional, a maximum number of queues that should be included in a list queue response. </param>
            <param name="filter"> Optional, When specified, only the queues with a name starting with the given filter will be listed. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queueName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queueName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queueName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="queueName"> A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="queueName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="queueName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StorageQueueData">
            <summary> A class representing the StorageQueue data model. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageQueueData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.StorageQueueData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="metadata"> A name-value pair that represents queue metadata. </param>
            <param name="approximateMessageCount"> Integer indicating an approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageQueueData.Metadata">
            <summary> A name-value pair that represents queue metadata. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageQueueData.ApproximateMessageCount">
            <summary> Integer indicating an approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.StorageQueueResource">
            <summary>
            A Class representing a StorageQueue along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetStorageQueueResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Storage.QueueServiceResource" /> using the GetStorageQueue method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
            <param name="queueName"> The queueName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.StorageQueueResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.StorageQueueData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageQueueResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.StorageQueueResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the queue with the specified queue name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets the queue with the specified queue name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the queue with the specified queue name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the queue with the specified queue name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueResource.UpdateAsync(Azure.ResourceManager.Storage.StorageQueueData,System.Threading.CancellationToken)">
            <summary>
            Creates a new queue with the specified queue name, under the specified account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> Queue properties and metadata to be created with. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueResource.Update(Azure.ResourceManager.Storage.StorageQueueData,System.Threading.CancellationToken)">
            <summary>
            Creates a new queue with the specified queue name, under the specified account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Queue_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.StorageQueueResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> Queue properties and metadata to be created with. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.TableCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Storage.TableResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Storage.TableResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" />.
            To get a <see cref="T:Azure.ResourceManager.Storage.TableCollection" /> instance call the GetTables method from an instance of <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.TableCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.TableCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.TableData,System.Threading.CancellationToken)">
            <summary>
            Creates a new table with the specified table name, under the specified account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="data"> The parameters to provide to create a table. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tableName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Storage.TableData,System.Threading.CancellationToken)">
            <summary>
            Creates a new table with the specified table name, under the specified account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="data"> The parameters to provide to create a table. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tableName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the table with the specified table name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tableName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the table with the specified table name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tableName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the tables under the specified storage account
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Storage.TableResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the tables under the specified storage account
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Storage.TableResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tableName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tableName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tableName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tableName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.TableData">
            <summary>
            A class representing the Table data model.
            Properties of the table, including Id, resource name, resource type.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.TableData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IList{Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.TableData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="tableName"> Table name under the specified account. </param>
            <param name="signedIdentifiers"> List of stored access policies specified on the table. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.TableData.TableName">
            <summary> Table name under the specified account. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.TableData.SignedIdentifiers">
            <summary> List of stored access policies specified on the table. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.TableResource">
            <summary>
            A Class representing a Table along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Storage.TableResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetTableResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /> using the GetTable method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.TableResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
            <param name="tableName"> The tableName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.TableResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.TableResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.TableData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.TableResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.TableResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.TableResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.TableResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the table with the specified table name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets the table with the specified table name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the table with the specified table name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes the table with the specified table name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableResource.UpdateAsync(Azure.ResourceManager.Storage.TableData,System.Threading.CancellationToken)">
            <summary>
            Creates a new table with the specified table name, under the specified account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> The parameters to provide to create a table. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableResource.Update(Azure.ResourceManager.Storage.TableData,System.Threading.CancellationToken)">
            <summary>
            Creates a new table with the specified table name, under the specified account.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> The parameters to provide to create a table. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Storage.TableServiceData">
            <summary>
            A class representing the TableService data model.
            The properties of a storage account’s Table service.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.TableServiceData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Storage.Models.StorageCorsRules,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Storage.TableServiceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="cors"> Specifies CORS rules for the Table service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Table service. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.TableServiceData.Cors">
            <summary> Specifies CORS rules for the Table service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Table service. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.TableServiceData.CorsRules">
            <summary> The List of CORS rules. You can include up to five CorsRule elements in the request. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Storage.TableServiceResource">
            <summary>
            A Class representing a TableService along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetTableServiceResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Storage.StorageAccountResource" /> using the GetTableService method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /> instance. </summary>
            <param name="subscriptionId"> The subscriptionId. </param>
            <param name="resourceGroupName"> The resourceGroupName. </param>
            <param name="accountName"> The accountName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Storage.TableServiceResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Storage.TableServiceData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Storage.TableServiceResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Storage.TableServiceResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.GetTables">
            <summary> Gets a collection of TableResources in the TableService. </summary>
            <returns> An object representing collection of TableResources and their operations over a TableResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.GetTableAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the table with the specified table name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tableName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.GetTable(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the table with the specified table name, under the specified account if it exists.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>Table_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tableName"> A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tableName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="tableName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Table service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/{tableServiceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>TableServices_GetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Table service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/{tableServiceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>TableServices_GetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.CreateOrUpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Storage.TableServiceData,System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Table service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/{tableServiceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>TableServices_SetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The properties of a storage account’s Table service, only properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.CreateOrUpdate(Azure.WaitUntil,Azure.ResourceManager.Storage.TableServiceData,System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Table service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/{tableServiceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>TableServices_SetServiceProperties</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-09-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Storage.TableServiceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The properties of a storage account’s Table service, only properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter">
            <summary> JsonConverter for managed service identity type v3. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter.Write(System.Text.Json.Utf8JsonWriter,Azure.ResourceManager.Models.ManagedServiceIdentityType,System.Text.Json.JsonSerializerOptions)">
            <summary> Serialize managed service identity type to v3 format. </summary>
            <param name="writer"> The writer. </param>
            <param name="model"> The ManagedServiceIdentityType model which is v4. </param>
            <param name="options"> The options for JsonSerializer. </param>
        </member>
        <member name="M:Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary> Deserialize managed service identity type from v3 format. </summary>
            <param name="reader"> The reader. </param>
            <param name="typeToConvert"> The type to convert </param>
            <param name="options"> The options for JsonSerializer. </param>
        </member>
        <member name="T:Azure.ResourceManager.SharedExtensions">
            <summary>
            helper class
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.SharedExtensions.SubstringAfterProviderNamespace(Azure.Core.ResourceIdentifier)">
            <summary>
            Collects the segments in a resource identifier into a string
            </summary>
            <param name="resourceId">the resource identifier</param>
            <returns></returns>
        </member>
        <member name="M:Azure.ResourceManager.SharedExtensions.ReplaceWith(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            An extension method for supporting replacing one dictionary content with another one.
            This is used to support resource tags.
            </summary>
            <param name="dest"> The destination dictionary in which the content will be replaced. </param>
            <param name="src"> The source dictionary from which the content is copied from. </param>
            <returns> The destination dictionary that has been altered. </returns>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Usage">
            <summary>
            Gets or sets a coma separated list of additional model usage modes. Allowed values: model, error, intput, output.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Formats">
            <summary>
            Gets or sets a coma separated list of additional model serialization formats.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.PropertyName">
            <summary>
            Gets or sets the property name which these hooks should apply to
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.SerializationPath">
            <summary>
            Gets or sets the serialization path of the property in the JSON
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.SerializationValueHook">
            <summary>
            Gets or sets the method name to use when serializing the property value (property name excluded)
            The signature of the serialization hook method must be or compatible with when invoking:
            private void SerializeHook(Utf8JsonWriter writer);
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.DeserializationValueHook">
            <summary>
            Gets or sets the method name to use when deserializing the property value from the JSON
            private static void DeserializationHook(JsonProperty property, ref TypeOfTheProperty propertyValue); // if the property is required
            private static void DeserializationHook(JsonProperty property, ref Optional&lt;TypeOfTheProperty&gt; propertyValue); // if the property is optional
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.BicepSerializationValueHook">
            <summary>
            Gets or sets the method name to use when serializing the property value (property name excluded)
            The signature of the serialization hook method must be or compatible with when invoking:
            private void SerializeHook(StringBuilder builder);
            </summary>
        </member>
        <member name="T:Azure.Core.AppContextSwitchHelper">
            <summary>
            Helper for interacting with AppConfig settings and their related Environment variable settings.
            </summary>
        </member>
        <member name="M:Azure.Core.AppContextSwitchHelper.GetConfigValue(System.String,System.String)">
            <summary>
            Determines if either an AppContext switch or its corresponding Environment Variable is set
            </summary>
            <param name="appContexSwitchName">Name of the AppContext switch.</param>
            <param name="environmentVariableName">Name of the Environment variable.</param>
            <returns>If the AppContext switch has been set, returns the value of the switch.
            If the AppContext switch has not been set, returns the value of the environment variable.
            False if neither is set.
            </returns>
        </member>
        <member name="T:Azure.Core.AsyncLockWithValue`1">
            <summary>
            Primitive that combines async lock and value cache
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.GetLockOrValueAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Method that either returns cached value or acquire a lock.
            If one caller has acquired a lock, other callers will be waiting for the lock to be released.
            If value is set, lock is released and all waiters get that value.
            If value isn't set, the next waiter in the queue will get the lock.
            </summary>
            <param name="async"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.HasValue">
            <summary>
            Returns true if lock contains the cached value. Otherwise false.
            </summary>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.Value">
            <summary>
            Returns cached value if it was set when lock has been created. Throws exception otherwise.
            </summary>
            <exception cref="T:System.InvalidOperationException">Value isn't set.</exception>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.LockOrValue.SetValue(`0)">
            <summary>
            Set value to the cache and to all the waiters.
            </summary>
            <param name="value"></param>
            <exception cref="T:System.InvalidOperationException">Value is set already.</exception>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(Azure.Core.ClientOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="options">The customer provided client options object.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients; use default (null)
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(System.String,System.String,Azure.Core.DiagnosticsOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="optionsNamespace">Namespace of the client class, such as Azure.Storage or Azure.AppConfiguration.</param>
            <param name="providerNamespace">Azure Resource Provider namespace of the Azure service SDK is primarily used for.</param>
            <param name="diagnosticsOptions">The customer provided client diagnostics options.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients, use default (null) for old clients
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.AddLink(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds a link to the scope. This must be called before <see cref="M:Azure.Core.Pipeline.DiagnosticScope.Start" /> has been called for the DiagnosticScope.
            </summary>
            <param name="traceparent">The traceparent for the link.</param>
            <param name="tracestate">The tracestate for the link.</param>
            <param name="attributes">Optional attributes to associate with the link.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.SetTraceContext(System.String,System.String)">
            <summary>
            Sets the trace context for the current scope.
            </summary>
            <param name="traceparent">The trace parent to set for the current scope.</param>
            <param name="tracestate">The trace state to set for the current scope.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.Failed(System.Exception)">
            <summary>
            Marks the scope as failed.
            </summary>
            <param name="exception">The exception to associate with the failed scope.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.Failed(System.String)">
            <summary>
            Marks the scope as failed with low-cardinality error.type attribute.
            </summary>
            <param name="errorCode">Error code to associate with the failed scope.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            Until Activity Source is no longer considered experimental.
            </summary>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScopeFactory.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates diagnostic scope factory.
            </summary>
            <param name="clientNamespace">The namespace which is used as a prefix for all ActivitySources created by the factory and the name of DiagnosticSource (when used).</param>
            <param name="resourceProviderNamespace">Azure resource provider namespace.</param>
            <param name="isActivityEnabled">Flag indicating if distributed tracing is enabled.</param>
            <param name="suppressNestedClientActivities">Flag indicating if nested Azure SDK activities describing public API calls should be suppressed.</param>
            <param name="isStable">Whether instrumentation is considered stable. When false, experimental feature flag controls if tracing is enabled.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1" /> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1" /> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator" /> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Azure.Core.FixedDelayWithNoJitterStrategy">
            <summary>
            A delay strategy that uses a fixed delay with no jitter applied. This is used by data plane LROs.
            </summary>
        </member>
        <member name="T:Azure.Core.OperationInternal">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternal.Succeeded(Azure.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.#ctor(Azure.Core.IOperation,Azure.Core.Pipeline.ClientDiagnostics,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class.
            </summary>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="rawResponse">
                The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
                <list type="bullet">
                    <item>
                        When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation" /> instance is returned.
                        In this case, the response received from this service call can be passed here.
                    </item>
                    <item>
                        When a user instantiates an <see cref="T:Azure.Operation" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
                    </item>
                </list>
            </param>
            <param name="operationTypeName">
                The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
                parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy"> The delay strategy to use. Default is <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />.</param>
        </member>
        <member name="T:Azure.Core.IOperation">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
        </member>
        <member name="M:Azure.Core.IOperation.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />
            don't need to be updated. Operation-specific properties, such as "<c>CreateOn</c>" or "<c>LastModified</c>",
            must be manually updated by the operation implementing this method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&gt; IOperation.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState.Failure(response.GetRawResponse());<br />
                return OperationState.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationState.Success(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. If left <c>null</c>,
            a default exception is created based on the <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.RawResponse">
            <summary>
            The last HTTP response received from the server. Its update already handled in calls to "<c>UpdateStatus</c>" and
            "<c>WaitForCompletionAsync</c>", but custom methods not supported by this class, such as "<c>CancelOperation</c>",
            must update it as well.
            <example>Usage example:
            <code>
              public Response GetRawResponse() =&gt; _operationInternal.RawResponse;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.HasCompleted">
            <summary>
            Returns <c>true</c> if the long-running operation has completed.
            <example>Usage example:
            <code>
              public bool HasCompleted =&gt; _operationInternal.HasCompleted;
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&gt; UpdateStatusAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.UpdateStatusAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public Response UpdateStatus(CancellationToken cancellationToken) =&gt; _operationInternal.UpdateStatus(cancellationToken);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback strategy
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server. <strong></strong></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback strategy
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal`1">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation`1" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal`1" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal`1" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.HasValue" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.Value" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Succeeded(Azure.Response,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="value">The final result of the long-running operation.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.#ctor(Azure.Core.IOperation{`0},Azure.Core.Pipeline.ClientDiagnostics,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal`1" /> class.
            </summary>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="rawResponse">
                The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
                <list type="bullet">
                    <item>
                        When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation`1" /> instance is returned.
                        In this case, the response received from this service call can be passed here.
                    </item>
                    <item>
                        When a user instantiates an <see cref="T:Azure.Operation`1" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
                    </item>
                </list>
            </param>
            <param name="operationTypeName">
                The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
                parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used.
                Default is <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />.</param>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.HasValue">
            <summary>
            Returns <c>true</c> if the long-running operation completed successfully and has produced a final result.
            <example>Usage example:
            <code>
              public bool HasValue =&gt; _operationInternal.HasValue;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.Value">
            <summary>
            The final result of the long-running operation.
            <example>Usage example:
            <code>
              public T Value =&gt; _operationInternal.Value;
            </code>
            </example>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation has not completed yet.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />, which takes into account any retry-after header that is returned
            from the server.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.IOperation`1">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal`1" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.IOperation`1.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal`1" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> or
            <see cref="P:Azure.Core.OperationInternal`1.Value" />, don't need to be updated. Operation-specific properties, such
            as "<c>CreateOn</c>" or "<c>LastModified</c>", must be manually updated by the operation implementing this
            method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&lt;T&gt;&gt; IOperation&lt;T&gt;.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState&lt;T&gt;.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState&lt;T&gt;.Failure(response.GetRawResponse());<br />
                return OperationState&lt;T&gt;.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState`1" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState`1">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal`1" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="value">The final result of the long-running operation.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> or <paramref name="value" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. The same exception will be thrown when
            <see cref="P:Azure.Core.OperationInternal`1.Value" /> is called. If left <c>null</c>, a default exception is created based on the
            <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="T:Azure.Core.OperationPoller">
            <summary>
            Implementation of LRO polling logic.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            There are cases that operation id is not available, we return "NOT_SET" for unavailable operation id.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.Core.SequentialDelayStrategy">
            <summary>
            A delay strategy that uses a fixed sequence of delays with no jitter applied. This is used by management LROs.
            </summary>
        </member>
        <member name="T:Azure.Core.ArrayBufferWriter`1">
            <summary>
            Represents a heap-based, array-backed output sink into which <typeparam name="T" /> data can be written.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with the default initial capacity.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with an initial capacity specified.
            </summary>
            <param name="initialCapacity">The minimum capacity with which to initialize the underlying buffer.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="initialCapacity" /> is not positive (i.e. less than or equal to 0).
            </exception>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenMemory">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenSpan">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenCount">
            <summary>
            Returns the amount of data written to the underlying buffer so far.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.Capacity">
            <summary>
            Returns the total amount of space within the underlying buffer.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.FreeCapacity">
            <summary>
            Returns the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Clear">
            <summary>
            Clears the data written to the underlying buffer.
            </summary>
            <remarks>
            You must clear the <see cref="T:Azure.Core.ArrayBufferWriter`1" /> before trying to re-use it.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Advance(System.Int32)">
            <summary>
            Notifies <see cref="T:System.Buffers.IBufferWriter`1" /> that <paramref name="count" /> amount of data was written to the output <see cref="T:System.Span`1" />/<see cref="T:System.Memory`1" />.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="count" /> is negative.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to advance past the end of the underlying buffer.
            </exception>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetMemory(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Memory`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Memory`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetSpan(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Span`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Span`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="T:Azure.Core.AzureResourceProviderNamespaceAttribute">
            <summary>
            This attribute should be set on all client assemblies with value of one of the resource providers
            from the https://docs.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers list.
            </summary>
        </member>
        <member name="T:Azure.Core.ForwardsClientCallsAttribute">
            <summary>
            Marks methods that call methods on other client and don't need their diagnostics verified.
            </summary>
        </member>
        <member name="M:Azure.Core.ForwardsClientCallsAttribute.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.ForwardsClientCallsAttribute" />.
            </summary>
        </member>
        <member name="M:Azure.Core.ForwardsClientCallsAttribute.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.ForwardsClientCallsAttribute" />.
            </summary>
            <param name="skipChecks"> Sets whether or not diagnostic scope validation should happen. </param>
        </member>
        <member name="P:Azure.Core.ForwardsClientCallsAttribute.SkipChecks">
            <summary>
            Gets whether or not we should validate DiagnosticScope for this API.
            In the case where there is an internal API that makes the Azure API call and a public API that uses it we need ForwardsClientCalls.
            If the public API will cache the results then the diagnostic scope will not always be created because an Azure API is not always called.
            In this case we need to turn off this validation for this API only.
            </summary>
        </member>
        <member name="P:Azure.NoValueResponse`1.HasValue">
            <summary>
            Gets a value indicating whether the current instance has a valid value of its underlying type.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute">
            <summary>
            Indicates that the specified method requires the ability to generate new code at runtime,
            for example through <see cref="N:System.Reflection" />.
            </summary>
            <remarks>
            This allows tools to understand which methods are unsafe to call when compiling ahead of time.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute" /> class
            with the specified message.
            </summary>
            <param name="message">
            A message that contains information about the usage of dynamic code.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.Message">
            <summary>
            Gets a message that contains information about the usage of dynamic code.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.Url">
            <summary>
            Gets or sets an optional URL that contains more information about the method,
            why it requires dynamic code, and what options a consumer has to deal with it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute">
            <summary>
            Indicates that the specified method requires dynamic access to code that is not referenced
            statically, for example through <see cref="N:System.Reflection" />.
            </summary>
            <remarks>
            This allows tools to understand which methods are unsafe to call when removing unreferenced
            code from an application.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute" /> class
            with the specified message.
            </summary>
            <param name="message">
            A message that contains information about the usage of unreferenced code.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.Message">
            <summary>
            Gets a message that contains information about the usage of unreferenced code.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.Url">
            <summary>
            Gets or sets an optional URL that contains more information about the method,
            why it requires unreferenced code, and what options a consumer has to deal with it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
            <summary>
            Suppresses reporting of a specific rule violation, allowing multiple suppressions on a
            single code artifact.
            </summary>
            <remarks>
            <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" /> is different than
            <see cref="T:System.Diagnostics.CodeAnalysis.SuppressMessageAttribute" /> in that it doesn't have a
            <see cref="T:System.Diagnostics.ConditionalAttribute" />. So it is always preserved in the compiled assembly.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" />
            class, specifying the category of the tool and the identifier for an analysis rule.
            </summary>
            <param name="category">The category for the attribute.</param>
            <param name="checkId">The identifier of the analysis rule the attribute applies to.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category">
            <summary>
            Gets the category identifying the classification of the attribute.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category" /> property describes the tool or tool analysis category
            for which a message suppression attribute applies.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.CheckId">
            <summary>
            Gets the identifier of the analysis tool rule to be suppressed.
            </summary>
            <remarks>
            Concatenated together, the <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category" /> and <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.CheckId" />
            properties form a unique check identifier.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Scope">
            <summary>
            Gets or sets the scope of the code that is relevant for the attribute.
            </summary>
            <remarks>
            The Scope property is an optional argument that specifies the metadata scope for which
            the attribute is relevant.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Target">
            <summary>
            Gets or sets a fully qualified path that represents the target of the attribute.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Target" /> property is an optional argument identifying the analysis target
            of the attribute. An example value is "System.IO.Stream.ctor():System.Void".
            Because it is fully qualified, it can be long, particularly for targets such as parameters.
            The analysis tool user interface should be capable of automatically formatting the parameter.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.MessageId">
            <summary>
            Gets or sets an optional argument expanding on exclusion criteria.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.MessageId" /> property is an optional argument that specifies additional
            exclusion where the literal metadata target is not sufficiently precise. For example,
            the <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" /> cannot be applied within a method,
            and it may be desirable to suppress a violation against a statement in the method that will
            give a rule violation, but not against all statements in the method.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Justification">
            <summary>
            Gets or sets the justification for suppressing the code analysis message.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute">
            <summary>
            States a dependency that one member has on another.
            </summary>
            <remarks>
            This can be used to inform tooling of a dependency that is otherwise not evident purely from
            metadata and IL, for example a member relied on via reflection.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified signature of a member on the same type as the consumer.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified signature of a member on a <see cref="T:System.Type" />.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
            <param name="type">The <see cref="T:System.Type" /> containing <paramref name="memberSignature" />.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified signature of a member on a type in an assembly.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
            <param name="typeName">The full name of the type containing the specified member.</param>
            <param name="assemblyName">The assembly name of the type containing the specified member.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified types of members on a <see cref="T:System.Type" />.
            </summary>
            <param name="memberTypes">The types of members depended on.</param>
            <param name="type">The <see cref="T:System.Type" /> containing the specified members.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified types of members on a type in an assembly.
            </summary>
            <param name="memberTypes">The types of members depended on.</param>
            <param name="typeName">The full name of the type containing the specified members.</param>
            <param name="assemblyName">The assembly name of the type containing the specified members.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature">
            <summary>
            Gets the signature of the member depended on.
            </summary>
            <remarks>
            Either <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature" /> must be a valid string or <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes" />
            must not equal <see cref="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None" />, but not both.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes">
            <summary>
            Gets the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" /> which specifies the type
            of members depended on.
            </summary>
            <remarks>
            Either <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature" /> must be a valid string or <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes" />
            must not equal <see cref="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None" />, but not both.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type">
            <summary>
            Gets the <see cref="T:System.Type" /> containing the specified member.
            </summary>
            <remarks>
            If neither <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type" /> nor <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName" /> are specified,
            the type of the consumer is assumed.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName">
            <summary>
            Gets the full name of the type containing the specified member.
            </summary>
            <remarks>
            If neither <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type" /> nor <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName" /> are specified,
            the type of the consumer is assumed.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.AssemblyName">
            <summary>
            Gets the assembly name of the specified type.
            </summary>
            <remarks>
            <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.AssemblyName" /> is only valid when <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName" /> is specified.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Condition">
            <summary>
            Gets or sets the condition in which the dependency is applicable, e.g. "DEBUG".
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute">
             <summary>
             Indicates that certain members on a specified <see cref="T:System.Type" /> are accessed dynamically,
             for example through <see cref="N:System.Reflection" />.
             </summary>
             <remarks>
             This allows tools to understand which members are being accessed during the execution
             of a program.
            
             This attribute is valid on members whose type is <see cref="T:System.Type" /> or <see cref="T:System.String" />.
            
             When this attribute is applied to a location of type <see cref="T:System.String" />, the assumption is
             that the string represents a fully qualified type name.
            
             When this attribute is applied to a class, interface, or struct, the members specified
             can be accessed dynamically on <see cref="T:System.Type" /> instances returned from calling
             <see cref="M:System.Object.GetType" /> on instances of that class, interface, or struct.
            
             If the attribute is applied to a method it's treated as a special case and it implies
             the attribute should be applied to the "this" parameter of the method. As such the attribute
             should only be used on instance methods of types assignable to System.Type (or string, but no methods
             will use it there).
             </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute" /> class
            with the specified member types.
            </summary>
            <param name="memberTypes">The types of members dynamically accessed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute.MemberTypes">
            <summary>
            Gets the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" /> which specifies the type
            of members dynamically accessed.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes">
             <summary>
             Specifies the types of members that are dynamically accessed.
            
             This enumeration has a <see cref="T:System.FlagsAttribute" /> attribute that allows a
             bitwise combination of its member values.
             </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None">
            <summary>
            Specifies no members.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor">
            <summary>
            Specifies the default, parameterless public constructor.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors">
            <summary>
            Specifies all public constructors.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicConstructors">
            <summary>
            Specifies all non-public constructors.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicMethods">
            <summary>
            Specifies all public methods.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicMethods">
            <summary>
            Specifies all non-public methods.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields">
            <summary>
            Specifies all public fields.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicFields">
            <summary>
            Specifies all non-public fields.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicNestedTypes">
            <summary>
            Specifies all public nested types.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicNestedTypes">
            <summary>
            Specifies all non-public nested types.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties">
            <summary>
            Specifies all public properties.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicProperties">
            <summary>
            Specifies all non-public properties.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicEvents">
            <summary>
            Specifies all public events.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicEvents">
            <summary>
            Specifies all non-public events.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.Interfaces">
            <summary>
            Specifies all interfaces implemented by the type.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All">
            <summary>
            Specifies all members.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Storage#EncryptionScopeResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Storage#EncryptionScopeResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageAccountData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageAccountData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Storage#BlobContainerResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Storage#BlobContainerResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#BlobContainerData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#BlobContainerData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobContainerData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobContainerData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobContainerData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#BlobContainerData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#BlobContainerData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobContainerData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobContainerData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobContainerResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobContainerData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#BlobInventoryPolicyData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#BlobInventoryPolicyData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobInventoryPolicyData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobInventoryPolicyData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobInventoryPolicyData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#BlobInventoryPolicyData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#BlobInventoryPolicyData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobInventoryPolicyData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobInventoryPolicyData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobInventoryPolicyResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobInventoryPolicyData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#BlobServiceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#BlobServiceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobServiceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobServiceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobServiceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#BlobServiceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#BlobServiceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobServiceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobServiceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.BlobServiceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#BlobServiceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#DeletedAccountData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#DeletedAccountData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#DeletedAccountData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#DeletedAccountData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#DeletedAccountData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#DeletedAccountData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#DeletedAccountData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#DeletedAccountData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#DeletedAccountData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.DeletedAccountResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#DeletedAccountData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#EncryptionScopeData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#EncryptionScopeData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#EncryptionScopeData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#EncryptionScopeData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#EncryptionScopeData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#EncryptionScopeData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#EncryptionScopeData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#EncryptionScopeData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#EncryptionScopeData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.EncryptionScopeResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#EncryptionScopeData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#FileServiceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#FileServiceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#FileServiceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#FileServiceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#FileServiceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#FileServiceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#FileServiceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#FileServiceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#FileServiceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileServiceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#FileServiceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Storage#FileShareResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Storage#FileShareResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#FileShareData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#FileShareData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#FileShareData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#FileShareData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#FileShareData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#FileShareData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#FileShareData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#FileShareData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#FileShareData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.FileShareResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#FileShareData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#ImmutabilityPolicyData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#ImmutabilityPolicyData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#ImmutabilityPolicyData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#ImmutabilityPolicyData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#ImmutabilityPolicyData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#ImmutabilityPolicyData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#ImmutabilityPolicyData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#ImmutabilityPolicyData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#ImmutabilityPolicyData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ImmutabilityPolicyResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#ImmutabilityPolicyData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
            <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary><returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
        </member>
        <member name="P:Azure.ResourceManager.Storage.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
            <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary><returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ChangeTrackingDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ChangeTrackingList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Storage#ObjectReplicationPolicyResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Storage#ObjectReplicationPolicyResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#ObjectReplicationPolicyData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#ObjectReplicationPolicyData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#ObjectReplicationPolicyData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#ObjectReplicationPolicyData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#ObjectReplicationPolicyData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#ObjectReplicationPolicyData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#ObjectReplicationPolicyData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#ObjectReplicationPolicyData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#ObjectReplicationPolicyData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.ObjectReplicationPolicyResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#ObjectReplicationPolicyData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#QueueServiceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#QueueServiceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#QueueServiceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#QueueServiceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#QueueServiceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#QueueServiceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#QueueServiceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#QueueServiceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#QueueServiceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.QueueServiceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#QueueServiceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Storage#StorageAccountResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Storage#StorageAccountResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageAccountData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageAccountData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Storage#StorageAccountLocalUserResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Storage#StorageAccountLocalUserResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageAccountLocalUserData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageAccountLocalUserData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountLocalUserData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountLocalUserData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountLocalUserData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageAccountLocalUserData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageAccountLocalUserData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountLocalUserData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountLocalUserData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountLocalUserResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountLocalUserData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageAccountManagementPolicyData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageAccountManagementPolicyData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountManagementPolicyData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountManagementPolicyData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountManagementPolicyData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageAccountManagementPolicyData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageAccountManagementPolicyData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountManagementPolicyData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountManagementPolicyData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageAccountManagementPolicyResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageAccountManagementPolicyData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Storage#StoragePrivateEndpointConnectionResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Storage#StoragePrivateEndpointConnectionResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StoragePrivateEndpointConnectionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StoragePrivateEndpointConnectionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StoragePrivateEndpointConnectionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StoragePrivateEndpointConnectionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StoragePrivateEndpointConnectionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StoragePrivateEndpointConnectionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StoragePrivateEndpointConnectionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StoragePrivateEndpointConnectionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StoragePrivateEndpointConnectionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StoragePrivateEndpointConnectionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StoragePrivateEndpointConnectionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Storage#StorageQueueResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Storage#StorageQueueResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageQueueData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageQueueData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageQueueData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageQueueData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageQueueData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageQueueData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#StorageQueueData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageQueueData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageQueueData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.StorageQueueResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#StorageQueueData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Storage#TableResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Storage#TableResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#TableData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#TableData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#TableData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#TableData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#TableData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#TableData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#TableData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#TableData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#TableData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#TableData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#TableServiceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#TableServiceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#TableServiceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#TableServiceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#TableServiceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#TableServiceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#TableServiceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#TableServiceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#TableServiceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.TableServiceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#TableServiceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageTableAccessPolicy}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageTableAccessPolicy}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageTableAccessPolicy}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageTableAccessPolicy}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableAccessPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageTableAccessPolicy}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#AccountImmutabilityPolicy}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#AccountImmutabilityPolicy}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#AccountImmutabilityPolicy}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#AccountImmutabilityPolicy}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountImmutabilityPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#AccountImmutabilityPolicy}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountSasContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#AccountSasContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountSasContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#AccountSasContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountSasContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#AccountSasContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountSasContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#AccountSasContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.AccountSasContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#AccountSasContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobContainerImmutabilityPolicy}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobContainerImmutabilityPolicy}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobContainerImmutabilityPolicy}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobContainerImmutabilityPolicy}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobContainerImmutabilityPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobContainerImmutabilityPolicy}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicyDefinition}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicyDefinition}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicyDefinition}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicyDefinition}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyDefinition.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicyDefinition}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicyFilter}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicyFilter}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicyFilter}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicyFilter}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyFilter.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicyFilter}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicyRule}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicyRule}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicyRule}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicyRule}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicyRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicyRule}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicySchema}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicySchema}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicySchema}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicySchema}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobInventoryPolicySchema.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobInventoryPolicySchema}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobRestoreContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobRestoreContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobRestoreContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobRestoreContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobRestoreContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreRange.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobRestoreRange}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreRange.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobRestoreRange}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreRange.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobRestoreRange}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreRange.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobRestoreRange}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreRange.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobRestoreRange}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreStatus.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobRestoreStatus}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreStatus.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobRestoreStatus}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobRestoreStatus}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobRestoreStatus}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobRestoreStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobRestoreStatus}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobServiceChangeFeed}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobServiceChangeFeed}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobServiceChangeFeed}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobServiceChangeFeed}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobServiceChangeFeed.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobServiceChangeFeed}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobServiceItems.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobServiceItems}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobServiceItems.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#BlobServiceItems}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobServiceItems.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobServiceItems}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobServiceItems.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobServiceItems}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.BlobServiceItems.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#BlobServiceItems}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DateAfterCreation.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#DateAfterCreation}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DateAfterCreation.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#DateAfterCreation}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DateAfterCreation.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#DateAfterCreation}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DateAfterCreation.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#DateAfterCreation}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DateAfterCreation.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#DateAfterCreation}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DateAfterModification.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#DateAfterModification}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DateAfterModification.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#DateAfterModification}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DateAfterModification.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#DateAfterModification}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DateAfterModification.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#DateAfterModification}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DateAfterModification.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#DateAfterModification}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeletedAccountListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#DeletedAccountListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeletedAccountListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#DeletedAccountListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeletedAccountListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#DeletedAccountListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeletedAccountListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#DeletedAccountListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeletedAccountListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#DeletedAccountListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeletedShare.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#DeletedShare}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeletedShare.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#DeletedShare}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeletedShare.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#DeletedShare}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeletedShare.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#DeletedShare}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeletedShare.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#DeletedShare}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#DeleteRetentionPolicy}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#DeleteRetentionPolicy}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#DeleteRetentionPolicy}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#DeleteRetentionPolicy}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.DeleteRetentionPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#DeleteRetentionPolicy}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#EncryptionScopeKeyVaultProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#EncryptionScopeKeyVaultProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#EncryptionScopeKeyVaultProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#EncryptionScopeKeyVaultProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeKeyVaultProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#EncryptionScopeKeyVaultProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#EncryptionScopeListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#EncryptionScopeListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#EncryptionScopeListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#EncryptionScopeListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.EncryptionScopeListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#EncryptionScopeListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileServiceItems.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#FileServiceItems}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileServiceItems.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#FileServiceItems}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileServiceItems.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#FileServiceItems}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileServiceItems.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#FileServiceItems}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileServiceItems.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#FileServiceItems}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareItems.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#FileShareItems}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareItems.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#FileShareItems}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareItems.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#FileShareItems}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareItems.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#FileShareItems}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FileShareItems.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#FileShareItems}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#FilesIdentityBasedAuthentication}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#FilesIdentityBasedAuthentication}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#FilesIdentityBasedAuthentication}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#FilesIdentityBasedAuthentication}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.FilesIdentityBasedAuthentication.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#FilesIdentityBasedAuthentication}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#GeoReplicationStatistics}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#GeoReplicationStatistics}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#GeoReplicationStatistics}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#GeoReplicationStatistics}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GeoReplicationStatistics.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#GeoReplicationStatistics}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GetAccountSasResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#GetAccountSasResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GetAccountSasResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#GetAccountSasResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GetAccountSasResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#GetAccountSasResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GetAccountSasResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#GetAccountSasResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GetAccountSasResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#GetAccountSasResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GetServiceSasResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#GetServiceSasResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GetServiceSasResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#GetServiceSasResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GetServiceSasResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#GetServiceSasResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GetServiceSasResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#GetServiceSasResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.GetServiceSasResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#GetServiceSasResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageAccount.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ImmutableStorageAccount}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageAccount.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ImmutableStorageAccount}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageAccount.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ImmutableStorageAccount}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageAccount.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ImmutableStorageAccount}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageAccount.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ImmutableStorageAccount}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ImmutableStorageWithVersioning}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ImmutableStorageWithVersioning}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ImmutableStorageWithVersioning}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ImmutableStorageWithVersioning}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ImmutableStorageWithVersioning.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ImmutableStorageWithVersioning}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LastAccessTimeTrackingPolicy}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LastAccessTimeTrackingPolicy}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LastAccessTimeTrackingPolicy}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LastAccessTimeTrackingPolicy}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LastAccessTimeTrackingPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LastAccessTimeTrackingPolicy}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LeaseContainerContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LeaseContainerContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LeaseContainerContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LeaseContainerContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LeaseContainerContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerResponse.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LeaseContainerResponse}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerResponse.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LeaseContainerResponse}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerResponse.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LeaseContainerResponse}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerResponse.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LeaseContainerResponse}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseContainerResponse.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LeaseContainerResponse}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LeaseShareContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LeaseShareContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LeaseShareContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LeaseShareContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LeaseShareContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareResponse.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LeaseShareResponse}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareResponse.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LeaseShareResponse}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareResponse.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LeaseShareResponse}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareResponse.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LeaseShareResponse}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LeaseShareResponse.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LeaseShareResponse}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHold.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LegalHold}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHold.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LegalHold}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHold.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LegalHold}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHold.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LegalHold}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHold.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LegalHold}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHoldProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LegalHoldProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHoldProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LegalHoldProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHoldProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LegalHoldProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHoldProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LegalHoldProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHoldProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LegalHoldProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHoldTag.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LegalHoldTag}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHoldTag.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LegalHoldTag}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHoldTag.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LegalHoldTag}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHoldTag.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LegalHoldTag}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LegalHoldTag.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LegalHoldTag}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListBlobInventoryPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ListBlobInventoryPolicy}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListBlobInventoryPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ListBlobInventoryPolicy}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListBlobInventoryPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListBlobInventoryPolicy}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListBlobInventoryPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListBlobInventoryPolicy}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListBlobInventoryPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListBlobInventoryPolicy}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListContainerItems.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ListContainerItems}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListContainerItems.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ListContainerItems}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListContainerItems.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListContainerItems}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListContainerItems.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListContainerItems}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListContainerItems.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListContainerItems}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListQueueResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ListQueueResource}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListQueueResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ListQueueResource}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListQueueResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListQueueResource}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListQueueResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListQueueResource}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListQueueResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListQueueResource}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListQueueServices.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ListQueueServices}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListQueueServices.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ListQueueServices}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListQueueServices.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListQueueServices}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListQueueServices.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListQueueServices}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListQueueServices.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListQueueServices}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListTableResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ListTableResource}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListTableResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ListTableResource}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListTableResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListTableResource}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListTableResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListTableResource}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListTableResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListTableResource}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListTableServices.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ListTableServices}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListTableServices.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ListTableServices}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListTableServices.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListTableServices}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListTableServices.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListTableServices}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ListTableServices.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ListTableServices}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUserKeys.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LocalUserKeys}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUserKeys.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LocalUserKeys}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUserKeys.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LocalUserKeys}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUserKeys.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LocalUserKeys}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUserKeys.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LocalUserKeys}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LocalUserRegeneratePasswordResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LocalUserRegeneratePasswordResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LocalUserRegeneratePasswordResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LocalUserRegeneratePasswordResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUserRegeneratePasswordResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LocalUserRegeneratePasswordResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUsers.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LocalUsers}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUsers.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#LocalUsers}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUsers.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LocalUsers}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUsers.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LocalUsers}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.LocalUsers.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#LocalUsers}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyAction.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicyAction}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyAction.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicyAction}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyAction.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyAction}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyAction.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyAction}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyAction.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyAction}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicyBaseBlob}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicyBaseBlob}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyBaseBlob}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyBaseBlob}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyBaseBlob.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyBaseBlob}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicyDefinition}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicyDefinition}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyDefinition}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyDefinition}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyDefinition.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyDefinition}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicyFilter}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicyFilter}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyFilter}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyFilter}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyFilter.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyFilter}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicyRule}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicyRule}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyRule}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyRule}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyRule}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicySchema.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicySchema}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicySchema.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicySchema}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicySchema.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicySchema}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicySchema.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicySchema}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicySchema.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicySchema}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicySnapShot}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicySnapShot}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicySnapShot}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicySnapShot}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicySnapShot.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicySnapShot}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicyTagFilter}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicyTagFilter}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyTagFilter}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyTagFilter}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyTagFilter.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyTagFilter}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyVersion.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicyVersion}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyVersion.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ManagementPolicyVersion}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyVersion.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyVersion}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyVersion.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyVersion}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ManagementPolicyVersion.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ManagementPolicyVersion}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.Multichannel.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#Multichannel}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.Multichannel.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#Multichannel}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.Multichannel.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#Multichannel}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.Multichannel.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#Multichannel}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.Multichannel.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#Multichannel}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicies.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ObjectReplicationPolicies}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicies.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ObjectReplicationPolicies}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicies.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ObjectReplicationPolicies}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicies.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ObjectReplicationPolicies}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicies.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ObjectReplicationPolicies}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyFilter.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ObjectReplicationPolicyFilter}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyFilter.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ObjectReplicationPolicyFilter}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyFilter.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ObjectReplicationPolicyFilter}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyFilter.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ObjectReplicationPolicyFilter}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyFilter.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ObjectReplicationPolicyFilter}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ObjectReplicationPolicyRule}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ObjectReplicationPolicyRule}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ObjectReplicationPolicyRule}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ObjectReplicationPolicyRule}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ObjectReplicationPolicyRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ObjectReplicationPolicyRule}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ProtectedAppendWritesHistory}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ProtectedAppendWritesHistory}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ProtectedAppendWritesHistory}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ProtectedAppendWritesHistory}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ProtectedAppendWritesHistory.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ProtectedAppendWritesHistory}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ProtocolSettings.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ProtocolSettings}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ProtocolSettings.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ProtocolSettings}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ProtocolSettings.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ProtocolSettings}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ProtocolSettings.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ProtocolSettings}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ProtocolSettings.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ProtocolSettings}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RestorePolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#RestorePolicy}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RestorePolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#RestorePolicy}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RestorePolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#RestorePolicy}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RestorePolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#RestorePolicy}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.RestorePolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#RestorePolicy}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ServiceSasContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#ServiceSasContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ServiceSasContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ServiceSasContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.ServiceSasContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#ServiceSasContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.SmbSetting.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#SmbSetting}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.SmbSetting.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#SmbSetting}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.SmbSetting.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#SmbSetting}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.SmbSetting.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#SmbSetting}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.SmbSetting.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#SmbSetting}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountCreateOrUpdateContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountCreateOrUpdateContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountCreateOrUpdateContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountCreateOrUpdateContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountCreateOrUpdateContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountCreateOrUpdateContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryption.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountEncryption}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryption.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountEncryption}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryption.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountEncryption}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryption.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountEncryption}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryption.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountEncryption}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionIdentity.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountEncryptionIdentity}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionIdentity.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountEncryptionIdentity}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionIdentity.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountEncryptionIdentity}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionIdentity.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountEncryptionIdentity}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionIdentity.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountEncryptionIdentity}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionServices.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountEncryptionServices}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionServices.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountEncryptionServices}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionServices.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountEncryptionServices}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionServices.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountEncryptionServices}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEncryptionServices.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountEncryptionServices}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountEndpoints}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountEndpoints}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountEndpoints}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountEndpoints}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountEndpoints.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountEndpoints}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountGetKeysResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountGetKeysResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountGetKeysResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountGetKeysResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountGetKeysResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountGetKeysResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountGetKeysResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountGetKeysResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountGetKeysResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountGetKeysResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountInternetEndpoints}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountInternetEndpoints}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountInternetEndpoints}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountInternetEndpoints}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountInternetEndpoints.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountInternetEndpoints}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountIPRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountIPRule}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountIPRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountIPRule}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountIPRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountIPRule}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountIPRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountIPRule}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountIPRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountIPRule}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKey.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountKey}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKey.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountKey}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKey.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountKey}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKey.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountKey}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKey.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountKey}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountKeyCreationTime}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountKeyCreationTime}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountKeyCreationTime}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountKeyCreationTime}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyCreationTime.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountKeyCreationTime}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountKeyPolicy}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountKeyPolicy}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountKeyPolicy}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountKeyPolicy}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountKeyPolicy}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountKeyVaultProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountKeyVaultProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountKeyVaultProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountKeyVaultProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountKeyVaultProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountKeyVaultProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountMicrosoftEndpoints}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountMicrosoftEndpoints}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountMicrosoftEndpoints}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountMicrosoftEndpoints}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountMicrosoftEndpoints.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountMicrosoftEndpoints}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountNameAvailabilityContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountNameAvailabilityContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountNameAvailabilityContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountNameAvailabilityContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountNameAvailabilityContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountNameAvailabilityResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountNameAvailabilityResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountNameAvailabilityResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountNameAvailabilityResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNameAvailabilityResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountNameAvailabilityResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountNetworkRuleSet}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountNetworkRuleSet}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountNetworkRuleSet}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountNetworkRuleSet}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountNetworkRuleSet.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountNetworkRuleSet}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountPatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountPatch}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountPatch.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountPatch}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountPatch}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountPatch}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountPatch.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountPatch}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountRegenerateKeyContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountRegenerateKeyContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountRegenerateKeyContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountRegenerateKeyContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountRegenerateKeyContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountRegenerateKeyContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountResourceAccessRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountResourceAccessRule}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountResourceAccessRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountResourceAccessRule}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountResourceAccessRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountResourceAccessRule}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountResourceAccessRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountResourceAccessRule}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountResourceAccessRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountResourceAccessRule}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountSasPolicy}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountSasPolicy}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountSasPolicy}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountSasPolicy}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSasPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountSasPolicy}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountSkuConversionStatus}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountSkuConversionStatus}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountSkuConversionStatus}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountSkuConversionStatus}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountSkuConversionStatus.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountSkuConversionStatus}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountVirtualNetworkRule}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageAccountVirtualNetworkRule}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountVirtualNetworkRule}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountVirtualNetworkRule}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageAccountVirtualNetworkRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageAccountVirtualNetworkRule}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageActiveDirectoryProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageActiveDirectoryProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageActiveDirectoryProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageActiveDirectoryProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageActiveDirectoryProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageActiveDirectoryProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCorsRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageCorsRule}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCorsRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageCorsRule}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCorsRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageCorsRule}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCorsRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageCorsRule}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCorsRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageCorsRule}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCorsRules.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageCorsRules}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCorsRules.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageCorsRules}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCorsRules.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageCorsRules}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCorsRules.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageCorsRules}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCorsRules.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageCorsRules}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCustomDomain.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageCustomDomain}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCustomDomain.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageCustomDomain}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCustomDomain.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageCustomDomain}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCustomDomain.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageCustomDomain}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageCustomDomain.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageCustomDomain}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageEncryptionService.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageEncryptionService}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageEncryptionService.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageEncryptionService}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageEncryptionService.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageEncryptionService}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageEncryptionService.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageEncryptionService}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageEncryptionService.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageEncryptionService}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePermissionScope.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StoragePermissionScope}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePermissionScope.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StoragePermissionScope}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePermissionScope.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StoragePermissionScope}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePermissionScope.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StoragePermissionScope}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePermissionScope.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StoragePermissionScope}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StoragePrivateEndpointConnectionListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StoragePrivateEndpointConnectionListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StoragePrivateEndpointConnectionListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StoragePrivateEndpointConnectionListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateEndpointConnectionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StoragePrivateEndpointConnectionListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StoragePrivateLinkResourceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StoragePrivateLinkResourceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StoragePrivateLinkResourceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StoragePrivateLinkResourceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StoragePrivateLinkResourceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StoragePrivateLinkResourceListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StoragePrivateLinkResourceListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StoragePrivateLinkResourceListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StoragePrivateLinkResourceListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkResourceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StoragePrivateLinkResourceListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StoragePrivateLinkServiceConnectionState}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StoragePrivateLinkServiceConnectionState}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StoragePrivateLinkServiceConnectionState}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StoragePrivateLinkServiceConnectionState}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StoragePrivateLinkServiceConnectionState.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StoragePrivateLinkServiceConnectionState}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRoutingPreference.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageRoutingPreference}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRoutingPreference.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageRoutingPreference}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRoutingPreference.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageRoutingPreference}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRoutingPreference.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageRoutingPreference}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageRoutingPreference.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageRoutingPreference}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageServiceAccessPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageServiceAccessPolicy}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageServiceAccessPolicy.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageServiceAccessPolicy}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageServiceAccessPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageServiceAccessPolicy}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageServiceAccessPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageServiceAccessPolicy}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageServiceAccessPolicy.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageServiceAccessPolicy}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSignedIdentifier.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageSignedIdentifier}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSignedIdentifier.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageSignedIdentifier}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSignedIdentifier.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSignedIdentifier}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSignedIdentifier.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSignedIdentifier}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSignedIdentifier.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSignedIdentifier}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSku.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageSku}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSku.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageSku}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSku.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSku}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSku.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSku}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSku.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSku}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuCapability.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageSkuCapability}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuCapability.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageSkuCapability}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuCapability.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSkuCapability}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuCapability.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSkuCapability}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuCapability.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSkuCapability}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuInformation.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageSkuInformation}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuInformation.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageSkuInformation}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuInformation.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSkuInformation}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuInformation.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSkuInformation}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuInformation.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSkuInformation}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageSkuListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageSkuListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSkuListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSkuListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSkuListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuRestriction.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageSkuRestriction}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuRestriction.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageSkuRestriction}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuRestriction.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSkuRestriction}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuRestriction.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSkuRestriction}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSkuRestriction.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSkuRestriction}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSshPublicKey.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageSshPublicKey}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSshPublicKey.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageSshPublicKey}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSshPublicKey.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSshPublicKey}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSshPublicKey.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSshPublicKey}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageSshPublicKey.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageSshPublicKey}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageTableSignedIdentifier}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageTableSignedIdentifier}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageTableSignedIdentifier}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageTableSignedIdentifier}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageTableSignedIdentifier.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageTableSignedIdentifier}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageUsage.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageUsage}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageUsage.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageUsage}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageUsage.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageUsage}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageUsage.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageUsage}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageUsage.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageUsage}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageUsageName.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageUsageName}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageUsageName.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#StorageUsageName}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageUsageName.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageUsageName}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageUsageName.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageUsageName}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.StorageUsageName.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#StorageUsageName}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#UpdateHistoryEntry}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#UpdateHistoryEntry}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#UpdateHistoryEntry}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#UpdateHistoryEntry}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.UpdateHistoryEntry.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#UpdateHistoryEntry}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.UsageListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#UsageListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.UsageListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Storage#Models#UsageListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.UsageListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#UsageListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.UsageListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#UsageListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Storage.Models.UsageListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Storage#Models#UsageListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.Pipeline.TaskExtensions.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary><returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
    </members>
</doc>
